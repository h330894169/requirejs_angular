(function (global, factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        module.exports = global.document ? factory(global, true) : function (w) {
            if (!w.document) {
                throw new Error('jQuery requires a window with a document');
            }
            return factory(w);
        };
    } else {
        factory(global);
    }
}(typeof window !== 'undefined' ? window : this, function (window, noGlobal) {
    var deletedIds = [];
    var document = window.document;
    var slice = deletedIds.slice;
    var concat = deletedIds.concat;
    var push = deletedIds.push;
    var indexOf = deletedIds.indexOf;
    var class2type = {};
    var toString = class2type.toString;
    var hasOwn = class2type.hasOwnProperty;
    var support = {};
    var version = '1.12.3', jQuery = function (selector, context) {
            return new jQuery.fn.init(selector, context);
        }, rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, rmsPrefix = /^-ms-/, rdashAlpha = /-([\da-z])/gi, fcamelCase = function (all, letter) {
            return letter.toUpperCase();
        };
    jQuery.fn = jQuery.prototype = {
        jquery: version,
        constructor: jQuery,
        selector: '',
        length: 0,
        toArray: function () {
            return slice.call(this);
        },
        get: function (num) {
            return num != null ? num < 0 ? this[num + this.length] : this[num] : slice.call(this);
        },
        pushStack: function (elems) {
            var ret = jQuery.merge(this.constructor(), elems);
            ret.prevObject = this;
            ret.context = this.context;
            return ret;
        },
        each: function (callback) {
            return jQuery.each(this, callback);
        },
        map: function (callback) {
            return this.pushStack(jQuery.map(this, function (elem, i) {
                return callback.call(elem, i, elem);
            }));
        },
        slice: function () {
            return this.pushStack(slice.apply(this, arguments));
        },
        first: function () {
            return this.eq(0);
        },
        last: function () {
            return this.eq(-1);
        },
        eq: function (i) {
            var len = this.length, j = +i + (i < 0 ? len : 0);
            return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
        },
        end: function () {
            return this.prevObject || this.constructor();
        },
        push: push,
        sort: deletedIds.sort,
        splice: deletedIds.splice
    };
    jQuery.extend = jQuery.fn.extend = function () {
        var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;
        if (typeof target === 'boolean') {
            deep = target;
            target = arguments[i] || {};
            i++;
        }
        if (typeof target !== 'object' && !jQuery.isFunction(target)) {
            target = {};
        }
        if (i === length) {
            target = this;
            i--;
        }
        for (; i < length; i++) {
            if ((options = arguments[i]) != null) {
                for (name in options) {
                    src = target[name];
                    copy = options[name];
                    if (target === copy) {
                        continue;
                    }
                    if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {
                        if (copyIsArray) {
                            copyIsArray = false;
                            clone = src && jQuery.isArray(src) ? src : [];
                        } else {
                            clone = src && jQuery.isPlainObject(src) ? src : {};
                        }
                        target[name] = jQuery.extend(deep, clone, copy);
                    } else if (copy !== undefined) {
                        target[name] = copy;
                    }
                }
            }
        }
        return target;
    };
    jQuery.extend({
        expando: 'jQuery' + (version + Math.random()).replace(/\D/g, ''),
        isReady: true,
        error: function (msg) {
            throw new Error(msg);
        },
        noop: function () {
        },
        isFunction: function (obj) {
            return jQuery.type(obj) === 'function';
        },
        isArray: Array.isArray || function (obj) {
            return jQuery.type(obj) === 'array';
        },
        isWindow: function (obj) {
            return obj != null && obj == obj.window;
        },
        isNumeric: function (obj) {
            var realStringObj = obj && obj.toString();
            return !jQuery.isArray(obj) && realStringObj - parseFloat(realStringObj) + 1 >= 0;
        },
        isEmptyObject: function (obj) {
            var name;
            for (name in obj) {
                return false;
            }
            return true;
        },
        isPlainObject: function (obj) {
            var key;
            if (!obj || jQuery.type(obj) !== 'object' || obj.nodeType || jQuery.isWindow(obj)) {
                return false;
            }
            try {
                if (obj.constructor && !hasOwn.call(obj, 'constructor') && !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {
                    return false;
                }
            } catch (e) {
                return false;
            }
            if (!support.ownFirst) {
                for (key in obj) {
                    return hasOwn.call(obj, key);
                }
            }
            for (key in obj) {
            }
            return key === undefined || hasOwn.call(obj, key);
        },
        type: function (obj) {
            if (obj == null) {
                return obj + '';
            }
            return typeof obj === 'object' || typeof obj === 'function' ? class2type[toString.call(obj)] || 'object' : typeof obj;
        },
        globalEval: function (data) {
            if (data && jQuery.trim(data)) {
                (window.execScript || function (data) {
                    window['eval'].call(window, data);
                })(data);
            }
        },
        camelCase: function (string) {
            return string.replace(rmsPrefix, 'ms-').replace(rdashAlpha, fcamelCase);
        },
        nodeName: function (elem, name) {
            return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
        },
        each: function (obj, callback) {
            var length, i = 0;
            if (isArrayLike(obj)) {
                length = obj.length;
                for (; i < length; i++) {
                    if (callback.call(obj[i], i, obj[i]) === false) {
                        break;
                    }
                }
            } else {
                for (i in obj) {
                    if (callback.call(obj[i], i, obj[i]) === false) {
                        break;
                    }
                }
            }
            return obj;
        },
        trim: function (text) {
            return text == null ? '' : (text + '').replace(rtrim, '');
        },
        makeArray: function (arr, results) {
            var ret = results || [];
            if (arr != null) {
                if (isArrayLike(Object(arr))) {
                    jQuery.merge(ret, typeof arr === 'string' ? [arr] : arr);
                } else {
                    push.call(ret, arr);
                }
            }
            return ret;
        },
        inArray: function (elem, arr, i) {
            var len;
            if (arr) {
                if (indexOf) {
                    return indexOf.call(arr, elem, i);
                }
                len = arr.length;
                i = i ? i < 0 ? Math.max(0, len + i) : i : 0;
                for (; i < len; i++) {
                    if (i in arr && arr[i] === elem) {
                        return i;
                    }
                }
            }
            return -1;
        },
        merge: function (first, second) {
            var len = +second.length, j = 0, i = first.length;
            while (j < len) {
                first[i++] = second[j++];
            }
            if (len !== len) {
                while (second[j] !== undefined) {
                    first[i++] = second[j++];
                }
            }
            first.length = i;
            return first;
        },
        grep: function (elems, callback, invert) {
            var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = !invert;
            for (; i < length; i++) {
                callbackInverse = !callback(elems[i], i);
                if (callbackInverse !== callbackExpect) {
                    matches.push(elems[i]);
                }
            }
            return matches;
        },
        map: function (elems, callback, arg) {
            var length, value, i = 0, ret = [];
            if (isArrayLike(elems)) {
                length = elems.length;
                for (; i < length; i++) {
                    value = callback(elems[i], i, arg);
                    if (value != null) {
                        ret.push(value);
                    }
                }
            } else {
                for (i in elems) {
                    value = callback(elems[i], i, arg);
                    if (value != null) {
                        ret.push(value);
                    }
                }
            }
            return concat.apply([], ret);
        },
        guid: 1,
        proxy: function (fn, context) {
            var args, proxy, tmp;
            if (typeof context === 'string') {
                tmp = fn[context];
                context = fn;
                fn = tmp;
            }
            if (!jQuery.isFunction(fn)) {
                return undefined;
            }
            args = slice.call(arguments, 2);
            proxy = function () {
                return fn.apply(context || this, args.concat(slice.call(arguments)));
            };
            proxy.guid = fn.guid = fn.guid || jQuery.guid++;
            return proxy;
        },
        now: function () {
            return +new Date();
        },
        support: support
    });
    if (typeof Symbol === 'function') {
        jQuery.fn[Symbol.iterator] = deletedIds[Symbol.iterator];
    }
    jQuery.each('Boolean Number String Function Array Date RegExp Object Error Symbol'.split(' '), function (i, name) {
        class2type['[object ' + name + ']'] = name.toLowerCase();
    });
    function isArrayLike(obj) {
        var length = !!obj && 'length' in obj && obj.length, type = jQuery.type(obj);
        if (type === 'function' || jQuery.isWindow(obj)) {
            return false;
        }
        return type === 'array' || length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj;
    }
    var Sizzle = function (window) {
        var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = 'sizzle' + 1 * new Date(), preferredDoc = window.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), sortOrder = function (a, b) {
                if (a === b) {
                    hasDuplicate = true;
                }
                return 0;
            }, MAX_NEGATIVE = 1 << 31, hasOwn = {}.hasOwnProperty, arr = [], pop = arr.pop, push_native = arr.push, push = arr.push, slice = arr.slice, indexOf = function (list, elem) {
                var i = 0, len = list.length;
                for (; i < len; i++) {
                    if (list[i] === elem) {
                        return i;
                    }
                }
                return -1;
            }, booleans = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped', whitespace = '[\\x20\\t\\r\\n\\f]', identifier = '(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+', attributes = '\\[' + whitespace + '*(' + identifier + ')(?:' + whitespace + '*([*^$|!~]?=)' + whitespace + '*(?:\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)"|(' + identifier + '))|)' + whitespace + '*\\]', pseudos = ':(' + identifier + ')(?:\\((' + '(\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)")|' + '((?:\\\\.|[^\\\\()[\\]]|' + attributes + ')*)|' + '.*' + ')\\)|)', rwhitespace = new RegExp(whitespace + '+', 'g'), rtrim = new RegExp('^' + whitespace + '+|((?:^|[^\\\\])(?:\\\\.)*)' + whitespace + '+$', 'g'), rcomma = new RegExp('^' + whitespace + '*,' + whitespace + '*'), rcombinators = new RegExp('^' + whitespace + '*([>+~]|' + whitespace + ')' + whitespace + '*'), rattributeQuotes = new RegExp('=' + whitespace + '*([^\\]\'"]*?)' + whitespace + '*\\]', 'g'), rpseudo = new RegExp(pseudos), ridentifier = new RegExp('^' + identifier + '$'), matchExpr = {
                'ID': new RegExp('^#(' + identifier + ')'),
                'CLASS': new RegExp('^\\.(' + identifier + ')'),
                'TAG': new RegExp('^(' + identifier + '|[*])'),
                'ATTR': new RegExp('^' + attributes),
                'PSEUDO': new RegExp('^' + pseudos),
                'CHILD': new RegExp('^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' + whitespace + '*(even|odd|(([+-]|)(\\d*)n|)' + whitespace + '*(?:([+-]|)' + whitespace + '*(\\d+)|))' + whitespace + '*\\)|)', 'i'),
                'bool': new RegExp('^(?:' + booleans + ')$', 'i'),
                'needsContext': new RegExp('^' + whitespace + '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' + whitespace + '*((?:-\\d)?\\d*)' + whitespace + '*\\)|)(?=[^-]|$)', 'i')
            }, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rnative = /^[^{]+\{\s*\[native \w/, rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rsibling = /[+~]/, rescape = /'|\\/g, runescape = new RegExp('\\\\([\\da-f]{1,6}' + whitespace + '?|(' + whitespace + ')|.)', 'ig'), funescape = function (_, escaped, escapedWhitespace) {
                var high = '0x' + escaped - 65536;
                return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);
            }, unloadHandler = function () {
                setDocument();
            };
        try {
            push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);
            arr[preferredDoc.childNodes.length].nodeType;
        } catch (e) {
            push = {
                apply: arr.length ? function (target, els) {
                    push_native.apply(target, slice.call(els));
                } : function (target, els) {
                    var j = target.length, i = 0;
                    while (target[j++] = els[i++]) {
                    }
                    target.length = j - 1;
                }
            };
        }
        function Sizzle(selector, context, results, seed) {
            var m, i, elem, nid, nidselect, match, groups, newSelector, newContext = context && context.ownerDocument, nodeType = context ? context.nodeType : 9;
            results = results || [];
            if (typeof selector !== 'string' || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
                return results;
            }
            if (!seed) {
                if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
                    setDocument(context);
                }
                context = context || document;
                if (documentIsHTML) {
                    if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {
                        if (m = match[1]) {
                            if (nodeType === 9) {
                                if (elem = context.getElementById(m)) {
                                    if (elem.id === m) {
                                        results.push(elem);
                                        return results;
                                    }
                                } else {
                                    return results;
                                }
                            } else {
                                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {
                                    results.push(elem);
                                    return results;
                                }
                            }
                        } else if (match[2]) {
                            push.apply(results, context.getElementsByTagName(selector));
                            return results;
                        } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
                            push.apply(results, context.getElementsByClassName(m));
                            return results;
                        }
                    }
                    if (support.qsa && !compilerCache[selector + ' '] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
                        if (nodeType !== 1) {
                            newContext = context;
                            newSelector = selector;
                        } else if (context.nodeName.toLowerCase() !== 'object') {
                            if (nid = context.getAttribute('id')) {
                                nid = nid.replace(rescape, '\\$&');
                            } else {
                                context.setAttribute('id', nid = expando);
                            }
                            groups = tokenize(selector);
                            i = groups.length;
                            nidselect = ridentifier.test(nid) ? '#' + nid : '[id=\'' + nid + '\']';
                            while (i--) {
                                groups[i] = nidselect + ' ' + toSelector(groups[i]);
                            }
                            newSelector = groups.join(',');
                            newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
                        }
                        if (newSelector) {
                            try {
                                push.apply(results, newContext.querySelectorAll(newSelector));
                                return results;
                            } catch (qsaError) {
                            } finally {
                                if (nid === expando) {
                                    context.removeAttribute('id');
                                }
                            }
                        }
                    }
                }
            }
            return select(selector.replace(rtrim, '$1'), context, results, seed);
        }
        function createCache() {
            var keys = [];
            function cache(key, value) {
                if (keys.push(key + ' ') > Expr.cacheLength) {
                    delete cache[keys.shift()];
                }
                return cache[key + ' '] = value;
            }
            return cache;
        }
        function markFunction(fn) {
            fn[expando] = true;
            return fn;
        }
        function assert(fn) {
            var div = document.createElement('div');
            try {
                return !!fn(div);
            } catch (e) {
                return false;
            } finally {
                if (div.parentNode) {
                    div.parentNode.removeChild(div);
                }
                div = null;
            }
        }
        function addHandle(attrs, handler) {
            var arr = attrs.split('|'), i = arr.length;
            while (i--) {
                Expr.attrHandle[arr[i]] = handler;
            }
        }
        function siblingCheck(a, b) {
            var cur = b && a, diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
            if (diff) {
                return diff;
            }
            if (cur) {
                while (cur = cur.nextSibling) {
                    if (cur === b) {
                        return -1;
                    }
                }
            }
            return a ? 1 : -1;
        }
        function createInputPseudo(type) {
            return function (elem) {
                var name = elem.nodeName.toLowerCase();
                return name === 'input' && elem.type === type;
            };
        }
        function createButtonPseudo(type) {
            return function (elem) {
                var name = elem.nodeName.toLowerCase();
                return (name === 'input' || name === 'button') && elem.type === type;
            };
        }
        function createPositionalPseudo(fn) {
            return markFunction(function (argument) {
                argument = +argument;
                return markFunction(function (seed, matches) {
                    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
                    while (i--) {
                        if (seed[j = matchIndexes[i]]) {
                            seed[j] = !(matches[j] = seed[j]);
                        }
                    }
                });
            });
        }
        function testContext(context) {
            return context && typeof context.getElementsByTagName !== 'undefined' && context;
        }
        support = Sizzle.support = {};
        isXML = Sizzle.isXML = function (elem) {
            var documentElement = elem && (elem.ownerDocument || elem).documentElement;
            return documentElement ? documentElement.nodeName !== 'HTML' : false;
        };
        setDocument = Sizzle.setDocument = function (node) {
            var hasCompare, parent, doc = node ? node.ownerDocument || node : preferredDoc;
            if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
                return document;
            }
            document = doc;
            docElem = document.documentElement;
            documentIsHTML = !isXML(document);
            if ((parent = document.defaultView) && parent.top !== parent) {
                if (parent.addEventListener) {
                    parent.addEventListener('unload', unloadHandler, false);
                } else if (parent.attachEvent) {
                    parent.attachEvent('onunload', unloadHandler);
                }
            }
            support.attributes = assert(function (div) {
                div.className = 'i';
                return !div.getAttribute('className');
            });
            support.getElementsByTagName = assert(function (div) {
                div.appendChild(document.createComment(''));
                return !div.getElementsByTagName('*').length;
            });
            support.getElementsByClassName = rnative.test(document.getElementsByClassName);
            support.getById = assert(function (div) {
                docElem.appendChild(div).id = expando;
                return !document.getElementsByName || !document.getElementsByName(expando).length;
            });
            if (support.getById) {
                Expr.find['ID'] = function (id, context) {
                    if (typeof context.getElementById !== 'undefined' && documentIsHTML) {
                        var m = context.getElementById(id);
                        return m ? [m] : [];
                    }
                };
                Expr.filter['ID'] = function (id) {
                    var attrId = id.replace(runescape, funescape);
                    return function (elem) {
                        return elem.getAttribute('id') === attrId;
                    };
                };
            } else {
                delete Expr.find['ID'];
                Expr.filter['ID'] = function (id) {
                    var attrId = id.replace(runescape, funescape);
                    return function (elem) {
                        var node = typeof elem.getAttributeNode !== 'undefined' && elem.getAttributeNode('id');
                        return node && node.value === attrId;
                    };
                };
            }
            Expr.find['TAG'] = support.getElementsByTagName ? function (tag, context) {
                if (typeof context.getElementsByTagName !== 'undefined') {
                    return context.getElementsByTagName(tag);
                } else if (support.qsa) {
                    return context.querySelectorAll(tag);
                }
            } : function (tag, context) {
                var elem, tmp = [], i = 0, results = context.getElementsByTagName(tag);
                if (tag === '*') {
                    while (elem = results[i++]) {
                        if (elem.nodeType === 1) {
                            tmp.push(elem);
                        }
                    }
                    return tmp;
                }
                return results;
            };
            Expr.find['CLASS'] = support.getElementsByClassName && function (className, context) {
                if (typeof context.getElementsByClassName !== 'undefined' && documentIsHTML) {
                    return context.getElementsByClassName(className);
                }
            };
            rbuggyMatches = [];
            rbuggyQSA = [];
            if (support.qsa = rnative.test(document.querySelectorAll)) {
                assert(function (div) {
                    docElem.appendChild(div).innerHTML = '<a id=\'' + expando + '\'></a>' + '<select id=\'' + expando + '-\r\\\' msallowcapture=\'\'>' + '<option selected=\'\'></option></select>';
                    if (div.querySelectorAll('[msallowcapture^=\'\']').length) {
                        rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\'\'|"")');
                    }
                    if (!div.querySelectorAll('[selected]').length) {
                        rbuggyQSA.push('\\[' + whitespace + '*(?:value|' + booleans + ')');
                    }
                    if (!div.querySelectorAll('[id~=' + expando + '-]').length) {
                        rbuggyQSA.push('~=');
                    }
                    if (!div.querySelectorAll(':checked').length) {
                        rbuggyQSA.push(':checked');
                    }
                    if (!div.querySelectorAll('a#' + expando + '+*').length) {
                        rbuggyQSA.push('.#.+[+~]');
                    }
                });
                assert(function (div) {
                    var input = document.createElement('input');
                    input.setAttribute('type', 'hidden');
                    div.appendChild(input).setAttribute('name', 'D');
                    if (div.querySelectorAll('[name=d]').length) {
                        rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');
                    }
                    if (!div.querySelectorAll(':enabled').length) {
                        rbuggyQSA.push(':enabled', ':disabled');
                    }
                    div.querySelectorAll('*,:x');
                    rbuggyQSA.push(',.*:');
                });
            }
            if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {
                assert(function (div) {
                    support.disconnectedMatch = matches.call(div, 'div');
                    matches.call(div, '[s!=\'\']:x');
                    rbuggyMatches.push('!=', pseudos);
                });
            }
            rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join('|'));
            rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join('|'));
            hasCompare = rnative.test(docElem.compareDocumentPosition);
            contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {
                var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;
                return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
            } : function (a, b) {
                if (b) {
                    while (b = b.parentNode) {
                        if (b === a) {
                            return true;
                        }
                    }
                }
                return false;
            };
            sortOrder = hasCompare ? function (a, b) {
                if (a === b) {
                    hasDuplicate = true;
                    return 0;
                }
                var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                if (compare) {
                    return compare;
                }
                compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;
                if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
                    if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
                        return -1;
                    }
                    if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
                        return 1;
                    }
                    return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
                }
                return compare & 4 ? -1 : 1;
            } : function (a, b) {
                if (a === b) {
                    hasDuplicate = true;
                    return 0;
                }
                var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];
                if (!aup || !bup) {
                    return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
                } else if (aup === bup) {
                    return siblingCheck(a, b);
                }
                cur = a;
                while (cur = cur.parentNode) {
                    ap.unshift(cur);
                }
                cur = b;
                while (cur = cur.parentNode) {
                    bp.unshift(cur);
                }
                while (ap[i] === bp[i]) {
                    i++;
                }
                return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
            };
            return document;
        };
        Sizzle.matches = function (expr, elements) {
            return Sizzle(expr, null, null, elements);
        };
        Sizzle.matchesSelector = function (elem, expr) {
            if ((elem.ownerDocument || elem) !== document) {
                setDocument(elem);
            }
            expr = expr.replace(rattributeQuotes, '=\'$1\']');
            if (support.matchesSelector && documentIsHTML && !compilerCache[expr + ' '] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
                try {
                    var ret = matches.call(elem, expr);
                    if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
                        return ret;
                    }
                } catch (e) {
                }
            }
            return Sizzle(expr, document, null, [elem]).length > 0;
        };
        Sizzle.contains = function (context, elem) {
            if ((context.ownerDocument || context) !== document) {
                setDocument(context);
            }
            return contains(context, elem);
        };
        Sizzle.attr = function (elem, name) {
            if ((elem.ownerDocument || elem) !== document) {
                setDocument(elem);
            }
            var fn = Expr.attrHandle[name.toLowerCase()], val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
            return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
        };
        Sizzle.error = function (msg) {
            throw new Error('Syntax error, unrecognized expression: ' + msg);
        };
        Sizzle.uniqueSort = function (results) {
            var elem, duplicates = [], j = 0, i = 0;
            hasDuplicate = !support.detectDuplicates;
            sortInput = !support.sortStable && results.slice(0);
            results.sort(sortOrder);
            if (hasDuplicate) {
                while (elem = results[i++]) {
                    if (elem === results[i]) {
                        j = duplicates.push(i);
                    }
                }
                while (j--) {
                    results.splice(duplicates[j], 1);
                }
            }
            sortInput = null;
            return results;
        };
        getText = Sizzle.getText = function (elem) {
            var node, ret = '', i = 0, nodeType = elem.nodeType;
            if (!nodeType) {
                while (node = elem[i++]) {
                    ret += getText(node);
                }
            } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
                if (typeof elem.textContent === 'string') {
                    return elem.textContent;
                } else {
                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                        ret += getText(elem);
                    }
                }
            } else if (nodeType === 3 || nodeType === 4) {
                return elem.nodeValue;
            }
            return ret;
        };
        Expr = Sizzle.selectors = {
            cacheLength: 50,
            createPseudo: markFunction,
            match: matchExpr,
            attrHandle: {},
            find: {},
            relative: {
                '>': {
                    dir: 'parentNode',
                    first: true
                },
                ' ': { dir: 'parentNode' },
                '+': {
                    dir: 'previousSibling',
                    first: true
                },
                '~': { dir: 'previousSibling' }
            },
            preFilter: {
                'ATTR': function (match) {
                    match[1] = match[1].replace(runescape, funescape);
                    match[3] = (match[3] || match[4] || match[5] || '').replace(runescape, funescape);
                    if (match[2] === '~=') {
                        match[3] = ' ' + match[3] + ' ';
                    }
                    return match.slice(0, 4);
                },
                'CHILD': function (match) {
                    match[1] = match[1].toLowerCase();
                    if (match[1].slice(0, 3) === 'nth') {
                        if (!match[3]) {
                            Sizzle.error(match[0]);
                        }
                        match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === 'even' || match[3] === 'odd'));
                        match[5] = +(match[7] + match[8] || match[3] === 'odd');
                    } else if (match[3]) {
                        Sizzle.error(match[0]);
                    }
                    return match;
                },
                'PSEUDO': function (match) {
                    var excess, unquoted = !match[6] && match[2];
                    if (matchExpr['CHILD'].test(match[0])) {
                        return null;
                    }
                    if (match[3]) {
                        match[2] = match[4] || match[5] || '';
                    } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(')', unquoted.length - excess) - unquoted.length)) {
                        match[0] = match[0].slice(0, excess);
                        match[2] = unquoted.slice(0, excess);
                    }
                    return match.slice(0, 3);
                }
            },
            filter: {
                'TAG': function (nodeNameSelector) {
                    var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                    return nodeNameSelector === '*' ? function () {
                        return true;
                    } : function (elem) {
                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                    };
                },
                'CLASS': function (className) {
                    var pattern = classCache[className + ' '];
                    return pattern || (pattern = new RegExp('(^|' + whitespace + ')' + className + '(' + whitespace + '|$)')) && classCache(className, function (elem) {
                        return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== 'undefined' && elem.getAttribute('class') || '');
                    });
                },
                'ATTR': function (name, operator, check) {
                    return function (elem) {
                        var result = Sizzle.attr(elem, name);
                        if (result == null) {
                            return operator === '!=';
                        }
                        if (!operator) {
                            return true;
                        }
                        result += '';
                        return operator === '=' ? result === check : operator === '!=' ? result !== check : operator === '^=' ? check && result.indexOf(check) === 0 : operator === '*=' ? check && result.indexOf(check) > -1 : operator === '$=' ? check && result.slice(-check.length) === check : operator === '~=' ? (' ' + result.replace(rwhitespace, ' ') + ' ').indexOf(check) > -1 : operator === '|=' ? result === check || result.slice(0, check.length + 1) === check + '-' : false;
                    };
                },
                'CHILD': function (type, what, argument, first, last) {
                    var simple = type.slice(0, 3) !== 'nth', forward = type.slice(-4) !== 'last', ofType = what === 'of-type';
                    return first === 1 && last === 0 ? function (elem) {
                        return !!elem.parentNode;
                    } : function (elem, context, xml) {
                        var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple !== forward ? 'nextSibling' : 'previousSibling', parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;
                        if (parent) {
                            if (simple) {
                                while (dir) {
                                    node = elem;
                                    while (node = node[dir]) {
                                        if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                                            return false;
                                        }
                                    }
                                    start = dir = type === 'only' && !start && 'nextSibling';
                                }
                                return true;
                            }
                            start = [forward ? parent.firstChild : parent.lastChild];
                            if (forward && useCache) {
                                node = parent;
                                outerCache = node[expando] || (node[expando] = {});
                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                                cache = uniqueCache[type] || [];
                                nodeIndex = cache[0] === dirruns && cache[1];
                                diff = nodeIndex && cache[2];
                                node = nodeIndex && parent.childNodes[nodeIndex];
                                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                                    if (node.nodeType === 1 && ++diff && node === elem) {
                                        uniqueCache[type] = [
                                            dirruns,
                                            nodeIndex,
                                            diff
                                        ];
                                        break;
                                    }
                                }
                            } else {
                                if (useCache) {
                                    node = elem;
                                    outerCache = node[expando] || (node[expando] = {});
                                    uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                                    cache = uniqueCache[type] || [];
                                    nodeIndex = cache[0] === dirruns && cache[1];
                                    diff = nodeIndex;
                                }
                                if (diff === false) {
                                    while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                                        if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                                            if (useCache) {
                                                outerCache = node[expando] || (node[expando] = {});
                                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});
                                                uniqueCache[type] = [
                                                    dirruns,
                                                    diff
                                                ];
                                            }
                                            if (node === elem) {
                                                break;
                                            }
                                        }
                                    }
                                }
                            }
                            diff -= last;
                            return diff === first || diff % first === 0 && diff / first >= 0;
                        }
                    };
                },
                'PSEUDO': function (pseudo, argument) {
                    var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error('unsupported pseudo: ' + pseudo);
                    if (fn[expando]) {
                        return fn(argument);
                    }
                    if (fn.length > 1) {
                        args = [
                            pseudo,
                            pseudo,
                            '',
                            argument
                        ];
                        return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {
                            var idx, matched = fn(seed, argument), i = matched.length;
                            while (i--) {
                                idx = indexOf(seed, matched[i]);
                                seed[idx] = !(matches[idx] = matched[i]);
                            }
                        }) : function (elem) {
                            return fn(elem, 0, args);
                        };
                    }
                    return fn;
                }
            },
            pseudos: {
                'not': markFunction(function (selector) {
                    var input = [], results = [], matcher = compile(selector.replace(rtrim, '$1'));
                    return matcher[expando] ? markFunction(function (seed, matches, context, xml) {
                        var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;
                        while (i--) {
                            if (elem = unmatched[i]) {
                                seed[i] = !(matches[i] = elem);
                            }
                        }
                    }) : function (elem, context, xml) {
                        input[0] = elem;
                        matcher(input, null, xml, results);
                        input[0] = null;
                        return !results.pop();
                    };
                }),
                'has': markFunction(function (selector) {
                    return function (elem) {
                        return Sizzle(selector, elem).length > 0;
                    };
                }),
                'contains': markFunction(function (text) {
                    text = text.replace(runescape, funescape);
                    return function (elem) {
                        return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
                    };
                }),
                'lang': markFunction(function (lang) {
                    if (!ridentifier.test(lang || '')) {
                        Sizzle.error('unsupported lang: ' + lang);
                    }
                    lang = lang.replace(runescape, funescape).toLowerCase();
                    return function (elem) {
                        var elemLang;
                        do {
                            if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute('xml:lang') || elem.getAttribute('lang')) {
                                elemLang = elemLang.toLowerCase();
                                return elemLang === lang || elemLang.indexOf(lang + '-') === 0;
                            }
                        } while ((elem = elem.parentNode) && elem.nodeType === 1);
                        return false;
                    };
                }),
                'target': function (elem) {
                    var hash = window.location && window.location.hash;
                    return hash && hash.slice(1) === elem.id;
                },
                'root': function (elem) {
                    return elem === docElem;
                },
                'focus': function (elem) {
                    return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
                },
                'enabled': function (elem) {
                    return elem.disabled === false;
                },
                'disabled': function (elem) {
                    return elem.disabled === true;
                },
                'checked': function (elem) {
                    var nodeName = elem.nodeName.toLowerCase();
                    return nodeName === 'input' && !!elem.checked || nodeName === 'option' && !!elem.selected;
                },
                'selected': function (elem) {
                    if (elem.parentNode) {
                        elem.parentNode.selectedIndex;
                    }
                    return elem.selected === true;
                },
                'empty': function (elem) {
                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                        if (elem.nodeType < 6) {
                            return false;
                        }
                    }
                    return true;
                },
                'parent': function (elem) {
                    return !Expr.pseudos['empty'](elem);
                },
                'header': function (elem) {
                    return rheader.test(elem.nodeName);
                },
                'input': function (elem) {
                    return rinputs.test(elem.nodeName);
                },
                'button': function (elem) {
                    var name = elem.nodeName.toLowerCase();
                    return name === 'input' && elem.type === 'button' || name === 'button';
                },
                'text': function (elem) {
                    var attr;
                    return elem.nodeName.toLowerCase() === 'input' && elem.type === 'text' && ((attr = elem.getAttribute('type')) == null || attr.toLowerCase() === 'text');
                },
                'first': createPositionalPseudo(function () {
                    return [0];
                }),
                'last': createPositionalPseudo(function (matchIndexes, length) {
                    return [length - 1];
                }),
                'eq': createPositionalPseudo(function (matchIndexes, length, argument) {
                    return [argument < 0 ? argument + length : argument];
                }),
                'even': createPositionalPseudo(function (matchIndexes, length) {
                    var i = 0;
                    for (; i < length; i += 2) {
                        matchIndexes.push(i);
                    }
                    return matchIndexes;
                }),
                'odd': createPositionalPseudo(function (matchIndexes, length) {
                    var i = 1;
                    for (; i < length; i += 2) {
                        matchIndexes.push(i);
                    }
                    return matchIndexes;
                }),
                'lt': createPositionalPseudo(function (matchIndexes, length, argument) {
                    var i = argument < 0 ? argument + length : argument;
                    for (; --i >= 0;) {
                        matchIndexes.push(i);
                    }
                    return matchIndexes;
                }),
                'gt': createPositionalPseudo(function (matchIndexes, length, argument) {
                    var i = argument < 0 ? argument + length : argument;
                    for (; ++i < length;) {
                        matchIndexes.push(i);
                    }
                    return matchIndexes;
                })
            }
        };
        Expr.pseudos['nth'] = Expr.pseudos['eq'];
        for (i in {
                radio: true,
                checkbox: true,
                file: true,
                password: true,
                image: true
            }) {
            Expr.pseudos[i] = createInputPseudo(i);
        }
        for (i in {
                submit: true,
                reset: true
            }) {
            Expr.pseudos[i] = createButtonPseudo(i);
        }
        function setFilters() {
        }
        setFilters.prototype = Expr.filters = Expr.pseudos;
        Expr.setFilters = new setFilters();
        tokenize = Sizzle.tokenize = function (selector, parseOnly) {
            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + ' '];
            if (cached) {
                return parseOnly ? 0 : cached.slice(0);
            }
            soFar = selector;
            groups = [];
            preFilters = Expr.preFilter;
            while (soFar) {
                if (!matched || (match = rcomma.exec(soFar))) {
                    if (match) {
                        soFar = soFar.slice(match[0].length) || soFar;
                    }
                    groups.push(tokens = []);
                }
                matched = false;
                if (match = rcombinators.exec(soFar)) {
                    matched = match.shift();
                    tokens.push({
                        value: matched,
                        type: match[0].replace(rtrim, ' ')
                    });
                    soFar = soFar.slice(matched.length);
                }
                for (type in Expr.filter) {
                    if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
                        matched = match.shift();
                        tokens.push({
                            value: matched,
                            type: type,
                            matches: match
                        });
                        soFar = soFar.slice(matched.length);
                    }
                }
                if (!matched) {
                    break;
                }
            }
            return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
        };
        function toSelector(tokens) {
            var i = 0, len = tokens.length, selector = '';
            for (; i < len; i++) {
                selector += tokens[i].value;
            }
            return selector;
        }
        function addCombinator(matcher, combinator, base) {
            var dir = combinator.dir, checkNonElements = base && dir === 'parentNode', doneName = done++;
            return combinator.first ? function (elem, context, xml) {
                while (elem = elem[dir]) {
                    if (elem.nodeType === 1 || checkNonElements) {
                        return matcher(elem, context, xml);
                    }
                }
            } : function (elem, context, xml) {
                var oldCache, uniqueCache, outerCache, newCache = [
                        dirruns,
                        doneName
                    ];
                if (xml) {
                    while (elem = elem[dir]) {
                        if (elem.nodeType === 1 || checkNonElements) {
                            if (matcher(elem, context, xml)) {
                                return true;
                            }
                        }
                    }
                } else {
                    while (elem = elem[dir]) {
                        if (elem.nodeType === 1 || checkNonElements) {
                            outerCache = elem[expando] || (elem[expando] = {});
                            uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});
                            if ((oldCache = uniqueCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                                return newCache[2] = oldCache[2];
                            } else {
                                uniqueCache[dir] = newCache;
                                if (newCache[2] = matcher(elem, context, xml)) {
                                    return true;
                                }
                            }
                        }
                    }
                }
            };
        }
        function elementMatcher(matchers) {
            return matchers.length > 1 ? function (elem, context, xml) {
                var i = matchers.length;
                while (i--) {
                    if (!matchers[i](elem, context, xml)) {
                        return false;
                    }
                }
                return true;
            } : matchers[0];
        }
        function multipleContexts(selector, contexts, results) {
            var i = 0, len = contexts.length;
            for (; i < len; i++) {
                Sizzle(selector, contexts[i], results);
            }
            return results;
        }
        function condense(unmatched, map, filter, context, xml) {
            var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = map != null;
            for (; i < len; i++) {
                if (elem = unmatched[i]) {
                    if (!filter || filter(elem, context, xml)) {
                        newUnmatched.push(elem);
                        if (mapped) {
                            map.push(i);
                        }
                    }
                }
            }
            return newUnmatched;
        }
        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
            if (postFilter && !postFilter[expando]) {
                postFilter = setMatcher(postFilter);
            }
            if (postFinder && !postFinder[expando]) {
                postFinder = setMatcher(postFinder, postSelector);
            }
            return markFunction(function (seed, results, context, xml) {
                var temp, i, elem, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(selector || '*', context.nodeType ? [context] : context, []), matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
                if (matcher) {
                    matcher(matcherIn, matcherOut, context, xml);
                }
                if (postFilter) {
                    temp = condense(matcherOut, postMap);
                    postFilter(temp, [], context, xml);
                    i = temp.length;
                    while (i--) {
                        if (elem = temp[i]) {
                            matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
                        }
                    }
                }
                if (seed) {
                    if (postFinder || preFilter) {
                        if (postFinder) {
                            temp = [];
                            i = matcherOut.length;
                            while (i--) {
                                if (elem = matcherOut[i]) {
                                    temp.push(matcherIn[i] = elem);
                                }
                            }
                            postFinder(null, matcherOut = [], temp, xml);
                        }
                        i = matcherOut.length;
                        while (i--) {
                            if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {
                                seed[temp] = !(results[temp] = elem);
                            }
                        }
                    }
                } else {
                    matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
                    if (postFinder) {
                        postFinder(null, results, matcherOut, xml);
                    } else {
                        push.apply(results, matcherOut);
                    }
                }
            });
        }
        function matcherFromTokens(tokens) {
            var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[' '], i = leadingRelative ? 1 : 0, matchContext = addCombinator(function (elem) {
                    return elem === checkContext;
                }, implicitRelative, true), matchAnyContext = addCombinator(function (elem) {
                    return indexOf(checkContext, elem) > -1;
                }, implicitRelative, true), matchers = [function (elem, context, xml) {
                        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
                        checkContext = null;
                        return ret;
                    }];
            for (; i < len; i++) {
                if (matcher = Expr.relative[tokens[i].type]) {
                    matchers = [addCombinator(elementMatcher(matchers), matcher)];
                } else {
                    matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
                    if (matcher[expando]) {
                        j = ++i;
                        for (; j < len; j++) {
                            if (Expr.relative[tokens[j].type]) {
                                break;
                            }
                        }
                        return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({ value: tokens[i - 2].type === ' ' ? '*' : '' })).replace(rtrim, '$1'), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
                    }
                    matchers.push(matcher);
                }
            }
            return elementMatcher(matchers);
        }
        function matcherFromGroupMatchers(elementMatchers, setMatchers) {
            var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function (seed, context, xml, results, outermost) {
                    var elem, j, matcher, matchedCount = 0, i = '0', unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && Expr.find['TAG']('*', outermost), dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;
                    if (outermost) {
                        outermostContext = context === document || context || outermost;
                    }
                    for (; i !== len && (elem = elems[i]) != null; i++) {
                        if (byElement && elem) {
                            j = 0;
                            if (!context && elem.ownerDocument !== document) {
                                setDocument(elem);
                                xml = !documentIsHTML;
                            }
                            while (matcher = elementMatchers[j++]) {
                                if (matcher(elem, context || document, xml)) {
                                    results.push(elem);
                                    break;
                                }
                            }
                            if (outermost) {
                                dirruns = dirrunsUnique;
                            }
                        }
                        if (bySet) {
                            if (elem = !matcher && elem) {
                                matchedCount--;
                            }
                            if (seed) {
                                unmatched.push(elem);
                            }
                        }
                    }
                    matchedCount += i;
                    if (bySet && i !== matchedCount) {
                        j = 0;
                        while (matcher = setMatchers[j++]) {
                            matcher(unmatched, setMatched, context, xml);
                        }
                        if (seed) {
                            if (matchedCount > 0) {
                                while (i--) {
                                    if (!(unmatched[i] || setMatched[i])) {
                                        setMatched[i] = pop.call(results);
                                    }
                                }
                            }
                            setMatched = condense(setMatched);
                        }
                        push.apply(results, setMatched);
                        if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
                            Sizzle.uniqueSort(results);
                        }
                    }
                    if (outermost) {
                        dirruns = dirrunsUnique;
                        outermostContext = contextBackup;
                    }
                    return unmatched;
                };
            return bySet ? markFunction(superMatcher) : superMatcher;
        }
        compile = Sizzle.compile = function (selector, match) {
            var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + ' '];
            if (!cached) {
                if (!match) {
                    match = tokenize(selector);
                }
                i = match.length;
                while (i--) {
                    cached = matcherFromTokens(match[i]);
                    if (cached[expando]) {
                        setMatchers.push(cached);
                    } else {
                        elementMatchers.push(cached);
                    }
                }
                cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
                cached.selector = selector;
            }
            return cached;
        };
        select = Sizzle.select = function (selector, context, results, seed) {
            var i, tokens, token, type, find, compiled = typeof selector === 'function' && selector, match = !seed && tokenize(selector = compiled.selector || selector);
            results = results || [];
            if (match.length === 1) {
                tokens = match[0] = match[0].slice(0);
                if (tokens.length > 2 && (token = tokens[0]).type === 'ID' && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
                    context = (Expr.find['ID'](token.matches[0].replace(runescape, funescape), context) || [])[0];
                    if (!context) {
                        return results;
                    } else if (compiled) {
                        context = context.parentNode;
                    }
                    selector = selector.slice(tokens.shift().value.length);
                }
                i = matchExpr['needsContext'].test(selector) ? 0 : tokens.length;
                while (i--) {
                    token = tokens[i];
                    if (Expr.relative[type = token.type]) {
                        break;
                    }
                    if (find = Expr.find[type]) {
                        if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
                            tokens.splice(i, 1);
                            selector = seed.length && toSelector(tokens);
                            if (!selector) {
                                push.apply(results, seed);
                                return results;
                            }
                            break;
                        }
                    }
                }
            }
            (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);
            return results;
        };
        support.sortStable = expando.split('').sort(sortOrder).join('') === expando;
        support.detectDuplicates = !!hasDuplicate;
        setDocument();
        support.sortDetached = assert(function (div1) {
            return div1.compareDocumentPosition(document.createElement('div')) & 1;
        });
        if (!assert(function (div) {
                div.innerHTML = '<a href=\'#\'></a>';
                return div.firstChild.getAttribute('href') === '#';
            })) {
            addHandle('type|href|height|width', function (elem, name, isXML) {
                if (!isXML) {
                    return elem.getAttribute(name, name.toLowerCase() === 'type' ? 1 : 2);
                }
            });
        }
        if (!support.attributes || !assert(function (div) {
                div.innerHTML = '<input/>';
                div.firstChild.setAttribute('value', '');
                return div.firstChild.getAttribute('value') === '';
            })) {
            addHandle('value', function (elem, name, isXML) {
                if (!isXML && elem.nodeName.toLowerCase() === 'input') {
                    return elem.defaultValue;
                }
            });
        }
        if (!assert(function (div) {
                return div.getAttribute('disabled') == null;
            })) {
            addHandle(booleans, function (elem, name, isXML) {
                var val;
                if (!isXML) {
                    return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
                }
            });
        }
        return Sizzle;
    }(window);
    jQuery.find = Sizzle;
    jQuery.expr = Sizzle.selectors;
    jQuery.expr[':'] = jQuery.expr.pseudos;
    jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
    jQuery.text = Sizzle.getText;
    jQuery.isXMLDoc = Sizzle.isXML;
    jQuery.contains = Sizzle.contains;
    var dir = function (elem, dir, until) {
        var matched = [], truncate = until !== undefined;
        while ((elem = elem[dir]) && elem.nodeType !== 9) {
            if (elem.nodeType === 1) {
                if (truncate && jQuery(elem).is(until)) {
                    break;
                }
                matched.push(elem);
            }
        }
        return matched;
    };
    var siblings = function (n, elem) {
        var matched = [];
        for (; n; n = n.nextSibling) {
            if (n.nodeType === 1 && n !== elem) {
                matched.push(n);
            }
        }
        return matched;
    };
    var rneedsContext = jQuery.expr.match.needsContext;
    var rsingleTag = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/;
    var risSimple = /^.[^:#\[\.,]*$/;
    function winnow(elements, qualifier, not) {
        if (jQuery.isFunction(qualifier)) {
            return jQuery.grep(elements, function (elem, i) {
                return !!qualifier.call(elem, i, elem) !== not;
            });
        }
        if (qualifier.nodeType) {
            return jQuery.grep(elements, function (elem) {
                return elem === qualifier !== not;
            });
        }
        if (typeof qualifier === 'string') {
            if (risSimple.test(qualifier)) {
                return jQuery.filter(qualifier, elements, not);
            }
            qualifier = jQuery.filter(qualifier, elements);
        }
        return jQuery.grep(elements, function (elem) {
            return jQuery.inArray(elem, qualifier) > -1 !== not;
        });
    }
    jQuery.filter = function (expr, elems, not) {
        var elem = elems[0];
        if (not) {
            expr = ':not(' + expr + ')';
        }
        return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {
            return elem.nodeType === 1;
        }));
    };
    jQuery.fn.extend({
        find: function (selector) {
            var i, ret = [], self = this, len = self.length;
            if (typeof selector !== 'string') {
                return this.pushStack(jQuery(selector).filter(function () {
                    for (i = 0; i < len; i++) {
                        if (jQuery.contains(self[i], this)) {
                            return true;
                        }
                    }
                }));
            }
            for (i = 0; i < len; i++) {
                jQuery.find(selector, self[i], ret);
            }
            ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);
            ret.selector = this.selector ? this.selector + ' ' + selector : selector;
            return ret;
        },
        filter: function (selector) {
            return this.pushStack(winnow(this, selector || [], false));
        },
        not: function (selector) {
            return this.pushStack(winnow(this, selector || [], true));
        },
        is: function (selector) {
            return !!winnow(this, typeof selector === 'string' && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
        }
    });
    var rootjQuery, rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/, init = jQuery.fn.init = function (selector, context, root) {
            var match, elem;
            if (!selector) {
                return this;
            }
            root = root || rootjQuery;
            if (typeof selector === 'string') {
                if (selector.charAt(0) === '<' && selector.charAt(selector.length - 1) === '>' && selector.length >= 3) {
                    match = [
                        null,
                        selector,
                        null
                    ];
                } else {
                    match = rquickExpr.exec(selector);
                }
                if (match && (match[1] || !context)) {
                    if (match[1]) {
                        context = context instanceof jQuery ? context[0] : context;
                        jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));
                        if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
                            for (match in context) {
                                if (jQuery.isFunction(this[match])) {
                                    this[match](context[match]);
                                } else {
                                    this.attr(match, context[match]);
                                }
                            }
                        }
                        return this;
                    } else {
                        elem = document.getElementById(match[2]);
                        if (elem && elem.parentNode) {
                            if (elem.id !== match[2]) {
                                return rootjQuery.find(selector);
                            }
                            this.length = 1;
                            this[0] = elem;
                        }
                        this.context = document;
                        this.selector = selector;
                        return this;
                    }
                } else if (!context || context.jquery) {
                    return (context || root).find(selector);
                } else {
                    return this.constructor(context).find(selector);
                }
            } else if (selector.nodeType) {
                this.context = this[0] = selector;
                this.length = 1;
                return this;
            } else if (jQuery.isFunction(selector)) {
                return typeof root.ready !== 'undefined' ? root.ready(selector) : selector(jQuery);
            }
            if (selector.selector !== undefined) {
                this.selector = selector.selector;
                this.context = selector.context;
            }
            return jQuery.makeArray(selector, this);
        };
    init.prototype = jQuery.fn;
    rootjQuery = jQuery(document);
    var rparentsprev = /^(?:parents|prev(?:Until|All))/, guaranteedUnique = {
            children: true,
            contents: true,
            next: true,
            prev: true
        };
    jQuery.fn.extend({
        has: function (target) {
            var i, targets = jQuery(target, this), len = targets.length;
            return this.filter(function () {
                for (i = 0; i < len; i++) {
                    if (jQuery.contains(this, targets[i])) {
                        return true;
                    }
                }
            });
        },
        closest: function (selectors, context) {
            var cur, i = 0, l = this.length, matched = [], pos = rneedsContext.test(selectors) || typeof selectors !== 'string' ? jQuery(selectors, context || this.context) : 0;
            for (; i < l; i++) {
                for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
                    if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
                        matched.push(cur);
                        break;
                    }
                }
            }
            return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);
        },
        index: function (elem) {
            if (!elem) {
                return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
            }
            if (typeof elem === 'string') {
                return jQuery.inArray(this[0], jQuery(elem));
            }
            return jQuery.inArray(elem.jquery ? elem[0] : elem, this);
        },
        add: function (selector, context) {
            return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
        },
        addBack: function (selector) {
            return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
        }
    });
    function sibling(cur, dir) {
        do {
            cur = cur[dir];
        } while (cur && cur.nodeType !== 1);
        return cur;
    }
    jQuery.each({
        parent: function (elem) {
            var parent = elem.parentNode;
            return parent && parent.nodeType !== 11 ? parent : null;
        },
        parents: function (elem) {
            return dir(elem, 'parentNode');
        },
        parentsUntil: function (elem, i, until) {
            return dir(elem, 'parentNode', until);
        },
        next: function (elem) {
            return sibling(elem, 'nextSibling');
        },
        prev: function (elem) {
            return sibling(elem, 'previousSibling');
        },
        nextAll: function (elem) {
            return dir(elem, 'nextSibling');
        },
        prevAll: function (elem) {
            return dir(elem, 'previousSibling');
        },
        nextUntil: function (elem, i, until) {
            return dir(elem, 'nextSibling', until);
        },
        prevUntil: function (elem, i, until) {
            return dir(elem, 'previousSibling', until);
        },
        siblings: function (elem) {
            return siblings((elem.parentNode || {}).firstChild, elem);
        },
        children: function (elem) {
            return siblings(elem.firstChild);
        },
        contents: function (elem) {
            return jQuery.nodeName(elem, 'iframe') ? elem.contentDocument || elem.contentWindow.document : jQuery.merge([], elem.childNodes);
        }
    }, function (name, fn) {
        jQuery.fn[name] = function (until, selector) {
            var ret = jQuery.map(this, fn, until);
            if (name.slice(-5) !== 'Until') {
                selector = until;
            }
            if (selector && typeof selector === 'string') {
                ret = jQuery.filter(selector, ret);
            }
            if (this.length > 1) {
                if (!guaranteedUnique[name]) {
                    ret = jQuery.uniqueSort(ret);
                }
                if (rparentsprev.test(name)) {
                    ret = ret.reverse();
                }
            }
            return this.pushStack(ret);
        };
    });
    var rnotwhite = /\S+/g;
    function createOptions(options) {
        var object = {};
        jQuery.each(options.match(rnotwhite) || [], function (_, flag) {
            object[flag] = true;
        });
        return object;
    }
    jQuery.Callbacks = function (options) {
        options = typeof options === 'string' ? createOptions(options) : jQuery.extend({}, options);
        var firing, memory, fired, locked, list = [], queue = [], firingIndex = -1, fire = function () {
                locked = options.once;
                fired = firing = true;
                for (; queue.length; firingIndex = -1) {
                    memory = queue.shift();
                    while (++firingIndex < list.length) {
                        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
                            firingIndex = list.length;
                            memory = false;
                        }
                    }
                }
                if (!options.memory) {
                    memory = false;
                }
                firing = false;
                if (locked) {
                    if (memory) {
                        list = [];
                    } else {
                        list = '';
                    }
                }
            }, self = {
                add: function () {
                    if (list) {
                        if (memory && !firing) {
                            firingIndex = list.length - 1;
                            queue.push(memory);
                        }
                        (function add(args) {
                            jQuery.each(args, function (_, arg) {
                                if (jQuery.isFunction(arg)) {
                                    if (!options.unique || !self.has(arg)) {
                                        list.push(arg);
                                    }
                                } else if (arg && arg.length && jQuery.type(arg) !== 'string') {
                                    add(arg);
                                }
                            });
                        }(arguments));
                        if (memory && !firing) {
                            fire();
                        }
                    }
                    return this;
                },
                remove: function () {
                    jQuery.each(arguments, function (_, arg) {
                        var index;
                        while ((index = jQuery.inArray(arg, list, index)) > -1) {
                            list.splice(index, 1);
                            if (index <= firingIndex) {
                                firingIndex--;
                            }
                        }
                    });
                    return this;
                },
                has: function (fn) {
                    return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;
                },
                empty: function () {
                    if (list) {
                        list = [];
                    }
                    return this;
                },
                disable: function () {
                    locked = queue = [];
                    list = memory = '';
                    return this;
                },
                disabled: function () {
                    return !list;
                },
                lock: function () {
                    locked = true;
                    if (!memory) {
                        self.disable();
                    }
                    return this;
                },
                locked: function () {
                    return !!locked;
                },
                fireWith: function (context, args) {
                    if (!locked) {
                        args = args || [];
                        args = [
                            context,
                            args.slice ? args.slice() : args
                        ];
                        queue.push(args);
                        if (!firing) {
                            fire();
                        }
                    }
                    return this;
                },
                fire: function () {
                    self.fireWith(this, arguments);
                    return this;
                },
                fired: function () {
                    return !!fired;
                }
            };
        return self;
    };
    jQuery.extend({
        Deferred: function (func) {
            var tuples = [
                    [
                        'resolve',
                        'done',
                        jQuery.Callbacks('once memory'),
                        'resolved'
                    ],
                    [
                        'reject',
                        'fail',
                        jQuery.Callbacks('once memory'),
                        'rejected'
                    ],
                    [
                        'notify',
                        'progress',
                        jQuery.Callbacks('memory')
                    ]
                ], state = 'pending', promise = {
                    state: function () {
                        return state;
                    },
                    always: function () {
                        deferred.done(arguments).fail(arguments);
                        return this;
                    },
                    then: function () {
                        var fns = arguments;
                        return jQuery.Deferred(function (newDefer) {
                            jQuery.each(tuples, function (i, tuple) {
                                var fn = jQuery.isFunction(fns[i]) && fns[i];
                                deferred[tuple[1]](function () {
                                    var returned = fn && fn.apply(this, arguments);
                                    if (returned && jQuery.isFunction(returned.promise)) {
                                        returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                                    } else {
                                        newDefer[tuple[0] + 'With'](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);
                                    }
                                });
                            });
                            fns = null;
                        }).promise();
                    },
                    promise: function (obj) {
                        return obj != null ? jQuery.extend(obj, promise) : promise;
                    }
                }, deferred = {};
            promise.pipe = promise.then;
            jQuery.each(tuples, function (i, tuple) {
                var list = tuple[2], stateString = tuple[3];
                promise[tuple[1]] = list.add;
                if (stateString) {
                    list.add(function () {
                        state = stateString;
                    }, tuples[i ^ 1][2].disable, tuples[2][2].lock);
                }
                deferred[tuple[0]] = function () {
                    deferred[tuple[0] + 'With'](this === deferred ? promise : this, arguments);
                    return this;
                };
                deferred[tuple[0] + 'With'] = list.fireWith;
            });
            promise.promise(deferred);
            if (func) {
                func.call(deferred, deferred);
            }
            return deferred;
        },
        when: function (subordinate) {
            var i = 0, resolveValues = slice.call(arguments), length = resolveValues.length, remaining = length !== 1 || subordinate && jQuery.isFunction(subordinate.promise) ? length : 0, deferred = remaining === 1 ? subordinate : jQuery.Deferred(), updateFunc = function (i, contexts, values) {
                    return function (value) {
                        contexts[i] = this;
                        values[i] = arguments.length > 1 ? slice.call(arguments) : value;
                        if (values === progressValues) {
                            deferred.notifyWith(contexts, values);
                        } else if (!--remaining) {
                            deferred.resolveWith(contexts, values);
                        }
                    };
                }, progressValues, progressContexts, resolveContexts;
            if (length > 1) {
                progressValues = new Array(length);
                progressContexts = new Array(length);
                resolveContexts = new Array(length);
                for (; i < length; i++) {
                    if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {
                        resolveValues[i].promise().progress(updateFunc(i, progressContexts, progressValues)).done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject);
                    } else {
                        --remaining;
                    }
                }
            }
            if (!remaining) {
                deferred.resolveWith(resolveContexts, resolveValues);
            }
            return deferred.promise();
        }
    });
    var readyList;
    jQuery.fn.ready = function (fn) {
        jQuery.ready.promise().done(fn);
        return this;
    };
    jQuery.extend({
        isReady: false,
        readyWait: 1,
        holdReady: function (hold) {
            if (hold) {
                jQuery.readyWait++;
            } else {
                jQuery.ready(true);
            }
        },
        ready: function (wait) {
            if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
                return;
            }
            jQuery.isReady = true;
            if (wait !== true && --jQuery.readyWait > 0) {
                return;
            }
            readyList.resolveWith(document, [jQuery]);
            if (jQuery.fn.triggerHandler) {
                jQuery(document).triggerHandler('ready');
                jQuery(document).off('ready');
            }
        }
    });
    function detach() {
        if (document.addEventListener) {
            document.removeEventListener('DOMContentLoaded', completed);
            window.removeEventListener('load', completed);
        } else {
            document.detachEvent('onreadystatechange', completed);
            window.detachEvent('onload', completed);
        }
    }
    function completed() {
        if (document.addEventListener || window.event.type === 'load' || document.readyState === 'complete') {
            detach();
            jQuery.ready();
        }
    }
    jQuery.ready.promise = function (obj) {
        if (!readyList) {
            readyList = jQuery.Deferred();
            if (document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll) {
                window.setTimeout(jQuery.ready);
            } else if (document.addEventListener) {
                document.addEventListener('DOMContentLoaded', completed);
                window.addEventListener('load', completed);
            } else {
                document.attachEvent('onreadystatechange', completed);
                window.attachEvent('onload', completed);
                var top = false;
                try {
                    top = window.frameElement == null && document.documentElement;
                } catch (e) {
                }
                if (top && top.doScroll) {
                    (function doScrollCheck() {
                        if (!jQuery.isReady) {
                            try {
                                top.doScroll('left');
                            } catch (e) {
                                return window.setTimeout(doScrollCheck, 50);
                            }
                            detach();
                            jQuery.ready();
                        }
                    }());
                }
            }
        }
        return readyList.promise(obj);
    };
    jQuery.ready.promise();
    var i;
    for (i in jQuery(support)) {
        break;
    }
    support.ownFirst = i === '0';
    support.inlineBlockNeedsLayout = false;
    jQuery(function () {
        var val, div, body, container;
        body = document.getElementsByTagName('body')[0];
        if (!body || !body.style) {
            return;
        }
        div = document.createElement('div');
        container = document.createElement('div');
        container.style.cssText = 'position:absolute;border:0;width:0;height:0;top:0;left:-9999px';
        body.appendChild(container).appendChild(div);
        if (typeof div.style.zoom !== 'undefined') {
            div.style.cssText = 'display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1';
            support.inlineBlockNeedsLayout = val = div.offsetWidth === 3;
            if (val) {
                body.style.zoom = 1;
            }
        }
        body.removeChild(container);
    });
    (function () {
        var div = document.createElement('div');
        support.deleteExpando = true;
        try {
            delete div.test;
        } catch (e) {
            support.deleteExpando = false;
        }
        div = null;
    }());
    var acceptData = function (elem) {
        var noData = jQuery.noData[(elem.nodeName + ' ').toLowerCase()], nodeType = +elem.nodeType || 1;
        return nodeType !== 1 && nodeType !== 9 ? false : !noData || noData !== true && elem.getAttribute('classid') === noData;
    };
    var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, rmultiDash = /([A-Z])/g;
    function dataAttr(elem, key, data) {
        if (data === undefined && elem.nodeType === 1) {
            var name = 'data-' + key.replace(rmultiDash, '-$1').toLowerCase();
            data = elem.getAttribute(name);
            if (typeof data === 'string') {
                try {
                    data = data === 'true' ? true : data === 'false' ? false : data === 'null' ? null : +data + '' === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;
                } catch (e) {
                }
                jQuery.data(elem, key, data);
            } else {
                data = undefined;
            }
        }
        return data;
    }
    function isEmptyDataObject(obj) {
        var name;
        for (name in obj) {
            if (name === 'data' && jQuery.isEmptyObject(obj[name])) {
                continue;
            }
            if (name !== 'toJSON') {
                return false;
            }
        }
        return true;
    }
    function internalData(elem, name, data, pvt) {
        if (!acceptData(elem)) {
            return;
        }
        var ret, thisCache, internalKey = jQuery.expando, isNode = elem.nodeType, cache = isNode ? jQuery.cache : elem, id = isNode ? elem[internalKey] : elem[internalKey] && internalKey;
        if ((!id || !cache[id] || !pvt && !cache[id].data) && data === undefined && typeof name === 'string') {
            return;
        }
        if (!id) {
            if (isNode) {
                id = elem[internalKey] = deletedIds.pop() || jQuery.guid++;
            } else {
                id = internalKey;
            }
        }
        if (!cache[id]) {
            cache[id] = isNode ? {} : { toJSON: jQuery.noop };
        }
        if (typeof name === 'object' || typeof name === 'function') {
            if (pvt) {
                cache[id] = jQuery.extend(cache[id], name);
            } else {
                cache[id].data = jQuery.extend(cache[id].data, name);
            }
        }
        thisCache = cache[id];
        if (!pvt) {
            if (!thisCache.data) {
                thisCache.data = {};
            }
            thisCache = thisCache.data;
        }
        if (data !== undefined) {
            thisCache[jQuery.camelCase(name)] = data;
        }
        if (typeof name === 'string') {
            ret = thisCache[name];
            if (ret == null) {
                ret = thisCache[jQuery.camelCase(name)];
            }
        } else {
            ret = thisCache;
        }
        return ret;
    }
    function internalRemoveData(elem, name, pvt) {
        if (!acceptData(elem)) {
            return;
        }
        var thisCache, i, isNode = elem.nodeType, cache = isNode ? jQuery.cache : elem, id = isNode ? elem[jQuery.expando] : jQuery.expando;
        if (!cache[id]) {
            return;
        }
        if (name) {
            thisCache = pvt ? cache[id] : cache[id].data;
            if (thisCache) {
                if (!jQuery.isArray(name)) {
                    if (name in thisCache) {
                        name = [name];
                    } else {
                        name = jQuery.camelCase(name);
                        if (name in thisCache) {
                            name = [name];
                        } else {
                            name = name.split(' ');
                        }
                    }
                } else {
                    name = name.concat(jQuery.map(name, jQuery.camelCase));
                }
                i = name.length;
                while (i--) {
                    delete thisCache[name[i]];
                }
                if (pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache)) {
                    return;
                }
            }
        }
        if (!pvt) {
            delete cache[id].data;
            if (!isEmptyDataObject(cache[id])) {
                return;
            }
        }
        if (isNode) {
            jQuery.cleanData([elem], true);
        } else if (support.deleteExpando || cache != cache.window) {
            delete cache[id];
        } else {
            cache[id] = undefined;
        }
    }
    jQuery.extend({
        cache: {},
        noData: {
            'applet ': true,
            'embed ': true,
            'object ': 'clsid:D27CDB6E-AE6D-11cf-96B8-444553540000'
        },
        hasData: function (elem) {
            elem = elem.nodeType ? jQuery.cache[elem[jQuery.expando]] : elem[jQuery.expando];
            return !!elem && !isEmptyDataObject(elem);
        },
        data: function (elem, name, data) {
            return internalData(elem, name, data);
        },
        removeData: function (elem, name) {
            return internalRemoveData(elem, name);
        },
        _data: function (elem, name, data) {
            return internalData(elem, name, data, true);
        },
        _removeData: function (elem, name) {
            return internalRemoveData(elem, name, true);
        }
    });
    jQuery.fn.extend({
        data: function (key, value) {
            var i, name, data, elem = this[0], attrs = elem && elem.attributes;
            if (key === undefined) {
                if (this.length) {
                    data = jQuery.data(elem);
                    if (elem.nodeType === 1 && !jQuery._data(elem, 'parsedAttrs')) {
                        i = attrs.length;
                        while (i--) {
                            if (attrs[i]) {
                                name = attrs[i].name;
                                if (name.indexOf('data-') === 0) {
                                    name = jQuery.camelCase(name.slice(5));
                                    dataAttr(elem, name, data[name]);
                                }
                            }
                        }
                        jQuery._data(elem, 'parsedAttrs', true);
                    }
                }
                return data;
            }
            if (typeof key === 'object') {
                return this.each(function () {
                    jQuery.data(this, key);
                });
            }
            return arguments.length > 1 ? this.each(function () {
                jQuery.data(this, key, value);
            }) : elem ? dataAttr(elem, key, jQuery.data(elem, key)) : undefined;
        },
        removeData: function (key) {
            return this.each(function () {
                jQuery.removeData(this, key);
            });
        }
    });
    jQuery.extend({
        queue: function (elem, type, data) {
            var queue;
            if (elem) {
                type = (type || 'fx') + 'queue';
                queue = jQuery._data(elem, type);
                if (data) {
                    if (!queue || jQuery.isArray(data)) {
                        queue = jQuery._data(elem, type, jQuery.makeArray(data));
                    } else {
                        queue.push(data);
                    }
                }
                return queue || [];
            }
        },
        dequeue: function (elem, type) {
            type = type || 'fx';
            var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function () {
                    jQuery.dequeue(elem, type);
                };
            if (fn === 'inprogress') {
                fn = queue.shift();
                startLength--;
            }
            if (fn) {
                if (type === 'fx') {
                    queue.unshift('inprogress');
                }
                delete hooks.stop;
                fn.call(elem, next, hooks);
            }
            if (!startLength && hooks) {
                hooks.empty.fire();
            }
        },
        _queueHooks: function (elem, type) {
            var key = type + 'queueHooks';
            return jQuery._data(elem, key) || jQuery._data(elem, key, {
                empty: jQuery.Callbacks('once memory').add(function () {
                    jQuery._removeData(elem, type + 'queue');
                    jQuery._removeData(elem, key);
                })
            });
        }
    });
    jQuery.fn.extend({
        queue: function (type, data) {
            var setter = 2;
            if (typeof type !== 'string') {
                data = type;
                type = 'fx';
                setter--;
            }
            if (arguments.length < setter) {
                return jQuery.queue(this[0], type);
            }
            return data === undefined ? this : this.each(function () {
                var queue = jQuery.queue(this, type, data);
                jQuery._queueHooks(this, type);
                if (type === 'fx' && queue[0] !== 'inprogress') {
                    jQuery.dequeue(this, type);
                }
            });
        },
        dequeue: function (type) {
            return this.each(function () {
                jQuery.dequeue(this, type);
            });
        },
        clearQueue: function (type) {
            return this.queue(type || 'fx', []);
        },
        promise: function (type, obj) {
            var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function () {
                    if (!--count) {
                        defer.resolveWith(elements, [elements]);
                    }
                };
            if (typeof type !== 'string') {
                obj = type;
                type = undefined;
            }
            type = type || 'fx';
            while (i--) {
                tmp = jQuery._data(elements[i], type + 'queueHooks');
                if (tmp && tmp.empty) {
                    count++;
                    tmp.empty.add(resolve);
                }
            }
            resolve();
            return defer.promise(obj);
        }
    });
    (function () {
        var shrinkWrapBlocksVal;
        support.shrinkWrapBlocks = function () {
            if (shrinkWrapBlocksVal != null) {
                return shrinkWrapBlocksVal;
            }
            shrinkWrapBlocksVal = false;
            var div, body, container;
            body = document.getElementsByTagName('body')[0];
            if (!body || !body.style) {
                return;
            }
            div = document.createElement('div');
            container = document.createElement('div');
            container.style.cssText = 'position:absolute;border:0;width:0;height:0;top:0;left:-9999px';
            body.appendChild(container).appendChild(div);
            if (typeof div.style.zoom !== 'undefined') {
                div.style.cssText = '-webkit-box-sizing:content-box;-moz-box-sizing:content-box;' + 'box-sizing:content-box;display:block;margin:0;border:0;' + 'padding:1px;width:1px;zoom:1';
                div.appendChild(document.createElement('div')).style.width = '5px';
                shrinkWrapBlocksVal = div.offsetWidth !== 3;
            }
            body.removeChild(container);
            return shrinkWrapBlocksVal;
        };
    }());
    var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
    var rcssNum = new RegExp('^(?:([+-])=|)(' + pnum + ')([a-z%]*)$', 'i');
    var cssExpand = [
        'Top',
        'Right',
        'Bottom',
        'Left'
    ];
    var isHidden = function (elem, el) {
        elem = el || elem;
        return jQuery.css(elem, 'display') === 'none' || !jQuery.contains(elem.ownerDocument, elem);
    };
    function adjustCSS(elem, prop, valueParts, tween) {
        var adjusted, scale = 1, maxIterations = 20, currentValue = tween ? function () {
                return tween.cur();
            } : function () {
                return jQuery.css(elem, prop, '');
            }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? '' : 'px'), initialInUnit = (jQuery.cssNumber[prop] || unit !== 'px' && +initial) && rcssNum.exec(jQuery.css(elem, prop));
        if (initialInUnit && initialInUnit[3] !== unit) {
            unit = unit || initialInUnit[3];
            valueParts = valueParts || [];
            initialInUnit = +initial || 1;
            do {
                scale = scale || '.5';
                initialInUnit = initialInUnit / scale;
                jQuery.style(elem, prop, initialInUnit + unit);
            } while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations);
        }
        if (valueParts) {
            initialInUnit = +initialInUnit || +initial || 0;
            adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
            if (tween) {
                tween.unit = unit;
                tween.start = initialInUnit;
                tween.end = adjusted;
            }
        }
        return adjusted;
    }
    var access = function (elems, fn, key, value, chainable, emptyGet, raw) {
        var i = 0, length = elems.length, bulk = key == null;
        if (jQuery.type(key) === 'object') {
            chainable = true;
            for (i in key) {
                access(elems, fn, i, key[i], true, emptyGet, raw);
            }
        } else if (value !== undefined) {
            chainable = true;
            if (!jQuery.isFunction(value)) {
                raw = true;
            }
            if (bulk) {
                if (raw) {
                    fn.call(elems, value);
                    fn = null;
                } else {
                    bulk = fn;
                    fn = function (elem, key, value) {
                        return bulk.call(jQuery(elem), value);
                    };
                }
            }
            if (fn) {
                for (; i < length; i++) {
                    fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
                }
            }
        }
        return chainable ? elems : bulk ? fn.call(elems) : length ? fn(elems[0], key) : emptyGet;
    };
    var rcheckableType = /^(?:checkbox|radio)$/i;
    var rtagName = /<([\w:-]+)/;
    var rscriptType = /^$|\/(?:java|ecma)script/i;
    var rleadingWhitespace = /^\s+/;
    var nodeNames = 'abbr|article|aside|audio|bdi|canvas|data|datalist|' + 'details|dialog|figcaption|figure|footer|header|hgroup|main|' + 'mark|meter|nav|output|picture|progress|section|summary|template|time|video';
    function createSafeFragment(document) {
        var list = nodeNames.split('|'), safeFrag = document.createDocumentFragment();
        if (safeFrag.createElement) {
            while (list.length) {
                safeFrag.createElement(list.pop());
            }
        }
        return safeFrag;
    }
    (function () {
        var div = document.createElement('div'), fragment = document.createDocumentFragment(), input = document.createElement('input');
        div.innerHTML = '  <link/><table></table><a href=\'/a\'>a</a><input type=\'checkbox\'/>';
        support.leadingWhitespace = div.firstChild.nodeType === 3;
        support.tbody = !div.getElementsByTagName('tbody').length;
        support.htmlSerialize = !!div.getElementsByTagName('link').length;
        support.html5Clone = document.createElement('nav').cloneNode(true).outerHTML !== '<:nav></:nav>';
        input.type = 'checkbox';
        input.checked = true;
        fragment.appendChild(input);
        support.appendChecked = input.checked;
        div.innerHTML = '<textarea>x</textarea>';
        support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
        fragment.appendChild(div);
        input = document.createElement('input');
        input.setAttribute('type', 'radio');
        input.setAttribute('checked', 'checked');
        input.setAttribute('name', 't');
        div.appendChild(input);
        support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
        support.noCloneEvent = !!div.addEventListener;
        div[jQuery.expando] = 1;
        support.attributes = !div.getAttribute(jQuery.expando);
    }());
    var wrapMap = {
        option: [
            1,
            '<select multiple=\'multiple\'>',
            '</select>'
        ],
        legend: [
            1,
            '<fieldset>',
            '</fieldset>'
        ],
        area: [
            1,
            '<map>',
            '</map>'
        ],
        param: [
            1,
            '<object>',
            '</object>'
        ],
        thead: [
            1,
            '<table>',
            '</table>'
        ],
        tr: [
            2,
            '<table><tbody>',
            '</tbody></table>'
        ],
        col: [
            2,
            '<table><tbody></tbody><colgroup>',
            '</colgroup></table>'
        ],
        td: [
            3,
            '<table><tbody><tr>',
            '</tr></tbody></table>'
        ],
        _default: support.htmlSerialize ? [
            0,
            '',
            ''
        ] : [
            1,
            'X<div>',
            '</div>'
        ]
    };
    wrapMap.optgroup = wrapMap.option;
    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
    wrapMap.th = wrapMap.td;
    function getAll(context, tag) {
        var elems, elem, i = 0, found = typeof context.getElementsByTagName !== 'undefined' ? context.getElementsByTagName(tag || '*') : typeof context.querySelectorAll !== 'undefined' ? context.querySelectorAll(tag || '*') : undefined;
        if (!found) {
            for (found = [], elems = context.childNodes || context; (elem = elems[i]) != null; i++) {
                if (!tag || jQuery.nodeName(elem, tag)) {
                    found.push(elem);
                } else {
                    jQuery.merge(found, getAll(elem, tag));
                }
            }
        }
        return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], found) : found;
    }
    function setGlobalEval(elems, refElements) {
        var elem, i = 0;
        for (; (elem = elems[i]) != null; i++) {
            jQuery._data(elem, 'globalEval', !refElements || jQuery._data(refElements[i], 'globalEval'));
        }
    }
    var rhtml = /<|&#?\w+;/, rtbody = /<tbody/i;
    function fixDefaultChecked(elem) {
        if (rcheckableType.test(elem.type)) {
            elem.defaultChecked = elem.checked;
        }
    }
    function buildFragment(elems, context, scripts, selection, ignored) {
        var j, elem, contains, tmp, tag, tbody, wrap, l = elems.length, safe = createSafeFragment(context), nodes = [], i = 0;
        for (; i < l; i++) {
            elem = elems[i];
            if (elem || elem === 0) {
                if (jQuery.type(elem) === 'object') {
                    jQuery.merge(nodes, elem.nodeType ? [elem] : elem);
                } else if (!rhtml.test(elem)) {
                    nodes.push(context.createTextNode(elem));
                } else {
                    tmp = tmp || safe.appendChild(context.createElement('div'));
                    tag = (rtagName.exec(elem) || [
                        '',
                        ''
                    ])[1].toLowerCase();
                    wrap = wrapMap[tag] || wrapMap._default;
                    tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];
                    j = wrap[0];
                    while (j--) {
                        tmp = tmp.lastChild;
                    }
                    if (!support.leadingWhitespace && rleadingWhitespace.test(elem)) {
                        nodes.push(context.createTextNode(rleadingWhitespace.exec(elem)[0]));
                    }
                    if (!support.tbody) {
                        elem = tag === 'table' && !rtbody.test(elem) ? tmp.firstChild : wrap[1] === '<table>' && !rtbody.test(elem) ? tmp : 0;
                        j = elem && elem.childNodes.length;
                        while (j--) {
                            if (jQuery.nodeName(tbody = elem.childNodes[j], 'tbody') && !tbody.childNodes.length) {
                                elem.removeChild(tbody);
                            }
                        }
                    }
                    jQuery.merge(nodes, tmp.childNodes);
                    tmp.textContent = '';
                    while (tmp.firstChild) {
                        tmp.removeChild(tmp.firstChild);
                    }
                    tmp = safe.lastChild;
                }
            }
        }
        if (tmp) {
            safe.removeChild(tmp);
        }
        if (!support.appendChecked) {
            jQuery.grep(getAll(nodes, 'input'), fixDefaultChecked);
        }
        i = 0;
        while (elem = nodes[i++]) {
            if (selection && jQuery.inArray(elem, selection) > -1) {
                if (ignored) {
                    ignored.push(elem);
                }
                continue;
            }
            contains = jQuery.contains(elem.ownerDocument, elem);
            tmp = getAll(safe.appendChild(elem), 'script');
            if (contains) {
                setGlobalEval(tmp);
            }
            if (scripts) {
                j = 0;
                while (elem = tmp[j++]) {
                    if (rscriptType.test(elem.type || '')) {
                        scripts.push(elem);
                    }
                }
            }
        }
        tmp = null;
        return safe;
    }
    (function () {
        var i, eventName, div = document.createElement('div');
        for (i in {
                submit: true,
                change: true,
                focusin: true
            }) {
            eventName = 'on' + i;
            if (!(support[i] = eventName in window)) {
                div.setAttribute(eventName, 't');
                support[i] = div.attributes[eventName].expando === false;
            }
        }
        div = null;
    }());
    var rformElems = /^(?:input|select|textarea)$/i, rkeyEvent = /^key/, rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
    function returnTrue() {
        return true;
    }
    function returnFalse() {
        return false;
    }
    function safeActiveElement() {
        try {
            return document.activeElement;
        } catch (err) {
        }
    }
    function on(elem, types, selector, data, fn, one) {
        var origFn, type;
        if (typeof types === 'object') {
            if (typeof selector !== 'string') {
                data = data || selector;
                selector = undefined;
            }
            for (type in types) {
                on(elem, type, selector, data, types[type], one);
            }
            return elem;
        }
        if (data == null && fn == null) {
            fn = selector;
            data = selector = undefined;
        } else if (fn == null) {
            if (typeof selector === 'string') {
                fn = data;
                data = undefined;
            } else {
                fn = data;
                data = selector;
                selector = undefined;
            }
        }
        if (fn === false) {
            fn = returnFalse;
        } else if (!fn) {
            return elem;
        }
        if (one === 1) {
            origFn = fn;
            fn = function (event) {
                jQuery().off(event);
                return origFn.apply(this, arguments);
            };
            fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
        }
        return elem.each(function () {
            jQuery.event.add(this, types, fn, data, selector);
        });
    }
    jQuery.event = {
        global: {},
        add: function (elem, types, handler, data, selector) {
            var tmp, events, t, handleObjIn, special, eventHandle, handleObj, handlers, type, namespaces, origType, elemData = jQuery._data(elem);
            if (!elemData) {
                return;
            }
            if (handler.handler) {
                handleObjIn = handler;
                handler = handleObjIn.handler;
                selector = handleObjIn.selector;
            }
            if (!handler.guid) {
                handler.guid = jQuery.guid++;
            }
            if (!(events = elemData.events)) {
                events = elemData.events = {};
            }
            if (!(eventHandle = elemData.handle)) {
                eventHandle = elemData.handle = function (e) {
                    return typeof jQuery !== 'undefined' && (!e || jQuery.event.triggered !== e.type) ? jQuery.event.dispatch.apply(eventHandle.elem, arguments) : undefined;
                };
                eventHandle.elem = elem;
            }
            types = (types || '').match(rnotwhite) || [''];
            t = types.length;
            while (t--) {
                tmp = rtypenamespace.exec(types[t]) || [];
                type = origType = tmp[1];
                namespaces = (tmp[2] || '').split('.').sort();
                if (!type) {
                    continue;
                }
                special = jQuery.event.special[type] || {};
                type = (selector ? special.delegateType : special.bindType) || type;
                special = jQuery.event.special[type] || {};
                handleObj = jQuery.extend({
                    type: type,
                    origType: origType,
                    data: data,
                    handler: handler,
                    guid: handler.guid,
                    selector: selector,
                    needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                    namespace: namespaces.join('.')
                }, handleObjIn);
                if (!(handlers = events[type])) {
                    handlers = events[type] = [];
                    handlers.delegateCount = 0;
                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
                        if (elem.addEventListener) {
                            elem.addEventListener(type, eventHandle, false);
                        } else if (elem.attachEvent) {
                            elem.attachEvent('on' + type, eventHandle);
                        }
                    }
                }
                if (special.add) {
                    special.add.call(elem, handleObj);
                    if (!handleObj.handler.guid) {
                        handleObj.handler.guid = handler.guid;
                    }
                }
                if (selector) {
                    handlers.splice(handlers.delegateCount++, 0, handleObj);
                } else {
                    handlers.push(handleObj);
                }
                jQuery.event.global[type] = true;
            }
            elem = null;
        },
        remove: function (elem, types, handler, selector, mappedTypes) {
            var j, handleObj, tmp, origCount, t, events, special, handlers, type, namespaces, origType, elemData = jQuery.hasData(elem) && jQuery._data(elem);
            if (!elemData || !(events = elemData.events)) {
                return;
            }
            types = (types || '').match(rnotwhite) || [''];
            t = types.length;
            while (t--) {
                tmp = rtypenamespace.exec(types[t]) || [];
                type = origType = tmp[1];
                namespaces = (tmp[2] || '').split('.').sort();
                if (!type) {
                    for (type in events) {
                        jQuery.event.remove(elem, type + types[t], handler, selector, true);
                    }
                    continue;
                }
                special = jQuery.event.special[type] || {};
                type = (selector ? special.delegateType : special.bindType) || type;
                handlers = events[type] || [];
                tmp = tmp[2] && new RegExp('(^|\\.)' + namespaces.join('\\.(?:.*\\.|)') + '(\\.|$)');
                origCount = j = handlers.length;
                while (j--) {
                    handleObj = handlers[j];
                    if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === '**' && handleObj.selector)) {
                        handlers.splice(j, 1);
                        if (handleObj.selector) {
                            handlers.delegateCount--;
                        }
                        if (special.remove) {
                            special.remove.call(elem, handleObj);
                        }
                    }
                }
                if (origCount && !handlers.length) {
                    if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
                        jQuery.removeEvent(elem, type, elemData.handle);
                    }
                    delete events[type];
                }
            }
            if (jQuery.isEmptyObject(events)) {
                delete elemData.handle;
                jQuery._removeData(elem, 'events');
            }
        },
        trigger: function (event, data, elem, onlyHandlers) {
            var handle, ontype, cur, bubbleType, special, tmp, i, eventPath = [elem || document], type = hasOwn.call(event, 'type') ? event.type : event, namespaces = hasOwn.call(event, 'namespace') ? event.namespace.split('.') : [];
            cur = tmp = elem = elem || document;
            if (elem.nodeType === 3 || elem.nodeType === 8) {
                return;
            }
            if (rfocusMorph.test(type + jQuery.event.triggered)) {
                return;
            }
            if (type.indexOf('.') > -1) {
                namespaces = type.split('.');
                type = namespaces.shift();
                namespaces.sort();
            }
            ontype = type.indexOf(':') < 0 && 'on' + type;
            event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === 'object' && event);
            event.isTrigger = onlyHandlers ? 2 : 3;
            event.namespace = namespaces.join('.');
            event.rnamespace = event.namespace ? new RegExp('(^|\\.)' + namespaces.join('\\.(?:.*\\.|)') + '(\\.|$)') : null;
            event.result = undefined;
            if (!event.target) {
                event.target = elem;
            }
            data = data == null ? [event] : jQuery.makeArray(data, [event]);
            special = jQuery.event.special[type] || {};
            if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
                return;
            }
            if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
                bubbleType = special.delegateType || type;
                if (!rfocusMorph.test(bubbleType + type)) {
                    cur = cur.parentNode;
                }
                for (; cur; cur = cur.parentNode) {
                    eventPath.push(cur);
                    tmp = cur;
                }
                if (tmp === (elem.ownerDocument || document)) {
                    eventPath.push(tmp.defaultView || tmp.parentWindow || window);
                }
            }
            i = 0;
            while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
                event.type = i > 1 ? bubbleType : special.bindType || type;
                handle = (jQuery._data(cur, 'events') || {})[event.type] && jQuery._data(cur, 'handle');
                if (handle) {
                    handle.apply(cur, data);
                }
                handle = ontype && cur[ontype];
                if (handle && handle.apply && acceptData(cur)) {
                    event.result = handle.apply(cur, data);
                    if (event.result === false) {
                        event.preventDefault();
                    }
                }
            }
            event.type = type;
            if (!onlyHandlers && !event.isDefaultPrevented()) {
                if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
                    if (ontype && elem[type] && !jQuery.isWindow(elem)) {
                        tmp = elem[ontype];
                        if (tmp) {
                            elem[ontype] = null;
                        }
                        jQuery.event.triggered = type;
                        try {
                            elem[type]();
                        } catch (e) {
                        }
                        jQuery.event.triggered = undefined;
                        if (tmp) {
                            elem[ontype] = tmp;
                        }
                    }
                }
            }
            return event.result;
        },
        dispatch: function (event) {
            event = jQuery.event.fix(event);
            var i, j, ret, matched, handleObj, handlerQueue = [], args = slice.call(arguments), handlers = (jQuery._data(this, 'events') || {})[event.type] || [], special = jQuery.event.special[event.type] || {};
            args[0] = event;
            event.delegateTarget = this;
            if (special.preDispatch && special.preDispatch.call(this, event) === false) {
                return;
            }
            handlerQueue = jQuery.event.handlers.call(this, event, handlers);
            i = 0;
            while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
                event.currentTarget = matched.elem;
                j = 0;
                while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
                    if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {
                        event.handleObj = handleObj;
                        event.data = handleObj.data;
                        ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
                        if (ret !== undefined) {
                            if ((event.result = ret) === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                        }
                    }
                }
            }
            if (special.postDispatch) {
                special.postDispatch.call(this, event);
            }
            return event.result;
        },
        handlers: function (event, handlers) {
            var i, matches, sel, handleObj, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;
            if (delegateCount && cur.nodeType && (event.type !== 'click' || isNaN(event.button) || event.button < 1)) {
                for (; cur != this; cur = cur.parentNode || this) {
                    if (cur.nodeType === 1 && (cur.disabled !== true || event.type !== 'click')) {
                        matches = [];
                        for (i = 0; i < delegateCount; i++) {
                            handleObj = handlers[i];
                            sel = handleObj.selector + ' ';
                            if (matches[sel] === undefined) {
                                matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;
                            }
                            if (matches[sel]) {
                                matches.push(handleObj);
                            }
                        }
                        if (matches.length) {
                            handlerQueue.push({
                                elem: cur,
                                handlers: matches
                            });
                        }
                    }
                }
            }
            if (delegateCount < handlers.length) {
                handlerQueue.push({
                    elem: this,
                    handlers: handlers.slice(delegateCount)
                });
            }
            return handlerQueue;
        },
        fix: function (event) {
            if (event[jQuery.expando]) {
                return event;
            }
            var i, prop, copy, type = event.type, originalEvent = event, fixHook = this.fixHooks[type];
            if (!fixHook) {
                this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {};
            }
            copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;
            event = new jQuery.Event(originalEvent);
            i = copy.length;
            while (i--) {
                prop = copy[i];
                event[prop] = originalEvent[prop];
            }
            if (!event.target) {
                event.target = originalEvent.srcElement || document;
            }
            if (event.target.nodeType === 3) {
                event.target = event.target.parentNode;
            }
            event.metaKey = !!event.metaKey;
            return fixHook.filter ? fixHook.filter(event, originalEvent) : event;
        },
        props: ('altKey bubbles cancelable ctrlKey currentTarget detail eventPhase ' + 'metaKey relatedTarget shiftKey target timeStamp view which').split(' '),
        fixHooks: {},
        keyHooks: {
            props: 'char charCode key keyCode'.split(' '),
            filter: function (event, original) {
                if (event.which == null) {
                    event.which = original.charCode != null ? original.charCode : original.keyCode;
                }
                return event;
            }
        },
        mouseHooks: {
            props: ('button buttons clientX clientY fromElement offsetX offsetY ' + 'pageX pageY screenX screenY toElement').split(' '),
            filter: function (event, original) {
                var body, eventDoc, doc, button = original.button, fromElement = original.fromElement;
                if (event.pageX == null && original.clientX != null) {
                    eventDoc = event.target.ownerDocument || document;
                    doc = eventDoc.documentElement;
                    body = eventDoc.body;
                    event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
                    event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
                }
                if (!event.relatedTarget && fromElement) {
                    event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
                }
                if (!event.which && button !== undefined) {
                    event.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;
                }
                return event;
            }
        },
        special: {
            load: { noBubble: true },
            focus: {
                trigger: function () {
                    if (this !== safeActiveElement() && this.focus) {
                        try {
                            this.focus();
                            return false;
                        } catch (e) {
                        }
                    }
                },
                delegateType: 'focusin'
            },
            blur: {
                trigger: function () {
                    if (this === safeActiveElement() && this.blur) {
                        this.blur();
                        return false;
                    }
                },
                delegateType: 'focusout'
            },
            click: {
                trigger: function () {
                    if (jQuery.nodeName(this, 'input') && this.type === 'checkbox' && this.click) {
                        this.click();
                        return false;
                    }
                },
                _default: function (event) {
                    return jQuery.nodeName(event.target, 'a');
                }
            },
            beforeunload: {
                postDispatch: function (event) {
                    if (event.result !== undefined && event.originalEvent) {
                        event.originalEvent.returnValue = event.result;
                    }
                }
            }
        },
        simulate: function (type, elem, event) {
            var e = jQuery.extend(new jQuery.Event(), event, {
                type: type,
                isSimulated: true
            });
            jQuery.event.trigger(e, null, elem);
            if (e.isDefaultPrevented()) {
                event.preventDefault();
            }
        }
    };
    jQuery.removeEvent = document.removeEventListener ? function (elem, type, handle) {
        if (elem.removeEventListener) {
            elem.removeEventListener(type, handle);
        }
    } : function (elem, type, handle) {
        var name = 'on' + type;
        if (elem.detachEvent) {
            if (typeof elem[name] === 'undefined') {
                elem[name] = null;
            }
            elem.detachEvent(name, handle);
        }
    };
    jQuery.Event = function (src, props) {
        if (!(this instanceof jQuery.Event)) {
            return new jQuery.Event(src, props);
        }
        if (src && src.type) {
            this.originalEvent = src;
            this.type = src.type;
            this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === false ? returnTrue : returnFalse;
        } else {
            this.type = src;
        }
        if (props) {
            jQuery.extend(this, props);
        }
        this.timeStamp = src && src.timeStamp || jQuery.now();
        this[jQuery.expando] = true;
    };
    jQuery.Event.prototype = {
        constructor: jQuery.Event,
        isDefaultPrevented: returnFalse,
        isPropagationStopped: returnFalse,
        isImmediatePropagationStopped: returnFalse,
        preventDefault: function () {
            var e = this.originalEvent;
            this.isDefaultPrevented = returnTrue;
            if (!e) {
                return;
            }
            if (e.preventDefault) {
                e.preventDefault();
            } else {
                e.returnValue = false;
            }
        },
        stopPropagation: function () {
            var e = this.originalEvent;
            this.isPropagationStopped = returnTrue;
            if (!e || this.isSimulated) {
                return;
            }
            if (e.stopPropagation) {
                e.stopPropagation();
            }
            e.cancelBubble = true;
        },
        stopImmediatePropagation: function () {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = returnTrue;
            if (e && e.stopImmediatePropagation) {
                e.stopImmediatePropagation();
            }
            this.stopPropagation();
        }
    };
    jQuery.each({
        mouseenter: 'mouseover',
        mouseleave: 'mouseout',
        pointerenter: 'pointerover',
        pointerleave: 'pointerout'
    }, function (orig, fix) {
        jQuery.event.special[orig] = {
            delegateType: fix,
            bindType: fix,
            handle: function (event) {
                var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;
                if (!related || related !== target && !jQuery.contains(target, related)) {
                    event.type = handleObj.origType;
                    ret = handleObj.handler.apply(this, arguments);
                    event.type = fix;
                }
                return ret;
            }
        };
    });
    if (!support.submit) {
        jQuery.event.special.submit = {
            setup: function () {
                if (jQuery.nodeName(this, 'form')) {
                    return false;
                }
                jQuery.event.add(this, 'click._submit keypress._submit', function (e) {
                    var elem = e.target, form = jQuery.nodeName(elem, 'input') || jQuery.nodeName(elem, 'button') ? jQuery.prop(elem, 'form') : undefined;
                    if (form && !jQuery._data(form, 'submit')) {
                        jQuery.event.add(form, 'submit._submit', function (event) {
                            event._submitBubble = true;
                        });
                        jQuery._data(form, 'submit', true);
                    }
                });
            },
            postDispatch: function (event) {
                if (event._submitBubble) {
                    delete event._submitBubble;
                    if (this.parentNode && !event.isTrigger) {
                        jQuery.event.simulate('submit', this.parentNode, event);
                    }
                }
            },
            teardown: function () {
                if (jQuery.nodeName(this, 'form')) {
                    return false;
                }
                jQuery.event.remove(this, '._submit');
            }
        };
    }
    if (!support.change) {
        jQuery.event.special.change = {
            setup: function () {
                if (rformElems.test(this.nodeName)) {
                    if (this.type === 'checkbox' || this.type === 'radio') {
                        jQuery.event.add(this, 'propertychange._change', function (event) {
                            if (event.originalEvent.propertyName === 'checked') {
                                this._justChanged = true;
                            }
                        });
                        jQuery.event.add(this, 'click._change', function (event) {
                            if (this._justChanged && !event.isTrigger) {
                                this._justChanged = false;
                            }
                            jQuery.event.simulate('change', this, event);
                        });
                    }
                    return false;
                }
                jQuery.event.add(this, 'beforeactivate._change', function (e) {
                    var elem = e.target;
                    if (rformElems.test(elem.nodeName) && !jQuery._data(elem, 'change')) {
                        jQuery.event.add(elem, 'change._change', function (event) {
                            if (this.parentNode && !event.isSimulated && !event.isTrigger) {
                                jQuery.event.simulate('change', this.parentNode, event);
                            }
                        });
                        jQuery._data(elem, 'change', true);
                    }
                });
            },
            handle: function (event) {
                var elem = event.target;
                if (this !== elem || event.isSimulated || event.isTrigger || elem.type !== 'radio' && elem.type !== 'checkbox') {
                    return event.handleObj.handler.apply(this, arguments);
                }
            },
            teardown: function () {
                jQuery.event.remove(this, '._change');
                return !rformElems.test(this.nodeName);
            }
        };
    }
    if (!support.focusin) {
        jQuery.each({
            focus: 'focusin',
            blur: 'focusout'
        }, function (orig, fix) {
            var handler = function (event) {
                jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
            };
            jQuery.event.special[fix] = {
                setup: function () {
                    var doc = this.ownerDocument || this, attaches = jQuery._data(doc, fix);
                    if (!attaches) {
                        doc.addEventListener(orig, handler, true);
                    }
                    jQuery._data(doc, fix, (attaches || 0) + 1);
                },
                teardown: function () {
                    var doc = this.ownerDocument || this, attaches = jQuery._data(doc, fix) - 1;
                    if (!attaches) {
                        doc.removeEventListener(orig, handler, true);
                        jQuery._removeData(doc, fix);
                    } else {
                        jQuery._data(doc, fix, attaches);
                    }
                }
            };
        });
    }
    jQuery.fn.extend({
        on: function (types, selector, data, fn) {
            return on(this, types, selector, data, fn);
        },
        one: function (types, selector, data, fn) {
            return on(this, types, selector, data, fn, 1);
        },
        off: function (types, selector, fn) {
            var handleObj, type;
            if (types && types.preventDefault && types.handleObj) {
                handleObj = types.handleObj;
                jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + '.' + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
                return this;
            }
            if (typeof types === 'object') {
                for (type in types) {
                    this.off(type, selector, types[type]);
                }
                return this;
            }
            if (selector === false || typeof selector === 'function') {
                fn = selector;
                selector = undefined;
            }
            if (fn === false) {
                fn = returnFalse;
            }
            return this.each(function () {
                jQuery.event.remove(this, types, fn, selector);
            });
        },
        trigger: function (type, data) {
            return this.each(function () {
                jQuery.event.trigger(type, data, this);
            });
        },
        triggerHandler: function (type, data) {
            var elem = this[0];
            if (elem) {
                return jQuery.event.trigger(type, data, elem, true);
            }
        }
    });
    var rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g, rnoshimcache = new RegExp('<(?:' + nodeNames + ')[\\s/>]', 'i'), rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi, rnoInnerhtml = /<script|<style|<link/i, rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rscriptTypeMasked = /^true\/(.*)/, rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, safeFragment = createSafeFragment(document), fragmentDiv = safeFragment.appendChild(document.createElement('div'));
    function manipulationTarget(elem, content) {
        return jQuery.nodeName(elem, 'table') && jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, 'tr') ? elem.getElementsByTagName('tbody')[0] || elem.appendChild(elem.ownerDocument.createElement('tbody')) : elem;
    }
    function disableScript(elem) {
        elem.type = (jQuery.find.attr(elem, 'type') !== null) + '/' + elem.type;
        return elem;
    }
    function restoreScript(elem) {
        var match = rscriptTypeMasked.exec(elem.type);
        if (match) {
            elem.type = match[1];
        } else {
            elem.removeAttribute('type');
        }
        return elem;
    }
    function cloneCopyEvent(src, dest) {
        if (dest.nodeType !== 1 || !jQuery.hasData(src)) {
            return;
        }
        var type, i, l, oldData = jQuery._data(src), curData = jQuery._data(dest, oldData), events = oldData.events;
        if (events) {
            delete curData.handle;
            curData.events = {};
            for (type in events) {
                for (i = 0, l = events[type].length; i < l; i++) {
                    jQuery.event.add(dest, type, events[type][i]);
                }
            }
        }
        if (curData.data) {
            curData.data = jQuery.extend({}, curData.data);
        }
    }
    function fixCloneNodeIssues(src, dest) {
        var nodeName, e, data;
        if (dest.nodeType !== 1) {
            return;
        }
        nodeName = dest.nodeName.toLowerCase();
        if (!support.noCloneEvent && dest[jQuery.expando]) {
            data = jQuery._data(dest);
            for (e in data.events) {
                jQuery.removeEvent(dest, e, data.handle);
            }
            dest.removeAttribute(jQuery.expando);
        }
        if (nodeName === 'script' && dest.text !== src.text) {
            disableScript(dest).text = src.text;
            restoreScript(dest);
        } else if (nodeName === 'object') {
            if (dest.parentNode) {
                dest.outerHTML = src.outerHTML;
            }
            if (support.html5Clone && (src.innerHTML && !jQuery.trim(dest.innerHTML))) {
                dest.innerHTML = src.innerHTML;
            }
        } else if (nodeName === 'input' && rcheckableType.test(src.type)) {
            dest.defaultChecked = dest.checked = src.checked;
            if (dest.value !== src.value) {
                dest.value = src.value;
            }
        } else if (nodeName === 'option') {
            dest.defaultSelected = dest.selected = src.defaultSelected;
        } else if (nodeName === 'input' || nodeName === 'textarea') {
            dest.defaultValue = src.defaultValue;
        }
    }
    function domManip(collection, args, callback, ignored) {
        args = concat.apply([], args);
        var first, node, hasScripts, scripts, doc, fragment, i = 0, l = collection.length, iNoClone = l - 1, value = args[0], isFunction = jQuery.isFunction(value);
        if (isFunction || l > 1 && typeof value === 'string' && !support.checkClone && rchecked.test(value)) {
            return collection.each(function (index) {
                var self = collection.eq(index);
                if (isFunction) {
                    args[0] = value.call(this, index, self.html());
                }
                domManip(self, args, callback, ignored);
            });
        }
        if (l) {
            fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
            first = fragment.firstChild;
            if (fragment.childNodes.length === 1) {
                fragment = first;
            }
            if (first || ignored) {
                scripts = jQuery.map(getAll(fragment, 'script'), disableScript);
                hasScripts = scripts.length;
                for (; i < l; i++) {
                    node = fragment;
                    if (i !== iNoClone) {
                        node = jQuery.clone(node, true, true);
                        if (hasScripts) {
                            jQuery.merge(scripts, getAll(node, 'script'));
                        }
                    }
                    callback.call(collection[i], node, i);
                }
                if (hasScripts) {
                    doc = scripts[scripts.length - 1].ownerDocument;
                    jQuery.map(scripts, restoreScript);
                    for (i = 0; i < hasScripts; i++) {
                        node = scripts[i];
                        if (rscriptType.test(node.type || '') && !jQuery._data(node, 'globalEval') && jQuery.contains(doc, node)) {
                            if (node.src) {
                                if (jQuery._evalUrl) {
                                    jQuery._evalUrl(node.src);
                                }
                            } else {
                                jQuery.globalEval((node.text || node.textContent || node.innerHTML || '').replace(rcleanScript, ''));
                            }
                        }
                    }
                }
                fragment = first = null;
            }
        }
        return collection;
    }
    function remove(elem, selector, keepData) {
        var node, elems = selector ? jQuery.filter(selector, elem) : elem, i = 0;
        for (; (node = elems[i]) != null; i++) {
            if (!keepData && node.nodeType === 1) {
                jQuery.cleanData(getAll(node));
            }
            if (node.parentNode) {
                if (keepData && jQuery.contains(node.ownerDocument, node)) {
                    setGlobalEval(getAll(node, 'script'));
                }
                node.parentNode.removeChild(node);
            }
        }
        return elem;
    }
    jQuery.extend({
        htmlPrefilter: function (html) {
            return html.replace(rxhtmlTag, '<$1></$2>');
        },
        clone: function (elem, dataAndEvents, deepDataAndEvents) {
            var destElements, node, clone, i, srcElements, inPage = jQuery.contains(elem.ownerDocument, elem);
            if (support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test('<' + elem.nodeName + '>')) {
                clone = elem.cloneNode(true);
            } else {
                fragmentDiv.innerHTML = elem.outerHTML;
                fragmentDiv.removeChild(clone = fragmentDiv.firstChild);
            }
            if ((!support.noCloneEvent || !support.noCloneChecked) && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
                destElements = getAll(clone);
                srcElements = getAll(elem);
                for (i = 0; (node = srcElements[i]) != null; ++i) {
                    if (destElements[i]) {
                        fixCloneNodeIssues(node, destElements[i]);
                    }
                }
            }
            if (dataAndEvents) {
                if (deepDataAndEvents) {
                    srcElements = srcElements || getAll(elem);
                    destElements = destElements || getAll(clone);
                    for (i = 0; (node = srcElements[i]) != null; i++) {
                        cloneCopyEvent(node, destElements[i]);
                    }
                } else {
                    cloneCopyEvent(elem, clone);
                }
            }
            destElements = getAll(clone, 'script');
            if (destElements.length > 0) {
                setGlobalEval(destElements, !inPage && getAll(elem, 'script'));
            }
            destElements = srcElements = node = null;
            return clone;
        },
        cleanData: function (elems, forceAcceptData) {
            var elem, type, id, data, i = 0, internalKey = jQuery.expando, cache = jQuery.cache, attributes = support.attributes, special = jQuery.event.special;
            for (; (elem = elems[i]) != null; i++) {
                if (forceAcceptData || acceptData(elem)) {
                    id = elem[internalKey];
                    data = id && cache[id];
                    if (data) {
                        if (data.events) {
                            for (type in data.events) {
                                if (special[type]) {
                                    jQuery.event.remove(elem, type);
                                } else {
                                    jQuery.removeEvent(elem, type, data.handle);
                                }
                            }
                        }
                        if (cache[id]) {
                            delete cache[id];
                            if (!attributes && typeof elem.removeAttribute !== 'undefined') {
                                elem.removeAttribute(internalKey);
                            } else {
                                elem[internalKey] = undefined;
                            }
                            deletedIds.push(id);
                        }
                    }
                }
            }
        }
    });
    jQuery.fn.extend({
        domManip: domManip,
        detach: function (selector) {
            return remove(this, selector, true);
        },
        remove: function (selector) {
            return remove(this, selector);
        },
        text: function (value) {
            return access(this, function (value) {
                return value === undefined ? jQuery.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value));
            }, null, value, arguments.length);
        },
        append: function () {
            return domManip(this, arguments, function (elem) {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                    var target = manipulationTarget(this, elem);
                    target.appendChild(elem);
                }
            });
        },
        prepend: function () {
            return domManip(this, arguments, function (elem) {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                    var target = manipulationTarget(this, elem);
                    target.insertBefore(elem, target.firstChild);
                }
            });
        },
        before: function () {
            return domManip(this, arguments, function (elem) {
                if (this.parentNode) {
                    this.parentNode.insertBefore(elem, this);
                }
            });
        },
        after: function () {
            return domManip(this, arguments, function (elem) {
                if (this.parentNode) {
                    this.parentNode.insertBefore(elem, this.nextSibling);
                }
            });
        },
        empty: function () {
            var elem, i = 0;
            for (; (elem = this[i]) != null; i++) {
                if (elem.nodeType === 1) {
                    jQuery.cleanData(getAll(elem, false));
                }
                while (elem.firstChild) {
                    elem.removeChild(elem.firstChild);
                }
                if (elem.options && jQuery.nodeName(elem, 'select')) {
                    elem.options.length = 0;
                }
            }
            return this;
        },
        clone: function (dataAndEvents, deepDataAndEvents) {
            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
            return this.map(function () {
                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
            });
        },
        html: function (value) {
            return access(this, function (value) {
                var elem = this[0] || {}, i = 0, l = this.length;
                if (value === undefined) {
                    return elem.nodeType === 1 ? elem.innerHTML.replace(rinlinejQuery, '') : undefined;
                }
                if (typeof value === 'string' && !rnoInnerhtml.test(value) && (support.htmlSerialize || !rnoshimcache.test(value)) && (support.leadingWhitespace || !rleadingWhitespace.test(value)) && !wrapMap[(rtagName.exec(value) || [
                        '',
                        ''
                    ])[1].toLowerCase()]) {
                    value = jQuery.htmlPrefilter(value);
                    try {
                        for (; i < l; i++) {
                            elem = this[i] || {};
                            if (elem.nodeType === 1) {
                                jQuery.cleanData(getAll(elem, false));
                                elem.innerHTML = value;
                            }
                        }
                        elem = 0;
                    } catch (e) {
                    }
                }
                if (elem) {
                    this.empty().append(value);
                }
            }, null, value, arguments.length);
        },
        replaceWith: function () {
            var ignored = [];
            return domManip(this, arguments, function (elem) {
                var parent = this.parentNode;
                if (jQuery.inArray(this, ignored) < 0) {
                    jQuery.cleanData(getAll(this));
                    if (parent) {
                        parent.replaceChild(elem, this);
                    }
                }
            }, ignored);
        }
    });
    jQuery.each({
        appendTo: 'append',
        prependTo: 'prepend',
        insertBefore: 'before',
        insertAfter: 'after',
        replaceAll: 'replaceWith'
    }, function (name, original) {
        jQuery.fn[name] = function (selector) {
            var elems, i = 0, ret = [], insert = jQuery(selector), last = insert.length - 1;
            for (; i <= last; i++) {
                elems = i === last ? this : this.clone(true);
                jQuery(insert[i])[original](elems);
                push.apply(ret, elems.get());
            }
            return this.pushStack(ret);
        };
    });
    var iframe, elemdisplay = {
            HTML: 'block',
            BODY: 'block'
        };
    function actualDisplay(name, doc) {
        var elem = jQuery(doc.createElement(name)).appendTo(doc.body), display = jQuery.css(elem[0], 'display');
        elem.detach();
        return display;
    }
    function defaultDisplay(nodeName) {
        var doc = document, display = elemdisplay[nodeName];
        if (!display) {
            display = actualDisplay(nodeName, doc);
            if (display === 'none' || !display) {
                iframe = (iframe || jQuery('<iframe frameborder=\'0\' width=\'0\' height=\'0\'/>')).appendTo(doc.documentElement);
                doc = (iframe[0].contentWindow || iframe[0].contentDocument).document;
                doc.write();
                doc.close();
                display = actualDisplay(nodeName, doc);
                iframe.detach();
            }
            elemdisplay[nodeName] = display;
        }
        return display;
    }
    var rmargin = /^margin/;
    var rnumnonpx = new RegExp('^(' + pnum + ')(?!px)[a-z%]+$', 'i');
    var swap = function (elem, options, callback, args) {
        var ret, name, old = {};
        for (name in options) {
            old[name] = elem.style[name];
            elem.style[name] = options[name];
        }
        ret = callback.apply(elem, args || []);
        for (name in options) {
            elem.style[name] = old[name];
        }
        return ret;
    };
    var documentElement = document.documentElement;
    (function () {
        var pixelPositionVal, pixelMarginRightVal, boxSizingReliableVal, reliableHiddenOffsetsVal, reliableMarginRightVal, reliableMarginLeftVal, container = document.createElement('div'), div = document.createElement('div');
        if (!div.style) {
            return;
        }
        div.style.cssText = 'float:left;opacity:.5';
        support.opacity = div.style.opacity === '0.5';
        support.cssFloat = !!div.style.cssFloat;
        div.style.backgroundClip = 'content-box';
        div.cloneNode(true).style.backgroundClip = '';
        support.clearCloneStyle = div.style.backgroundClip === 'content-box';
        container = document.createElement('div');
        container.style.cssText = 'border:0;width:8px;height:0;top:0;left:-9999px;' + 'padding:0;margin-top:1px;position:absolute';
        div.innerHTML = '';
        container.appendChild(div);
        support.boxSizing = div.style.boxSizing === '' || div.style.MozBoxSizing === '' || div.style.WebkitBoxSizing === '';
        jQuery.extend(support, {
            reliableHiddenOffsets: function () {
                if (pixelPositionVal == null) {
                    computeStyleTests();
                }
                return reliableHiddenOffsetsVal;
            },
            boxSizingReliable: function () {
                if (pixelPositionVal == null) {
                    computeStyleTests();
                }
                return boxSizingReliableVal;
            },
            pixelMarginRight: function () {
                if (pixelPositionVal == null) {
                    computeStyleTests();
                }
                return pixelMarginRightVal;
            },
            pixelPosition: function () {
                if (pixelPositionVal == null) {
                    computeStyleTests();
                }
                return pixelPositionVal;
            },
            reliableMarginRight: function () {
                if (pixelPositionVal == null) {
                    computeStyleTests();
                }
                return reliableMarginRightVal;
            },
            reliableMarginLeft: function () {
                if (pixelPositionVal == null) {
                    computeStyleTests();
                }
                return reliableMarginLeftVal;
            }
        });
        function computeStyleTests() {
            var contents, divStyle, documentElement = document.documentElement;
            documentElement.appendChild(container);
            div.style.cssText = '-webkit-box-sizing:border-box;box-sizing:border-box;' + 'position:relative;display:block;' + 'margin:auto;border:1px;padding:1px;' + 'top:1%;width:50%';
            pixelPositionVal = boxSizingReliableVal = reliableMarginLeftVal = false;
            pixelMarginRightVal = reliableMarginRightVal = true;
            if (window.getComputedStyle) {
                divStyle = window.getComputedStyle(div);
                pixelPositionVal = (divStyle || {}).top !== '1%';
                reliableMarginLeftVal = (divStyle || {}).marginLeft === '2px';
                boxSizingReliableVal = (divStyle || { width: '4px' }).width === '4px';
                div.style.marginRight = '50%';
                pixelMarginRightVal = (divStyle || { marginRight: '4px' }).marginRight === '4px';
                contents = div.appendChild(document.createElement('div'));
                contents.style.cssText = div.style.cssText = '-webkit-box-sizing:content-box;-moz-box-sizing:content-box;' + 'box-sizing:content-box;display:block;margin:0;border:0;padding:0';
                contents.style.marginRight = contents.style.width = '0';
                div.style.width = '1px';
                reliableMarginRightVal = !parseFloat((window.getComputedStyle(contents) || {}).marginRight);
                div.removeChild(contents);
            }
            div.style.display = 'none';
            reliableHiddenOffsetsVal = div.getClientRects().length === 0;
            if (reliableHiddenOffsetsVal) {
                div.style.display = '';
                div.innerHTML = '<table><tr><td></td><td>t</td></tr></table>';
                contents = div.getElementsByTagName('td');
                contents[0].style.cssText = 'margin:0;border:0;padding:0;display:none';
                reliableHiddenOffsetsVal = contents[0].offsetHeight === 0;
                if (reliableHiddenOffsetsVal) {
                    contents[0].style.display = '';
                    contents[1].style.display = 'none';
                    reliableHiddenOffsetsVal = contents[0].offsetHeight === 0;
                }
            }
            documentElement.removeChild(container);
        }
    }());
    var getStyles, curCSS, rposition = /^(top|right|bottom|left)$/;
    if (window.getComputedStyle) {
        getStyles = function (elem) {
            var view = elem.ownerDocument.defaultView;
            if (!view || !view.opener) {
                view = window;
            }
            return view.getComputedStyle(elem);
        };
        curCSS = function (elem, name, computed) {
            var width, minWidth, maxWidth, ret, style = elem.style;
            computed = computed || getStyles(elem);
            ret = computed ? computed.getPropertyValue(name) || computed[name] : undefined;
            if ((ret === '' || ret === undefined) && !jQuery.contains(elem.ownerDocument, elem)) {
                ret = jQuery.style(elem, name);
            }
            if (computed) {
                if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {
                    width = style.width;
                    minWidth = style.minWidth;
                    maxWidth = style.maxWidth;
                    style.minWidth = style.maxWidth = style.width = ret;
                    ret = computed.width;
                    style.width = width;
                    style.minWidth = minWidth;
                    style.maxWidth = maxWidth;
                }
            }
            return ret === undefined ? ret : ret + '';
        };
    } else if (documentElement.currentStyle) {
        getStyles = function (elem) {
            return elem.currentStyle;
        };
        curCSS = function (elem, name, computed) {
            var left, rs, rsLeft, ret, style = elem.style;
            computed = computed || getStyles(elem);
            ret = computed ? computed[name] : undefined;
            if (ret == null && style && style[name]) {
                ret = style[name];
            }
            if (rnumnonpx.test(ret) && !rposition.test(name)) {
                left = style.left;
                rs = elem.runtimeStyle;
                rsLeft = rs && rs.left;
                if (rsLeft) {
                    rs.left = elem.currentStyle.left;
                }
                style.left = name === 'fontSize' ? '1em' : ret;
                ret = style.pixelLeft + 'px';
                style.left = left;
                if (rsLeft) {
                    rs.left = rsLeft;
                }
            }
            return ret === undefined ? ret : ret + '' || 'auto';
        };
    }
    function addGetHookIf(conditionFn, hookFn) {
        return {
            get: function () {
                if (conditionFn()) {
                    delete this.get;
                    return;
                }
                return (this.get = hookFn).apply(this, arguments);
            }
        };
    }
    var ralpha = /alpha\([^)]*\)/i, ropacity = /opacity\s*=\s*([^)]*)/i, rdisplayswap = /^(none|table(?!-c[ea]).+)/, rnumsplit = new RegExp('^(' + pnum + ')(.*)$', 'i'), cssShow = {
            position: 'absolute',
            visibility: 'hidden',
            display: 'block'
        }, cssNormalTransform = {
            letterSpacing: '0',
            fontWeight: '400'
        }, cssPrefixes = [
            'Webkit',
            'O',
            'Moz',
            'ms'
        ], emptyStyle = document.createElement('div').style;
    function vendorPropName(name) {
        if (name in emptyStyle) {
            return name;
        }
        var capName = name.charAt(0).toUpperCase() + name.slice(1), i = cssPrefixes.length;
        while (i--) {
            name = cssPrefixes[i] + capName;
            if (name in emptyStyle) {
                return name;
            }
        }
    }
    function showHide(elements, show) {
        var display, elem, hidden, values = [], index = 0, length = elements.length;
        for (; index < length; index++) {
            elem = elements[index];
            if (!elem.style) {
                continue;
            }
            values[index] = jQuery._data(elem, 'olddisplay');
            display = elem.style.display;
            if (show) {
                if (!values[index] && display === 'none') {
                    elem.style.display = '';
                }
                if (elem.style.display === '' && isHidden(elem)) {
                    values[index] = jQuery._data(elem, 'olddisplay', defaultDisplay(elem.nodeName));
                }
            } else {
                hidden = isHidden(elem);
                if (display && display !== 'none' || !hidden) {
                    jQuery._data(elem, 'olddisplay', hidden ? display : jQuery.css(elem, 'display'));
                }
            }
        }
        for (index = 0; index < length; index++) {
            elem = elements[index];
            if (!elem.style) {
                continue;
            }
            if (!show || elem.style.display === 'none' || elem.style.display === '') {
                elem.style.display = show ? values[index] || '' : 'none';
            }
        }
        return elements;
    }
    function setPositiveNumber(elem, value, subtract) {
        var matches = rnumsplit.exec(value);
        return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || 'px') : value;
    }
    function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
        var i = extra === (isBorderBox ? 'border' : 'content') ? 4 : name === 'width' ? 1 : 0, val = 0;
        for (; i < 4; i += 2) {
            if (extra === 'margin') {
                val += jQuery.css(elem, extra + cssExpand[i], true, styles);
            }
            if (isBorderBox) {
                if (extra === 'content') {
                    val -= jQuery.css(elem, 'padding' + cssExpand[i], true, styles);
                }
                if (extra !== 'margin') {
                    val -= jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);
                }
            } else {
                val += jQuery.css(elem, 'padding' + cssExpand[i], true, styles);
                if (extra !== 'padding') {
                    val += jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);
                }
            }
        }
        return val;
    }
    function getWidthOrHeight(elem, name, extra) {
        var valueIsBorderBox = true, val = name === 'width' ? elem.offsetWidth : elem.offsetHeight, styles = getStyles(elem), isBorderBox = support.boxSizing && jQuery.css(elem, 'boxSizing', false, styles) === 'border-box';
        if (document.msFullscreenElement && window.top !== window) {
            if (elem.getClientRects().length) {
                val = Math.round(elem.getBoundingClientRect()[name] * 100);
            }
        }
        if (val <= 0 || val == null) {
            val = curCSS(elem, name, styles);
            if (val < 0 || val == null) {
                val = elem.style[name];
            }
            if (rnumnonpx.test(val)) {
                return val;
            }
            valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);
            val = parseFloat(val) || 0;
        }
        return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? 'border' : 'content'), valueIsBorderBox, styles) + 'px';
    }
    jQuery.extend({
        cssHooks: {
            opacity: {
                get: function (elem, computed) {
                    if (computed) {
                        var ret = curCSS(elem, 'opacity');
                        return ret === '' ? '1' : ret;
                    }
                }
            }
        },
        cssNumber: {
            'animationIterationCount': true,
            'columnCount': true,
            'fillOpacity': true,
            'flexGrow': true,
            'flexShrink': true,
            'fontWeight': true,
            'lineHeight': true,
            'opacity': true,
            'order': true,
            'orphans': true,
            'widows': true,
            'zIndex': true,
            'zoom': true
        },
        cssProps: { 'float': support.cssFloat ? 'cssFloat' : 'styleFloat' },
        style: function (elem, name, value, extra) {
            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
                return;
            }
            var ret, type, hooks, origName = jQuery.camelCase(name), style = elem.style;
            name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName);
            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
            if (value !== undefined) {
                type = typeof value;
                if (type === 'string' && (ret = rcssNum.exec(value)) && ret[1]) {
                    value = adjustCSS(elem, name, ret);
                    type = 'number';
                }
                if (value == null || value !== value) {
                    return;
                }
                if (type === 'number') {
                    value += ret && ret[3] || (jQuery.cssNumber[origName] ? '' : 'px');
                }
                if (!support.clearCloneStyle && value === '' && name.indexOf('background') === 0) {
                    style[name] = 'inherit';
                }
                if (!hooks || !('set' in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
                    try {
                        style[name] = value;
                    } catch (e) {
                    }
                }
            } else {
                if (hooks && 'get' in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
                    return ret;
                }
                return style[name];
            }
        },
        css: function (elem, name, extra, styles) {
            var num, val, hooks, origName = jQuery.camelCase(name);
            name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(origName) || origName);
            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
            if (hooks && 'get' in hooks) {
                val = hooks.get(elem, true, extra);
            }
            if (val === undefined) {
                val = curCSS(elem, name, styles);
            }
            if (val === 'normal' && name in cssNormalTransform) {
                val = cssNormalTransform[name];
            }
            if (extra === '' || extra) {
                num = parseFloat(val);
                return extra === true || isFinite(num) ? num || 0 : val;
            }
            return val;
        }
    });
    jQuery.each([
        'height',
        'width'
    ], function (i, name) {
        jQuery.cssHooks[name] = {
            get: function (elem, computed, extra) {
                if (computed) {
                    return rdisplayswap.test(jQuery.css(elem, 'display')) && elem.offsetWidth === 0 ? swap(elem, cssShow, function () {
                        return getWidthOrHeight(elem, name, extra);
                    }) : getWidthOrHeight(elem, name, extra);
                }
            },
            set: function (elem, value, extra) {
                var styles = extra && getStyles(elem);
                return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, support.boxSizing && jQuery.css(elem, 'boxSizing', false, styles) === 'border-box', styles) : 0);
            }
        };
    });
    if (!support.opacity) {
        jQuery.cssHooks.opacity = {
            get: function (elem, computed) {
                return ropacity.test((computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || '') ? 0.01 * parseFloat(RegExp.$1) + '' : computed ? '1' : '';
            },
            set: function (elem, value) {
                var style = elem.style, currentStyle = elem.currentStyle, opacity = jQuery.isNumeric(value) ? 'alpha(opacity=' + value * 100 + ')' : '', filter = currentStyle && currentStyle.filter || style.filter || '';
                style.zoom = 1;
                if ((value >= 1 || value === '') && jQuery.trim(filter.replace(ralpha, '')) === '' && style.removeAttribute) {
                    style.removeAttribute('filter');
                    if (value === '' || currentStyle && !currentStyle.filter) {
                        return;
                    }
                }
                style.filter = ralpha.test(filter) ? filter.replace(ralpha, opacity) : filter + ' ' + opacity;
            }
        };
    }
    jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function (elem, computed) {
        if (computed) {
            return swap(elem, { 'display': 'inline-block' }, curCSS, [
                elem,
                'marginRight'
            ]);
        }
    });
    jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {
        if (computed) {
            return (parseFloat(curCSS(elem, 'marginLeft')) || (jQuery.contains(elem.ownerDocument, elem) ? elem.getBoundingClientRect().left - swap(elem, { marginLeft: 0 }, function () {
                return elem.getBoundingClientRect().left;
            }) : 0)) + 'px';
        }
    });
    jQuery.each({
        margin: '',
        padding: '',
        border: 'Width'
    }, function (prefix, suffix) {
        jQuery.cssHooks[prefix + suffix] = {
            expand: function (value) {
                var i = 0, expanded = {}, parts = typeof value === 'string' ? value.split(' ') : [value];
                for (; i < 4; i++) {
                    expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
                }
                return expanded;
            }
        };
        if (!rmargin.test(prefix)) {
            jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
        }
    });
    jQuery.fn.extend({
        css: function (name, value) {
            return access(this, function (elem, name, value) {
                var styles, len, map = {}, i = 0;
                if (jQuery.isArray(name)) {
                    styles = getStyles(elem);
                    len = name.length;
                    for (; i < len; i++) {
                        map[name[i]] = jQuery.css(elem, name[i], false, styles);
                    }
                    return map;
                }
                return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
            }, name, value, arguments.length > 1);
        },
        show: function () {
            return showHide(this, true);
        },
        hide: function () {
            return showHide(this);
        },
        toggle: function (state) {
            if (typeof state === 'boolean') {
                return state ? this.show() : this.hide();
            }
            return this.each(function () {
                if (isHidden(this)) {
                    jQuery(this).show();
                } else {
                    jQuery(this).hide();
                }
            });
        }
    });
    function Tween(elem, options, prop, end, easing) {
        return new Tween.prototype.init(elem, options, prop, end, easing);
    }
    jQuery.Tween = Tween;
    Tween.prototype = {
        constructor: Tween,
        init: function (elem, options, prop, end, easing, unit) {
            this.elem = elem;
            this.prop = prop;
            this.easing = easing || jQuery.easing._default;
            this.options = options;
            this.start = this.now = this.cur();
            this.end = end;
            this.unit = unit || (jQuery.cssNumber[prop] ? '' : 'px');
        },
        cur: function () {
            var hooks = Tween.propHooks[this.prop];
            return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
        },
        run: function (percent) {
            var eased, hooks = Tween.propHooks[this.prop];
            if (this.options.duration) {
                this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
            } else {
                this.pos = eased = percent;
            }
            this.now = (this.end - this.start) * eased + this.start;
            if (this.options.step) {
                this.options.step.call(this.elem, this.now, this);
            }
            if (hooks && hooks.set) {
                hooks.set(this);
            } else {
                Tween.propHooks._default.set(this);
            }
            return this;
        }
    };
    Tween.prototype.init.prototype = Tween.prototype;
    Tween.propHooks = {
        _default: {
            get: function (tween) {
                var result;
                if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
                    return tween.elem[tween.prop];
                }
                result = jQuery.css(tween.elem, tween.prop, '');
                return !result || result === 'auto' ? 0 : result;
            },
            set: function (tween) {
                if (jQuery.fx.step[tween.prop]) {
                    jQuery.fx.step[tween.prop](tween);
                } else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
                    jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
                } else {
                    tween.elem[tween.prop] = tween.now;
                }
            }
        }
    };
    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
        set: function (tween) {
            if (tween.elem.nodeType && tween.elem.parentNode) {
                tween.elem[tween.prop] = tween.now;
            }
        }
    };
    jQuery.easing = {
        linear: function (p) {
            return p;
        },
        swing: function (p) {
            return 0.5 - Math.cos(p * Math.PI) / 2;
        },
        _default: 'swing'
    };
    jQuery.fx = Tween.prototype.init;
    jQuery.fx.step = {};
    var fxNow, timerId, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;
    function createFxNow() {
        window.setTimeout(function () {
            fxNow = undefined;
        });
        return fxNow = jQuery.now();
    }
    function genFx(type, includeWidth) {
        var which, attrs = { height: type }, i = 0;
        includeWidth = includeWidth ? 1 : 0;
        for (; i < 4; i += 2 - includeWidth) {
            which = cssExpand[i];
            attrs['margin' + which] = attrs['padding' + which] = type;
        }
        if (includeWidth) {
            attrs.opacity = attrs.width = type;
        }
        return attrs;
    }
    function createTween(value, prop, animation) {
        var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners['*']), index = 0, length = collection.length;
        for (; index < length; index++) {
            if (tween = collection[index].call(animation, prop, value)) {
                return tween;
            }
        }
    }
    function defaultPrefilter(elem, props, opts) {
        var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHidden(elem), dataShow = jQuery._data(elem, 'fxshow');
        if (!opts.queue) {
            hooks = jQuery._queueHooks(elem, 'fx');
            if (hooks.unqueued == null) {
                hooks.unqueued = 0;
                oldfire = hooks.empty.fire;
                hooks.empty.fire = function () {
                    if (!hooks.unqueued) {
                        oldfire();
                    }
                };
            }
            hooks.unqueued++;
            anim.always(function () {
                anim.always(function () {
                    hooks.unqueued--;
                    if (!jQuery.queue(elem, 'fx').length) {
                        hooks.empty.fire();
                    }
                });
            });
        }
        if (elem.nodeType === 1 && ('height' in props || 'width' in props)) {
            opts.overflow = [
                style.overflow,
                style.overflowX,
                style.overflowY
            ];
            display = jQuery.css(elem, 'display');
            checkDisplay = display === 'none' ? jQuery._data(elem, 'olddisplay') || defaultDisplay(elem.nodeName) : display;
            if (checkDisplay === 'inline' && jQuery.css(elem, 'float') === 'none') {
                if (!support.inlineBlockNeedsLayout || defaultDisplay(elem.nodeName) === 'inline') {
                    style.display = 'inline-block';
                } else {
                    style.zoom = 1;
                }
            }
        }
        if (opts.overflow) {
            style.overflow = 'hidden';
            if (!support.shrinkWrapBlocks()) {
                anim.always(function () {
                    style.overflow = opts.overflow[0];
                    style.overflowX = opts.overflow[1];
                    style.overflowY = opts.overflow[2];
                });
            }
        }
        for (prop in props) {
            value = props[prop];
            if (rfxtypes.exec(value)) {
                delete props[prop];
                toggle = toggle || value === 'toggle';
                if (value === (hidden ? 'hide' : 'show')) {
                    if (value === 'show' && dataShow && dataShow[prop] !== undefined) {
                        hidden = true;
                    } else {
                        continue;
                    }
                }
                orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
            } else {
                display = undefined;
            }
        }
        if (!jQuery.isEmptyObject(orig)) {
            if (dataShow) {
                if ('hidden' in dataShow) {
                    hidden = dataShow.hidden;
                }
            } else {
                dataShow = jQuery._data(elem, 'fxshow', {});
            }
            if (toggle) {
                dataShow.hidden = !hidden;
            }
            if (hidden) {
                jQuery(elem).show();
            } else {
                anim.done(function () {
                    jQuery(elem).hide();
                });
            }
            anim.done(function () {
                var prop;
                jQuery._removeData(elem, 'fxshow');
                for (prop in orig) {
                    jQuery.style(elem, prop, orig[prop]);
                }
            });
            for (prop in orig) {
                tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
                if (!(prop in dataShow)) {
                    dataShow[prop] = tween.start;
                    if (hidden) {
                        tween.end = tween.start;
                        tween.start = prop === 'width' || prop === 'height' ? 1 : 0;
                    }
                }
            }
        } else if ((display === 'none' ? defaultDisplay(elem.nodeName) : display) === 'inline') {
            style.display = display;
        }
    }
    function propFilter(props, specialEasing) {
        var index, name, easing, value, hooks;
        for (index in props) {
            name = jQuery.camelCase(index);
            easing = specialEasing[name];
            value = props[index];
            if (jQuery.isArray(value)) {
                easing = value[1];
                value = props[index] = value[0];
            }
            if (index !== name) {
                props[name] = value;
                delete props[index];
            }
            hooks = jQuery.cssHooks[name];
            if (hooks && 'expand' in hooks) {
                value = hooks.expand(value);
                delete props[name];
                for (index in value) {
                    if (!(index in props)) {
                        props[index] = value[index];
                        specialEasing[index] = easing;
                    }
                }
            } else {
                specialEasing[name] = easing;
            }
        }
    }
    function Animation(elem, properties, options) {
        var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery.Deferred().always(function () {
                delete tick.elem;
            }), tick = function () {
                if (stopped) {
                    return false;
                }
                var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length;
                for (; index < length; index++) {
                    animation.tweens[index].run(percent);
                }
                deferred.notifyWith(elem, [
                    animation,
                    percent,
                    remaining
                ]);
                if (percent < 1 && length) {
                    return remaining;
                } else {
                    deferred.resolveWith(elem, [animation]);
                    return false;
                }
            }, animation = deferred.promise({
                elem: elem,
                props: jQuery.extend({}, properties),
                opts: jQuery.extend(true, {
                    specialEasing: {},
                    easing: jQuery.easing._default
                }, options),
                originalProperties: properties,
                originalOptions: options,
                startTime: fxNow || createFxNow(),
                duration: options.duration,
                tweens: [],
                createTween: function (prop, end) {
                    var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
                    animation.tweens.push(tween);
                    return tween;
                },
                stop: function (gotoEnd) {
                    var index = 0, length = gotoEnd ? animation.tweens.length : 0;
                    if (stopped) {
                        return this;
                    }
                    stopped = true;
                    for (; index < length; index++) {
                        animation.tweens[index].run(1);
                    }
                    if (gotoEnd) {
                        deferred.notifyWith(elem, [
                            animation,
                            1,
                            0
                        ]);
                        deferred.resolveWith(elem, [
                            animation,
                            gotoEnd
                        ]);
                    } else {
                        deferred.rejectWith(elem, [
                            animation,
                            gotoEnd
                        ]);
                    }
                    return this;
                }
            }), props = animation.props;
        propFilter(props, animation.opts.specialEasing);
        for (; index < length; index++) {
            result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
            if (result) {
                if (jQuery.isFunction(result.stop)) {
                    jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result);
                }
                return result;
            }
        }
        jQuery.map(props, createTween, animation);
        if (jQuery.isFunction(animation.opts.start)) {
            animation.opts.start.call(elem, animation);
        }
        jQuery.fx.timer(jQuery.extend(tick, {
            elem: elem,
            anim: animation,
            queue: animation.opts.queue
        }));
        return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
    }
    jQuery.Animation = jQuery.extend(Animation, {
        tweeners: {
            '*': [function (prop, value) {
                    var tween = this.createTween(prop, value);
                    adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
                    return tween;
                }]
        },
        tweener: function (props, callback) {
            if (jQuery.isFunction(props)) {
                callback = props;
                props = ['*'];
            } else {
                props = props.match(rnotwhite);
            }
            var prop, index = 0, length = props.length;
            for (; index < length; index++) {
                prop = props[index];
                Animation.tweeners[prop] = Animation.tweeners[prop] || [];
                Animation.tweeners[prop].unshift(callback);
            }
        },
        prefilters: [defaultPrefilter],
        prefilter: function (callback, prepend) {
            if (prepend) {
                Animation.prefilters.unshift(callback);
            } else {
                Animation.prefilters.push(callback);
            }
        }
    });
    jQuery.speed = function (speed, easing, fn) {
        var opt = speed && typeof speed === 'object' ? jQuery.extend({}, speed) : {
            complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
            duration: speed,
            easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
        };
        opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === 'number' ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;
        if (opt.queue == null || opt.queue === true) {
            opt.queue = 'fx';
        }
        opt.old = opt.complete;
        opt.complete = function () {
            if (jQuery.isFunction(opt.old)) {
                opt.old.call(this);
            }
            if (opt.queue) {
                jQuery.dequeue(this, opt.queue);
            }
        };
        return opt;
    };
    jQuery.fn.extend({
        fadeTo: function (speed, to, easing, callback) {
            return this.filter(isHidden).css('opacity', 0).show().end().animate({ opacity: to }, speed, easing, callback);
        },
        animate: function (prop, speed, easing, callback) {
            var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function () {
                    var anim = Animation(this, jQuery.extend({}, prop), optall);
                    if (empty || jQuery._data(this, 'finish')) {
                        anim.stop(true);
                    }
                };
            doAnimation.finish = doAnimation;
            return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
        },
        stop: function (type, clearQueue, gotoEnd) {
            var stopQueue = function (hooks) {
                var stop = hooks.stop;
                delete hooks.stop;
                stop(gotoEnd);
            };
            if (typeof type !== 'string') {
                gotoEnd = clearQueue;
                clearQueue = type;
                type = undefined;
            }
            if (clearQueue && type !== false) {
                this.queue(type || 'fx', []);
            }
            return this.each(function () {
                var dequeue = true, index = type != null && type + 'queueHooks', timers = jQuery.timers, data = jQuery._data(this);
                if (index) {
                    if (data[index] && data[index].stop) {
                        stopQueue(data[index]);
                    }
                } else {
                    for (index in data) {
                        if (data[index] && data[index].stop && rrun.test(index)) {
                            stopQueue(data[index]);
                        }
                    }
                }
                for (index = timers.length; index--;) {
                    if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
                        timers[index].anim.stop(gotoEnd);
                        dequeue = false;
                        timers.splice(index, 1);
                    }
                }
                if (dequeue || !gotoEnd) {
                    jQuery.dequeue(this, type);
                }
            });
        },
        finish: function (type) {
            if (type !== false) {
                type = type || 'fx';
            }
            return this.each(function () {
                var index, data = jQuery._data(this), queue = data[type + 'queue'], hooks = data[type + 'queueHooks'], timers = jQuery.timers, length = queue ? queue.length : 0;
                data.finish = true;
                jQuery.queue(this, type, []);
                if (hooks && hooks.stop) {
                    hooks.stop.call(this, true);
                }
                for (index = timers.length; index--;) {
                    if (timers[index].elem === this && timers[index].queue === type) {
                        timers[index].anim.stop(true);
                        timers.splice(index, 1);
                    }
                }
                for (index = 0; index < length; index++) {
                    if (queue[index] && queue[index].finish) {
                        queue[index].finish.call(this);
                    }
                }
                delete data.finish;
            });
        }
    });
    jQuery.each([
        'toggle',
        'show',
        'hide'
    ], function (i, name) {
        var cssFn = jQuery.fn[name];
        jQuery.fn[name] = function (speed, easing, callback) {
            return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
        };
    });
    jQuery.each({
        slideDown: genFx('show'),
        slideUp: genFx('hide'),
        slideToggle: genFx('toggle'),
        fadeIn: { opacity: 'show' },
        fadeOut: { opacity: 'hide' },
        fadeToggle: { opacity: 'toggle' }
    }, function (name, props) {
        jQuery.fn[name] = function (speed, easing, callback) {
            return this.animate(props, speed, easing, callback);
        };
    });
    jQuery.timers = [];
    jQuery.fx.tick = function () {
        var timer, timers = jQuery.timers, i = 0;
        fxNow = jQuery.now();
        for (; i < timers.length; i++) {
            timer = timers[i];
            if (!timer() && timers[i] === timer) {
                timers.splice(i--, 1);
            }
        }
        if (!timers.length) {
            jQuery.fx.stop();
        }
        fxNow = undefined;
    };
    jQuery.fx.timer = function (timer) {
        jQuery.timers.push(timer);
        if (timer()) {
            jQuery.fx.start();
        } else {
            jQuery.timers.pop();
        }
    };
    jQuery.fx.interval = 13;
    jQuery.fx.start = function () {
        if (!timerId) {
            timerId = window.setInterval(jQuery.fx.tick, jQuery.fx.interval);
        }
    };
    jQuery.fx.stop = function () {
        window.clearInterval(timerId);
        timerId = null;
    };
    jQuery.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    };
    jQuery.fn.delay = function (time, type) {
        time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
        type = type || 'fx';
        return this.queue(type, function (next, hooks) {
            var timeout = window.setTimeout(next, time);
            hooks.stop = function () {
                window.clearTimeout(timeout);
            };
        });
    };
    (function () {
        var a, input = document.createElement('input'), div = document.createElement('div'), select = document.createElement('select'), opt = select.appendChild(document.createElement('option'));
        div = document.createElement('div');
        div.setAttribute('className', 't');
        div.innerHTML = '  <link/><table></table><a href=\'/a\'>a</a><input type=\'checkbox\'/>';
        a = div.getElementsByTagName('a')[0];
        input.setAttribute('type', 'checkbox');
        div.appendChild(input);
        a = div.getElementsByTagName('a')[0];
        a.style.cssText = 'top:1px';
        support.getSetAttribute = div.className !== 't';
        support.style = /top/.test(a.getAttribute('style'));
        support.hrefNormalized = a.getAttribute('href') === '/a';
        support.checkOn = !!input.value;
        support.optSelected = opt.selected;
        support.enctype = !!document.createElement('form').enctype;
        select.disabled = true;
        support.optDisabled = !opt.disabled;
        input = document.createElement('input');
        input.setAttribute('value', '');
        support.input = input.getAttribute('value') === '';
        input.value = 't';
        input.setAttribute('type', 'radio');
        support.radioValue = input.value === 't';
    }());
    var rreturn = /\r/g, rspaces = /[\x20\t\r\n\f]+/g;
    jQuery.fn.extend({
        val: function (value) {
            var hooks, ret, isFunction, elem = this[0];
            if (!arguments.length) {
                if (elem) {
                    hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
                    if (hooks && 'get' in hooks && (ret = hooks.get(elem, 'value')) !== undefined) {
                        return ret;
                    }
                    ret = elem.value;
                    return typeof ret === 'string' ? ret.replace(rreturn, '') : ret == null ? '' : ret;
                }
                return;
            }
            isFunction = jQuery.isFunction(value);
            return this.each(function (i) {
                var val;
                if (this.nodeType !== 1) {
                    return;
                }
                if (isFunction) {
                    val = value.call(this, i, jQuery(this).val());
                } else {
                    val = value;
                }
                if (val == null) {
                    val = '';
                } else if (typeof val === 'number') {
                    val += '';
                } else if (jQuery.isArray(val)) {
                    val = jQuery.map(val, function (value) {
                        return value == null ? '' : value + '';
                    });
                }
                hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
                if (!hooks || !('set' in hooks) || hooks.set(this, val, 'value') === undefined) {
                    this.value = val;
                }
            });
        }
    });
    jQuery.extend({
        valHooks: {
            option: {
                get: function (elem) {
                    var val = jQuery.find.attr(elem, 'value');
                    return val != null ? val : jQuery.trim(jQuery.text(elem)).replace(rspaces, ' ');
                }
            },
            select: {
                get: function (elem) {
                    var value, option, options = elem.options, index = elem.selectedIndex, one = elem.type === 'select-one' || index < 0, values = one ? null : [], max = one ? index + 1 : options.length, i = index < 0 ? max : one ? index : 0;
                    for (; i < max; i++) {
                        option = options[i];
                        if ((option.selected || i === index) && (support.optDisabled ? !option.disabled : option.getAttribute('disabled') === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, 'optgroup'))) {
                            value = jQuery(option).val();
                            if (one) {
                                return value;
                            }
                            values.push(value);
                        }
                    }
                    return values;
                },
                set: function (elem, value) {
                    var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length;
                    while (i--) {
                        option = options[i];
                        if (jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {
                            try {
                                option.selected = optionSet = true;
                            } catch (_) {
                                option.scrollHeight;
                            }
                        } else {
                            option.selected = false;
                        }
                    }
                    if (!optionSet) {
                        elem.selectedIndex = -1;
                    }
                    return options;
                }
            }
        }
    });
    jQuery.each([
        'radio',
        'checkbox'
    ], function () {
        jQuery.valHooks[this] = {
            set: function (elem, value) {
                if (jQuery.isArray(value)) {
                    return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;
                }
            }
        };
        if (!support.checkOn) {
            jQuery.valHooks[this].get = function (elem) {
                return elem.getAttribute('value') === null ? 'on' : elem.value;
            };
        }
    });
    var nodeHook, boolHook, attrHandle = jQuery.expr.attrHandle, ruseDefault = /^(?:checked|selected)$/i, getSetAttribute = support.getSetAttribute, getSetInput = support.input;
    jQuery.fn.extend({
        attr: function (name, value) {
            return access(this, jQuery.attr, name, value, arguments.length > 1);
        },
        removeAttr: function (name) {
            return this.each(function () {
                jQuery.removeAttr(this, name);
            });
        }
    });
    jQuery.extend({
        attr: function (elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            if (nType === 3 || nType === 8 || nType === 2) {
                return;
            }
            if (typeof elem.getAttribute === 'undefined') {
                return jQuery.prop(elem, name, value);
            }
            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
                name = name.toLowerCase();
                hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : nodeHook);
            }
            if (value !== undefined) {
                if (value === null) {
                    jQuery.removeAttr(elem, name);
                    return;
                }
                if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
                    return ret;
                }
                elem.setAttribute(name, value + '');
                return value;
            }
            if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {
                return ret;
            }
            ret = jQuery.find.attr(elem, name);
            return ret == null ? undefined : ret;
        },
        attrHooks: {
            type: {
                set: function (elem, value) {
                    if (!support.radioValue && value === 'radio' && jQuery.nodeName(elem, 'input')) {
                        var val = elem.value;
                        elem.setAttribute('type', value);
                        if (val) {
                            elem.value = val;
                        }
                        return value;
                    }
                }
            }
        },
        removeAttr: function (elem, value) {
            var name, propName, i = 0, attrNames = value && value.match(rnotwhite);
            if (attrNames && elem.nodeType === 1) {
                while (name = attrNames[i++]) {
                    propName = jQuery.propFix[name] || name;
                    if (jQuery.expr.match.bool.test(name)) {
                        if (getSetInput && getSetAttribute || !ruseDefault.test(name)) {
                            elem[propName] = false;
                        } else {
                            elem[jQuery.camelCase('default-' + name)] = elem[propName] = false;
                        }
                    } else {
                        jQuery.attr(elem, name, '');
                    }
                    elem.removeAttribute(getSetAttribute ? name : propName);
                }
            }
        }
    });
    boolHook = {
        set: function (elem, value, name) {
            if (value === false) {
                jQuery.removeAttr(elem, name);
            } else if (getSetInput && getSetAttribute || !ruseDefault.test(name)) {
                elem.setAttribute(!getSetAttribute && jQuery.propFix[name] || name, name);
            } else {
                elem[jQuery.camelCase('default-' + name)] = elem[name] = true;
            }
            return name;
        }
    };
    jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (i, name) {
        var getter = attrHandle[name] || jQuery.find.attr;
        if (getSetInput && getSetAttribute || !ruseDefault.test(name)) {
            attrHandle[name] = function (elem, name, isXML) {
                var ret, handle;
                if (!isXML) {
                    handle = attrHandle[name];
                    attrHandle[name] = ret;
                    ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;
                    attrHandle[name] = handle;
                }
                return ret;
            };
        } else {
            attrHandle[name] = function (elem, name, isXML) {
                if (!isXML) {
                    return elem[jQuery.camelCase('default-' + name)] ? name.toLowerCase() : null;
                }
            };
        }
    });
    if (!getSetInput || !getSetAttribute) {
        jQuery.attrHooks.value = {
            set: function (elem, value, name) {
                if (jQuery.nodeName(elem, 'input')) {
                    elem.defaultValue = value;
                } else {
                    return nodeHook && nodeHook.set(elem, value, name);
                }
            }
        };
    }
    if (!getSetAttribute) {
        nodeHook = {
            set: function (elem, value, name) {
                var ret = elem.getAttributeNode(name);
                if (!ret) {
                    elem.setAttributeNode(ret = elem.ownerDocument.createAttribute(name));
                }
                ret.value = value += '';
                if (name === 'value' || value === elem.getAttribute(name)) {
                    return value;
                }
            }
        };
        attrHandle.id = attrHandle.name = attrHandle.coords = function (elem, name, isXML) {
            var ret;
            if (!isXML) {
                return (ret = elem.getAttributeNode(name)) && ret.value !== '' ? ret.value : null;
            }
        };
        jQuery.valHooks.button = {
            get: function (elem, name) {
                var ret = elem.getAttributeNode(name);
                if (ret && ret.specified) {
                    return ret.value;
                }
            },
            set: nodeHook.set
        };
        jQuery.attrHooks.contenteditable = {
            set: function (elem, value, name) {
                nodeHook.set(elem, value === '' ? false : value, name);
            }
        };
        jQuery.each([
            'width',
            'height'
        ], function (i, name) {
            jQuery.attrHooks[name] = {
                set: function (elem, value) {
                    if (value === '') {
                        elem.setAttribute(name, 'auto');
                        return value;
                    }
                }
            };
        });
    }
    if (!support.style) {
        jQuery.attrHooks.style = {
            get: function (elem) {
                return elem.style.cssText || undefined;
            },
            set: function (elem, value) {
                return elem.style.cssText = value + '';
            }
        };
    }
    var rfocusable = /^(?:input|select|textarea|button|object)$/i, rclickable = /^(?:a|area)$/i;
    jQuery.fn.extend({
        prop: function (name, value) {
            return access(this, jQuery.prop, name, value, arguments.length > 1);
        },
        removeProp: function (name) {
            name = jQuery.propFix[name] || name;
            return this.each(function () {
                try {
                    this[name] = undefined;
                    delete this[name];
                } catch (e) {
                }
            });
        }
    });
    jQuery.extend({
        prop: function (elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            if (nType === 3 || nType === 8 || nType === 2) {
                return;
            }
            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
                name = jQuery.propFix[name] || name;
                hooks = jQuery.propHooks[name];
            }
            if (value !== undefined) {
                if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
                    return ret;
                }
                return elem[name] = value;
            }
            if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {
                return ret;
            }
            return elem[name];
        },
        propHooks: {
            tabIndex: {
                get: function (elem) {
                    var tabindex = jQuery.find.attr(elem, 'tabindex');
                    return tabindex ? parseInt(tabindex, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : -1;
                }
            }
        },
        propFix: {
            'for': 'htmlFor',
            'class': 'className'
        }
    });
    if (!support.hrefNormalized) {
        jQuery.each([
            'href',
            'src'
        ], function (i, name) {
            jQuery.propHooks[name] = {
                get: function (elem) {
                    return elem.getAttribute(name, 4);
                }
            };
        });
    }
    if (!support.optSelected) {
        jQuery.propHooks.selected = {
            get: function (elem) {
                var parent = elem.parentNode;
                if (parent) {
                    parent.selectedIndex;
                    if (parent.parentNode) {
                        parent.parentNode.selectedIndex;
                    }
                }
                return null;
            },
            set: function (elem) {
                var parent = elem.parentNode;
                if (parent) {
                    parent.selectedIndex;
                    if (parent.parentNode) {
                        parent.parentNode.selectedIndex;
                    }
                }
            }
        };
    }
    jQuery.each([
        'tabIndex',
        'readOnly',
        'maxLength',
        'cellSpacing',
        'cellPadding',
        'rowSpan',
        'colSpan',
        'useMap',
        'frameBorder',
        'contentEditable'
    ], function () {
        jQuery.propFix[this.toLowerCase()] = this;
    });
    if (!support.enctype) {
        jQuery.propFix.enctype = 'encoding';
    }
    var rclass = /[\t\r\n\f]/g;
    function getClass(elem) {
        return jQuery.attr(elem, 'class') || '';
    }
    jQuery.fn.extend({
        addClass: function (value) {
            var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;
            if (jQuery.isFunction(value)) {
                return this.each(function (j) {
                    jQuery(this).addClass(value.call(this, j, getClass(this)));
                });
            }
            if (typeof value === 'string' && value) {
                classes = value.match(rnotwhite) || [];
                while (elem = this[i++]) {
                    curValue = getClass(elem);
                    cur = elem.nodeType === 1 && (' ' + curValue + ' ').replace(rclass, ' ');
                    if (cur) {
                        j = 0;
                        while (clazz = classes[j++]) {
                            if (cur.indexOf(' ' + clazz + ' ') < 0) {
                                cur += clazz + ' ';
                            }
                        }
                        finalValue = jQuery.trim(cur);
                        if (curValue !== finalValue) {
                            jQuery.attr(elem, 'class', finalValue);
                        }
                    }
                }
            }
            return this;
        },
        removeClass: function (value) {
            var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;
            if (jQuery.isFunction(value)) {
                return this.each(function (j) {
                    jQuery(this).removeClass(value.call(this, j, getClass(this)));
                });
            }
            if (!arguments.length) {
                return this.attr('class', '');
            }
            if (typeof value === 'string' && value) {
                classes = value.match(rnotwhite) || [];
                while (elem = this[i++]) {
                    curValue = getClass(elem);
                    cur = elem.nodeType === 1 && (' ' + curValue + ' ').replace(rclass, ' ');
                    if (cur) {
                        j = 0;
                        while (clazz = classes[j++]) {
                            while (cur.indexOf(' ' + clazz + ' ') > -1) {
                                cur = cur.replace(' ' + clazz + ' ', ' ');
                            }
                        }
                        finalValue = jQuery.trim(cur);
                        if (curValue !== finalValue) {
                            jQuery.attr(elem, 'class', finalValue);
                        }
                    }
                }
            }
            return this;
        },
        toggleClass: function (value, stateVal) {
            var type = typeof value;
            if (typeof stateVal === 'boolean' && type === 'string') {
                return stateVal ? this.addClass(value) : this.removeClass(value);
            }
            if (jQuery.isFunction(value)) {
                return this.each(function (i) {
                    jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
                });
            }
            return this.each(function () {
                var className, i, self, classNames;
                if (type === 'string') {
                    i = 0;
                    self = jQuery(this);
                    classNames = value.match(rnotwhite) || [];
                    while (className = classNames[i++]) {
                        if (self.hasClass(className)) {
                            self.removeClass(className);
                        } else {
                            self.addClass(className);
                        }
                    }
                } else if (value === undefined || type === 'boolean') {
                    className = getClass(this);
                    if (className) {
                        jQuery._data(this, '__className__', className);
                    }
                    jQuery.attr(this, 'class', className || value === false ? '' : jQuery._data(this, '__className__') || '');
                }
            });
        },
        hasClass: function (selector) {
            var className, elem, i = 0;
            className = ' ' + selector + ' ';
            while (elem = this[i++]) {
                if (elem.nodeType === 1 && (' ' + getClass(elem) + ' ').replace(rclass, ' ').indexOf(className) > -1) {
                    return true;
                }
            }
            return false;
        }
    });
    jQuery.each(('blur focus focusin focusout load resize scroll unload click dblclick ' + 'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' + 'change select submit keydown keypress keyup error contextmenu').split(' '), function (i, name) {
        jQuery.fn[name] = function (data, fn) {
            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
        };
    });
    jQuery.fn.extend({
        hover: function (fnOver, fnOut) {
            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
        }
    });
    var location = window.location;
    var nonce = jQuery.now();
    var rquery = /\?/;
    var rvalidtokens = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
    jQuery.parseJSON = function (data) {
        if (window.JSON && window.JSON.parse) {
            return window.JSON.parse(data + '');
        }
        var requireNonComma, depth = null, str = jQuery.trim(data + '');
        return str && !jQuery.trim(str.replace(rvalidtokens, function (token, comma, open, close) {
            if (requireNonComma && comma) {
                depth = 0;
            }
            if (depth === 0) {
                return token;
            }
            requireNonComma = open || comma;
            depth += !close - !open;
            return '';
        })) ? Function('return ' + str)() : jQuery.error('Invalid JSON: ' + data);
    };
    jQuery.parseXML = function (data) {
        var xml, tmp;
        if (!data || typeof data !== 'string') {
            return null;
        }
        try {
            if (window.DOMParser) {
                tmp = new window.DOMParser();
                xml = tmp.parseFromString(data, 'text/xml');
            } else {
                xml = new window.ActiveXObject('Microsoft.XMLDOM');
                xml.async = 'false';
                xml.loadXML(data);
            }
        } catch (e) {
            xml = undefined;
        }
        if (!xml || !xml.documentElement || xml.getElementsByTagName('parsererror').length) {
            jQuery.error('Invalid XML: ' + data);
        }
        return xml;
    };
    var rhash = /#.*$/, rts = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm, rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\/\//, rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/, prefilters = {}, transports = {}, allTypes = '*/'.concat('*'), ajaxLocation = location.href, ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];
    function addToPrefiltersOrTransports(structure) {
        return function (dataTypeExpression, func) {
            if (typeof dataTypeExpression !== 'string') {
                func = dataTypeExpression;
                dataTypeExpression = '*';
            }
            var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];
            if (jQuery.isFunction(func)) {
                while (dataType = dataTypes[i++]) {
                    if (dataType.charAt(0) === '+') {
                        dataType = dataType.slice(1) || '*';
                        (structure[dataType] = structure[dataType] || []).unshift(func);
                    } else {
                        (structure[dataType] = structure[dataType] || []).push(func);
                    }
                }
            }
        };
    }
    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
        var inspected = {}, seekingTransport = structure === transports;
        function inspect(dataType) {
            var selected;
            inspected[dataType] = true;
            jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
                if (typeof dataTypeOrTransport === 'string' && !seekingTransport && !inspected[dataTypeOrTransport]) {
                    options.dataTypes.unshift(dataTypeOrTransport);
                    inspect(dataTypeOrTransport);
                    return false;
                } else if (seekingTransport) {
                    return !(selected = dataTypeOrTransport);
                }
            });
            return selected;
        }
        return inspect(options.dataTypes[0]) || !inspected['*'] && inspect('*');
    }
    function ajaxExtend(target, src) {
        var deep, key, flatOptions = jQuery.ajaxSettings.flatOptions || {};
        for (key in src) {
            if (src[key] !== undefined) {
                (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
            }
        }
        if (deep) {
            jQuery.extend(true, target, deep);
        }
        return target;
    }
    function ajaxHandleResponses(s, jqXHR, responses) {
        var firstDataType, ct, finalDataType, type, contents = s.contents, dataTypes = s.dataTypes;
        while (dataTypes[0] === '*') {
            dataTypes.shift();
            if (ct === undefined) {
                ct = s.mimeType || jqXHR.getResponseHeader('Content-Type');
            }
        }
        if (ct) {
            for (type in contents) {
                if (contents[type] && contents[type].test(ct)) {
                    dataTypes.unshift(type);
                    break;
                }
            }
        }
        if (dataTypes[0] in responses) {
            finalDataType = dataTypes[0];
        } else {
            for (type in responses) {
                if (!dataTypes[0] || s.converters[type + ' ' + dataTypes[0]]) {
                    finalDataType = type;
                    break;
                }
                if (!firstDataType) {
                    firstDataType = type;
                }
            }
            finalDataType = finalDataType || firstDataType;
        }
        if (finalDataType) {
            if (finalDataType !== dataTypes[0]) {
                dataTypes.unshift(finalDataType);
            }
            return responses[finalDataType];
        }
    }
    function ajaxConvert(s, response, jqXHR, isSuccess) {
        var conv2, current, conv, tmp, prev, converters = {}, dataTypes = s.dataTypes.slice();
        if (dataTypes[1]) {
            for (conv in s.converters) {
                converters[conv.toLowerCase()] = s.converters[conv];
            }
        }
        current = dataTypes.shift();
        while (current) {
            if (s.responseFields[current]) {
                jqXHR[s.responseFields[current]] = response;
            }
            if (!prev && isSuccess && s.dataFilter) {
                response = s.dataFilter(response, s.dataType);
            }
            prev = current;
            current = dataTypes.shift();
            if (current) {
                if (current === '*') {
                    current = prev;
                } else if (prev !== '*' && prev !== current) {
                    conv = converters[prev + ' ' + current] || converters['* ' + current];
                    if (!conv) {
                        for (conv2 in converters) {
                            tmp = conv2.split(' ');
                            if (tmp[1] === current) {
                                conv = converters[prev + ' ' + tmp[0]] || converters['* ' + tmp[0]];
                                if (conv) {
                                    if (conv === true) {
                                        conv = converters[conv2];
                                    } else if (converters[conv2] !== true) {
                                        current = tmp[0];
                                        dataTypes.unshift(tmp[1]);
                                    }
                                    break;
                                }
                            }
                        }
                    }
                    if (conv !== true) {
                        if (conv && s['throws']) {
                            response = conv(response);
                        } else {
                            try {
                                response = conv(response);
                            } catch (e) {
                                return {
                                    state: 'parsererror',
                                    error: conv ? e : 'No conversion from ' + prev + ' to ' + current
                                };
                            }
                        }
                    }
                }
            }
        }
        return {
            state: 'success',
            data: response
        };
    }
    jQuery.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: ajaxLocation,
            type: 'GET',
            isLocal: rlocalProtocol.test(ajaxLocParts[1]),
            global: true,
            processData: true,
            async: true,
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            accepts: {
                '*': allTypes,
                text: 'text/plain',
                html: 'text/html',
                xml: 'application/xml, text/xml',
                json: 'application/json, text/javascript'
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: 'responseXML',
                text: 'responseText',
                json: 'responseJSON'
            },
            converters: {
                '* text': String,
                'text html': true,
                'text json': jQuery.parseJSON,
                'text xml': jQuery.parseXML
            },
            flatOptions: {
                url: true,
                context: true
            }
        },
        ajaxSetup: function (target, settings) {
            return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
        },
        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
        ajaxTransport: addToPrefiltersOrTransports(transports),
        ajax: function (url, options) {
            if (typeof url === 'object') {
                options = url;
                url = undefined;
            }
            options = options || {};
            var parts, i, cacheURL, responseHeadersString, timeoutTimer, fireGlobals, transport, responseHeaders, s = jQuery.ajaxSetup({}, options), callbackContext = s.context || s, globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event, deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks('once memory'), statusCode = s.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, state = 0, strAbort = 'canceled', jqXHR = {
                    readyState: 0,
                    getResponseHeader: function (key) {
                        var match;
                        if (state === 2) {
                            if (!responseHeaders) {
                                responseHeaders = {};
                                while (match = rheaders.exec(responseHeadersString)) {
                                    responseHeaders[match[1].toLowerCase()] = match[2];
                                }
                            }
                            match = responseHeaders[key.toLowerCase()];
                        }
                        return match == null ? null : match;
                    },
                    getAllResponseHeaders: function () {
                        return state === 2 ? responseHeadersString : null;
                    },
                    setRequestHeader: function (name, value) {
                        var lname = name.toLowerCase();
                        if (!state) {
                            name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;
                            requestHeaders[name] = value;
                        }
                        return this;
                    },
                    overrideMimeType: function (type) {
                        if (!state) {
                            s.mimeType = type;
                        }
                        return this;
                    },
                    statusCode: function (map) {
                        var code;
                        if (map) {
                            if (state < 2) {
                                for (code in map) {
                                    statusCode[code] = [
                                        statusCode[code],
                                        map[code]
                                    ];
                                }
                            } else {
                                jqXHR.always(map[jqXHR.status]);
                            }
                        }
                        return this;
                    },
                    abort: function (statusText) {
                        var finalText = statusText || strAbort;
                        if (transport) {
                            transport.abort(finalText);
                        }
                        done(0, finalText);
                        return this;
                    }
                };
            deferred.promise(jqXHR).complete = completeDeferred.add;
            jqXHR.success = jqXHR.done;
            jqXHR.error = jqXHR.fail;
            s.url = ((url || s.url || ajaxLocation) + '').replace(rhash, '').replace(rprotocol, ajaxLocParts[1] + '//');
            s.type = options.method || options.type || s.method || s.type;
            s.dataTypes = jQuery.trim(s.dataType || '*').toLowerCase().match(rnotwhite) || [''];
            if (s.crossDomain == null) {
                parts = rurl.exec(s.url.toLowerCase());
                s.crossDomain = !!(parts && (parts[1] !== ajaxLocParts[1] || parts[2] !== ajaxLocParts[2] || (parts[3] || (parts[1] === 'http:' ? '80' : '443')) !== (ajaxLocParts[3] || (ajaxLocParts[1] === 'http:' ? '80' : '443'))));
            }
            if (s.data && s.processData && typeof s.data !== 'string') {
                s.data = jQuery.param(s.data, s.traditional);
            }
            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
            if (state === 2) {
                return jqXHR;
            }
            fireGlobals = jQuery.event && s.global;
            if (fireGlobals && jQuery.active++ === 0) {
                jQuery.event.trigger('ajaxStart');
            }
            s.type = s.type.toUpperCase();
            s.hasContent = !rnoContent.test(s.type);
            cacheURL = s.url;
            if (!s.hasContent) {
                if (s.data) {
                    cacheURL = s.url += (rquery.test(cacheURL) ? '&' : '?') + s.data;
                    delete s.data;
                }
                if (s.cache === false) {
                    s.url = rts.test(cacheURL) ? cacheURL.replace(rts, '$1_=' + nonce++) : cacheURL + (rquery.test(cacheURL) ? '&' : '?') + '_=' + nonce++;
                }
            }
            if (s.ifModified) {
                if (jQuery.lastModified[cacheURL]) {
                    jqXHR.setRequestHeader('If-Modified-Since', jQuery.lastModified[cacheURL]);
                }
                if (jQuery.etag[cacheURL]) {
                    jqXHR.setRequestHeader('If-None-Match', jQuery.etag[cacheURL]);
                }
            }
            if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
                jqXHR.setRequestHeader('Content-Type', s.contentType);
            }
            jqXHR.setRequestHeader('Accept', s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== '*' ? ', ' + allTypes + '; q=0.01' : '') : s.accepts['*']);
            for (i in s.headers) {
                jqXHR.setRequestHeader(i, s.headers[i]);
            }
            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {
                return jqXHR.abort();
            }
            strAbort = 'abort';
            for (i in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) {
                jqXHR[i](s[i]);
            }
            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
            if (!transport) {
                done(-1, 'No Transport');
            } else {
                jqXHR.readyState = 1;
                if (fireGlobals) {
                    globalEventContext.trigger('ajaxSend', [
                        jqXHR,
                        s
                    ]);
                }
                if (state === 2) {
                    return jqXHR;
                }
                if (s.async && s.timeout > 0) {
                    timeoutTimer = window.setTimeout(function () {
                        jqXHR.abort('timeout');
                    }, s.timeout);
                }
                try {
                    state = 1;
                    transport.send(requestHeaders, done);
                } catch (e) {
                    if (state < 2) {
                        done(-1, e);
                    } else {
                        throw e;
                    }
                }
            }
            function done(status, nativeStatusText, responses, headers) {
                var isSuccess, success, error, response, modified, statusText = nativeStatusText;
                if (state === 2) {
                    return;
                }
                state = 2;
                if (timeoutTimer) {
                    window.clearTimeout(timeoutTimer);
                }
                transport = undefined;
                responseHeadersString = headers || '';
                jqXHR.readyState = status > 0 ? 4 : 0;
                isSuccess = status >= 200 && status < 300 || status === 304;
                if (responses) {
                    response = ajaxHandleResponses(s, jqXHR, responses);
                }
                response = ajaxConvert(s, response, jqXHR, isSuccess);
                if (isSuccess) {
                    if (s.ifModified) {
                        modified = jqXHR.getResponseHeader('Last-Modified');
                        if (modified) {
                            jQuery.lastModified[cacheURL] = modified;
                        }
                        modified = jqXHR.getResponseHeader('etag');
                        if (modified) {
                            jQuery.etag[cacheURL] = modified;
                        }
                    }
                    if (status === 204 || s.type === 'HEAD') {
                        statusText = 'nocontent';
                    } else if (status === 304) {
                        statusText = 'notmodified';
                    } else {
                        statusText = response.state;
                        success = response.data;
                        error = response.error;
                        isSuccess = !error;
                    }
                } else {
                    error = statusText;
                    if (status || !statusText) {
                        statusText = 'error';
                        if (status < 0) {
                            status = 0;
                        }
                    }
                }
                jqXHR.status = status;
                jqXHR.statusText = (nativeStatusText || statusText) + '';
                if (isSuccess) {
                    deferred.resolveWith(callbackContext, [
                        success,
                        statusText,
                        jqXHR
                    ]);
                } else {
                    deferred.rejectWith(callbackContext, [
                        jqXHR,
                        statusText,
                        error
                    ]);
                }
                jqXHR.statusCode(statusCode);
                statusCode = undefined;
                if (fireGlobals) {
                    globalEventContext.trigger(isSuccess ? 'ajaxSuccess' : 'ajaxError', [
                        jqXHR,
                        s,
                        isSuccess ? success : error
                    ]);
                }
                completeDeferred.fireWith(callbackContext, [
                    jqXHR,
                    statusText
                ]);
                if (fireGlobals) {
                    globalEventContext.trigger('ajaxComplete', [
                        jqXHR,
                        s
                    ]);
                    if (!--jQuery.active) {
                        jQuery.event.trigger('ajaxStop');
                    }
                }
            }
            return jqXHR;
        },
        getJSON: function (url, data, callback) {
            return jQuery.get(url, data, callback, 'json');
        },
        getScript: function (url, callback) {
            return jQuery.get(url, undefined, callback, 'script');
        }
    });
    jQuery.each([
        'get',
        'post'
    ], function (i, method) {
        jQuery[method] = function (url, data, callback, type) {
            if (jQuery.isFunction(data)) {
                type = type || callback;
                callback = data;
                data = undefined;
            }
            return jQuery.ajax(jQuery.extend({
                url: url,
                type: method,
                dataType: type,
                data: data,
                success: callback
            }, jQuery.isPlainObject(url) && url));
        };
    });
    jQuery._evalUrl = function (url) {
        return jQuery.ajax({
            url: url,
            type: 'GET',
            dataType: 'script',
            cache: true,
            async: false,
            global: false,
            'throws': true
        });
    };
    jQuery.fn.extend({
        wrapAll: function (html) {
            if (jQuery.isFunction(html)) {
                return this.each(function (i) {
                    jQuery(this).wrapAll(html.call(this, i));
                });
            }
            if (this[0]) {
                var wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
                if (this[0].parentNode) {
                    wrap.insertBefore(this[0]);
                }
                wrap.map(function () {
                    var elem = this;
                    while (elem.firstChild && elem.firstChild.nodeType === 1) {
                        elem = elem.firstChild;
                    }
                    return elem;
                }).append(this);
            }
            return this;
        },
        wrapInner: function (html) {
            if (jQuery.isFunction(html)) {
                return this.each(function (i) {
                    jQuery(this).wrapInner(html.call(this, i));
                });
            }
            return this.each(function () {
                var self = jQuery(this), contents = self.contents();
                if (contents.length) {
                    contents.wrapAll(html);
                } else {
                    self.append(html);
                }
            });
        },
        wrap: function (html) {
            var isFunction = jQuery.isFunction(html);
            return this.each(function (i) {
                jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
            });
        },
        unwrap: function () {
            return this.parent().each(function () {
                if (!jQuery.nodeName(this, 'body')) {
                    jQuery(this).replaceWith(this.childNodes);
                }
            }).end();
        }
    });
    function getDisplay(elem) {
        return elem.style && elem.style.display || jQuery.css(elem, 'display');
    }
    function filterHidden(elem) {
        while (elem && elem.nodeType === 1) {
            if (getDisplay(elem) === 'none' || elem.type === 'hidden') {
                return true;
            }
            elem = elem.parentNode;
        }
        return false;
    }
    jQuery.expr.filters.hidden = function (elem) {
        return support.reliableHiddenOffsets() ? elem.offsetWidth <= 0 && elem.offsetHeight <= 0 && !elem.getClientRects().length : filterHidden(elem);
    };
    jQuery.expr.filters.visible = function (elem) {
        return !jQuery.expr.filters.hidden(elem);
    };
    var r20 = /%20/g, rbracket = /\[\]$/, rCRLF = /\r?\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
    function buildParams(prefix, obj, traditional, add) {
        var name;
        if (jQuery.isArray(obj)) {
            jQuery.each(obj, function (i, v) {
                if (traditional || rbracket.test(prefix)) {
                    add(prefix, v);
                } else {
                    buildParams(prefix + '[' + (typeof v === 'object' && v != null ? i : '') + ']', v, traditional, add);
                }
            });
        } else if (!traditional && jQuery.type(obj) === 'object') {
            for (name in obj) {
                buildParams(prefix + '[' + name + ']', obj[name], traditional, add);
            }
        } else {
            add(prefix, obj);
        }
    }
    jQuery.param = function (a, traditional) {
        var prefix, s = [], add = function (key, value) {
                value = jQuery.isFunction(value) ? value() : value == null ? '' : value;
                s[s.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value);
            };
        if (traditional === undefined) {
            traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
        }
        if (jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {
            jQuery.each(a, function () {
                add(this.name, this.value);
            });
        } else {
            for (prefix in a) {
                buildParams(prefix, a[prefix], traditional, add);
            }
        }
        return s.join('&').replace(r20, '+');
    };
    jQuery.fn.extend({
        serialize: function () {
            return jQuery.param(this.serializeArray());
        },
        serializeArray: function () {
            return this.map(function () {
                var elements = jQuery.prop(this, 'elements');
                return elements ? jQuery.makeArray(elements) : this;
            }).filter(function () {
                var type = this.type;
                return this.name && !jQuery(this).is(':disabled') && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
            }).map(function (i, elem) {
                var val = jQuery(this).val();
                return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function (val) {
                    return {
                        name: elem.name,
                        value: val.replace(rCRLF, '\r\n')
                    };
                }) : {
                    name: elem.name,
                    value: val.replace(rCRLF, '\r\n')
                };
            }).get();
        }
    });
    jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ? function () {
        if (this.isLocal) {
            return createActiveXHR();
        }
        if (document.documentMode > 8) {
            return createStandardXHR();
        }
        return /^(get|post|head|put|delete|options)$/i.test(this.type) && createStandardXHR() || createActiveXHR();
    } : createStandardXHR;
    var xhrId = 0, xhrCallbacks = {}, xhrSupported = jQuery.ajaxSettings.xhr();
    if (window.attachEvent) {
        window.attachEvent('onunload', function () {
            for (var key in xhrCallbacks) {
                xhrCallbacks[key](undefined, true);
            }
        });
    }
    support.cors = !!xhrSupported && 'withCredentials' in xhrSupported;
    xhrSupported = support.ajax = !!xhrSupported;
    if (xhrSupported) {
        jQuery.ajaxTransport(function (options) {
            if (!options.crossDomain || support.cors) {
                var callback;
                return {
                    send: function (headers, complete) {
                        var i, xhr = options.xhr(), id = ++xhrId;
                        xhr.open(options.type, options.url, options.async, options.username, options.password);
                        if (options.xhrFields) {
                            for (i in options.xhrFields) {
                                xhr[i] = options.xhrFields[i];
                            }
                        }
                        if (options.mimeType && xhr.overrideMimeType) {
                            xhr.overrideMimeType(options.mimeType);
                        }
                        if (!options.crossDomain && !headers['X-Requested-With']) {
                            headers['X-Requested-With'] = 'XMLHttpRequest';
                        }
                        for (i in headers) {
                            if (headers[i] !== undefined) {
                                xhr.setRequestHeader(i, headers[i] + '');
                            }
                        }
                        xhr.send(options.hasContent && options.data || null);
                        callback = function (_, isAbort) {
                            var status, statusText, responses;
                            if (callback && (isAbort || xhr.readyState === 4)) {
                                delete xhrCallbacks[id];
                                callback = undefined;
                                xhr.onreadystatechange = jQuery.noop;
                                if (isAbort) {
                                    if (xhr.readyState !== 4) {
                                        xhr.abort();
                                    }
                                } else {
                                    responses = {};
                                    status = xhr.status;
                                    if (typeof xhr.responseText === 'string') {
                                        responses.text = xhr.responseText;
                                    }
                                    try {
                                        statusText = xhr.statusText;
                                    } catch (e) {
                                        statusText = '';
                                    }
                                    if (!status && options.isLocal && !options.crossDomain) {
                                        status = responses.text ? 200 : 404;
                                    } else if (status === 1223) {
                                        status = 204;
                                    }
                                }
                            }
                            if (responses) {
                                complete(status, statusText, responses, xhr.getAllResponseHeaders());
                            }
                        };
                        if (!options.async) {
                            callback();
                        } else if (xhr.readyState === 4) {
                            window.setTimeout(callback);
                        } else {
                            xhr.onreadystatechange = xhrCallbacks[id] = callback;
                        }
                    },
                    abort: function () {
                        if (callback) {
                            callback(undefined, true);
                        }
                    }
                };
            }
        });
    }
    function createStandardXHR() {
        try {
            return new window.XMLHttpRequest();
        } catch (e) {
        }
    }
    function createActiveXHR() {
        try {
            return new window.ActiveXObject('Microsoft.XMLHTTP');
        } catch (e) {
        }
    }
    jQuery.ajaxSetup({
        accepts: { script: 'text/javascript, application/javascript, ' + 'application/ecmascript, application/x-ecmascript' },
        contents: { script: /\b(?:java|ecma)script\b/ },
        converters: {
            'text script': function (text) {
                jQuery.globalEval(text);
                return text;
            }
        }
    });
    jQuery.ajaxPrefilter('script', function (s) {
        if (s.cache === undefined) {
            s.cache = false;
        }
        if (s.crossDomain) {
            s.type = 'GET';
            s.global = false;
        }
    });
    jQuery.ajaxTransport('script', function (s) {
        if (s.crossDomain) {
            var script, head = document.head || jQuery('head')[0] || document.documentElement;
            return {
                send: function (_, callback) {
                    script = document.createElement('script');
                    script.async = true;
                    if (s.scriptCharset) {
                        script.charset = s.scriptCharset;
                    }
                    script.src = s.url;
                    script.onload = script.onreadystatechange = function (_, isAbort) {
                        if (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) {
                            script.onload = script.onreadystatechange = null;
                            if (script.parentNode) {
                                script.parentNode.removeChild(script);
                            }
                            script = null;
                            if (!isAbort) {
                                callback(200, 'success');
                            }
                        }
                    };
                    head.insertBefore(script, head.firstChild);
                },
                abort: function () {
                    if (script) {
                        script.onload(undefined, true);
                    }
                }
            };
        }
    });
    var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
    jQuery.ajaxSetup({
        jsonp: 'callback',
        jsonpCallback: function () {
            var callback = oldCallbacks.pop() || jQuery.expando + '_' + nonce++;
            this[callback] = true;
            return callback;
        }
    });
    jQuery.ajaxPrefilter('json jsonp', function (s, originalSettings, jqXHR) {
        var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? 'url' : typeof s.data === 'string' && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0 && rjsonp.test(s.data) && 'data');
        if (jsonProp || s.dataTypes[0] === 'jsonp') {
            callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
            if (jsonProp) {
                s[jsonProp] = s[jsonProp].replace(rjsonp, '$1' + callbackName);
            } else if (s.jsonp !== false) {
                s.url += (rquery.test(s.url) ? '&' : '?') + s.jsonp + '=' + callbackName;
            }
            s.converters['script json'] = function () {
                if (!responseContainer) {
                    jQuery.error(callbackName + ' was not called');
                }
                return responseContainer[0];
            };
            s.dataTypes[0] = 'json';
            overwritten = window[callbackName];
            window[callbackName] = function () {
                responseContainer = arguments;
            };
            jqXHR.always(function () {
                if (overwritten === undefined) {
                    jQuery(window).removeProp(callbackName);
                } else {
                    window[callbackName] = overwritten;
                }
                if (s[callbackName]) {
                    s.jsonpCallback = originalSettings.jsonpCallback;
                    oldCallbacks.push(callbackName);
                }
                if (responseContainer && jQuery.isFunction(overwritten)) {
                    overwritten(responseContainer[0]);
                }
                responseContainer = overwritten = undefined;
            });
            return 'script';
        }
    });
    jQuery.parseHTML = function (data, context, keepScripts) {
        if (!data || typeof data !== 'string') {
            return null;
        }
        if (typeof context === 'boolean') {
            keepScripts = context;
            context = false;
        }
        context = context || document;
        var parsed = rsingleTag.exec(data), scripts = !keepScripts && [];
        if (parsed) {
            return [context.createElement(parsed[1])];
        }
        parsed = buildFragment([data], context, scripts);
        if (scripts && scripts.length) {
            jQuery(scripts).remove();
        }
        return jQuery.merge([], parsed.childNodes);
    };
    var _load = jQuery.fn.load;
    jQuery.fn.load = function (url, params, callback) {
        if (typeof url !== 'string' && _load) {
            return _load.apply(this, arguments);
        }
        var selector, type, response, self = this, off = url.indexOf(' ');
        if (off > -1) {
            selector = jQuery.trim(url.slice(off, url.length));
            url = url.slice(0, off);
        }
        if (jQuery.isFunction(params)) {
            callback = params;
            params = undefined;
        } else if (params && typeof params === 'object') {
            type = 'POST';
        }
        if (self.length > 0) {
            jQuery.ajax({
                url: url,
                type: type || 'GET',
                dataType: 'html',
                data: params
            }).done(function (responseText) {
                response = arguments;
                self.html(selector ? jQuery('<div>').append(jQuery.parseHTML(responseText)).find(selector) : responseText);
            }).always(callback && function (jqXHR, status) {
                self.each(function () {
                    callback.apply(this, response || [
                        jqXHR.responseText,
                        status,
                        jqXHR
                    ]);
                });
            });
        }
        return this;
    };
    jQuery.each([
        'ajaxStart',
        'ajaxStop',
        'ajaxComplete',
        'ajaxError',
        'ajaxSuccess',
        'ajaxSend'
    ], function (i, type) {
        jQuery.fn[type] = function (fn) {
            return this.on(type, fn);
        };
    });
    jQuery.expr.filters.animated = function (elem) {
        return jQuery.grep(jQuery.timers, function (fn) {
            return elem === fn.elem;
        }).length;
    };
    function getWindow(elem) {
        return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 ? elem.defaultView || elem.parentWindow : false;
    }
    jQuery.offset = {
        setOffset: function (elem, options, i) {
            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, 'position'), curElem = jQuery(elem), props = {};
            if (position === 'static') {
                elem.style.position = 'relative';
            }
            curOffset = curElem.offset();
            curCSSTop = jQuery.css(elem, 'top');
            curCSSLeft = jQuery.css(elem, 'left');
            calculatePosition = (position === 'absolute' || position === 'fixed') && jQuery.inArray('auto', [
                curCSSTop,
                curCSSLeft
            ]) > -1;
            if (calculatePosition) {
                curPosition = curElem.position();
                curTop = curPosition.top;
                curLeft = curPosition.left;
            } else {
                curTop = parseFloat(curCSSTop) || 0;
                curLeft = parseFloat(curCSSLeft) || 0;
            }
            if (jQuery.isFunction(options)) {
                options = options.call(elem, i, jQuery.extend({}, curOffset));
            }
            if (options.top != null) {
                props.top = options.top - curOffset.top + curTop;
            }
            if (options.left != null) {
                props.left = options.left - curOffset.left + curLeft;
            }
            if ('using' in options) {
                options.using.call(elem, props);
            } else {
                curElem.css(props);
            }
        }
    };
    jQuery.fn.extend({
        offset: function (options) {
            if (arguments.length) {
                return options === undefined ? this : this.each(function (i) {
                    jQuery.offset.setOffset(this, options, i);
                });
            }
            var docElem, win, box = {
                    top: 0,
                    left: 0
                }, elem = this[0], doc = elem && elem.ownerDocument;
            if (!doc) {
                return;
            }
            docElem = doc.documentElement;
            if (!jQuery.contains(docElem, elem)) {
                return box;
            }
            if (typeof elem.getBoundingClientRect !== 'undefined') {
                box = elem.getBoundingClientRect();
            }
            win = getWindow(doc);
            return {
                top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
                left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)
            };
        },
        position: function () {
            if (!this[0]) {
                return;
            }
            var offsetParent, offset, parentOffset = {
                    top: 0,
                    left: 0
                }, elem = this[0];
            if (jQuery.css(elem, 'position') === 'fixed') {
                offset = elem.getBoundingClientRect();
            } else {
                offsetParent = this.offsetParent();
                offset = this.offset();
                if (!jQuery.nodeName(offsetParent[0], 'html')) {
                    parentOffset = offsetParent.offset();
                }
                parentOffset.top += jQuery.css(offsetParent[0], 'borderTopWidth', true);
                parentOffset.left += jQuery.css(offsetParent[0], 'borderLeftWidth', true);
            }
            return {
                top: offset.top - parentOffset.top - jQuery.css(elem, 'marginTop', true),
                left: offset.left - parentOffset.left - jQuery.css(elem, 'marginLeft', true)
            };
        },
        offsetParent: function () {
            return this.map(function () {
                var offsetParent = this.offsetParent;
                while (offsetParent && (!jQuery.nodeName(offsetParent, 'html') && jQuery.css(offsetParent, 'position') === 'static')) {
                    offsetParent = offsetParent.offsetParent;
                }
                return offsetParent || documentElement;
            });
        }
    });
    jQuery.each({
        scrollLeft: 'pageXOffset',
        scrollTop: 'pageYOffset'
    }, function (method, prop) {
        var top = /Y/.test(prop);
        jQuery.fn[method] = function (val) {
            return access(this, function (elem, method, val) {
                var win = getWindow(elem);
                if (val === undefined) {
                    return win ? prop in win ? win[prop] : win.document.documentElement[method] : elem[method];
                }
                if (win) {
                    win.scrollTo(!top ? val : jQuery(win).scrollLeft(), top ? val : jQuery(win).scrollTop());
                } else {
                    elem[method] = val;
                }
            }, method, val, arguments.length, null);
        };
    });
    jQuery.each([
        'top',
        'left'
    ], function (i, prop) {
        jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {
            if (computed) {
                computed = curCSS(elem, prop);
                return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;
            }
        });
    });
    jQuery.each({
        Height: 'height',
        Width: 'width'
    }, function (name, type) {
        jQuery.each({
            padding: 'inner' + name,
            content: type,
            '': 'outer' + name
        }, function (defaultExtra, funcName) {
            jQuery.fn[funcName] = function (margin, value) {
                var chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean'), extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');
                return access(this, function (elem, type, value) {
                    var doc;
                    if (jQuery.isWindow(elem)) {
                        return elem.document.documentElement['client' + name];
                    }
                    if (elem.nodeType === 9) {
                        doc = elem.documentElement;
                        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);
                    }
                    return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
                }, type, chainable ? margin : undefined, chainable, null);
            };
        });
    });
    jQuery.fn.extend({
        bind: function (types, data, fn) {
            return this.on(types, null, data, fn);
        },
        unbind: function (types, fn) {
            return this.off(types, null, fn);
        },
        delegate: function (selector, types, data, fn) {
            return this.on(types, selector, data, fn);
        },
        undelegate: function (selector, types, fn) {
            return arguments.length === 1 ? this.off(selector, '**') : this.off(types, selector || '**', fn);
        }
    });
    jQuery.fn.size = function () {
        return this.length;
    };
    jQuery.fn.andSelf = jQuery.fn.addBack;
    if (typeof define === 'function' && define.amd) {
        define('jquery', [], function () {
            return jQuery;
        });
    }
    var _jQuery = window.jQuery, _$ = window.$;
    jQuery.noConflict = function (deep) {
        if (window.$ === jQuery) {
            window.$ = _$;
        }
        if (deep && window.jQuery === jQuery) {
            window.jQuery = _jQuery;
        }
        return jQuery;
    };
    if (!noGlobal) {
        window.jQuery = window.$ = jQuery;
    }
    return jQuery;
}));
(function () {
    define('layout', [
        'jquery',
        'jquery'
    ], function () {
        jQuery('#preloader').addClass('loaded');
        jQuery('.leftpanel .nav-parent > a').bind('click', function () {
            var parent = jQuery(this).parent();
            var sub = parent.find('> ul');
            if (!jQuery('body').hasClass('leftpanel-collapsed')) {
                if (sub.is(':visible')) {
                    sub.slideUp(200, function () {
                        parent.removeClass('nav-active');
                        jQuery('.mainpanel').css({ height: '' });
                        adjustmainpanelheight();
                    });
                } else {
                    closeVisibleSubMenu();
                    parent.addClass('nav-active');
                    sub.slideDown(200, function () {
                        adjustmainpanelheight();
                    });
                }
            }
            return false;
        });
        $('.scroll-to-top').click(function () {
            $('body').animate({ scrollTop: 0 }, 1000);
        });
        function closeVisibleSubMenu() {
            jQuery('.leftpanel .nav-parent').each(function () {
                var t = jQuery(this);
                if (t.hasClass('nav-active')) {
                    t.find('> ul').slideUp(200, function () {
                        t.removeClass('nav-active');
                    });
                }
            });
        }
        function adjustmainpanelheight() {
            jQuery('.mainpanel').css('minHeight', $(window).height() - parseInt($('.mainpanel').css('paddingTop')));
        }
        adjustmainpanelheight();
        jQuery(document).on('click', '.panel .panel-close', function () {
            jQuery(this).closest('.panel').fadeOut(200);
            return false;
        });
        var scColor1 = '#428BCA';
        if (localStorage.getItem('change-skin') && localStorage.getItem('change-skin') == 'bluenav') {
            scColor1 = '#fff';
        }
        jQuery(document).on('click', '.minimize', function () {
            var t = jQuery(this);
            var p = t.closest('.panel');
            if (!jQuery(this).hasClass('maximize')) {
                p.find('.panel-body, .panel-footer').slideUp(200);
                t.addClass('maximize');
                t.html('&plus;');
            } else {
                p.find('.panel-body, .panel-footer').slideDown(200);
                t.removeClass('maximize');
                t.html('&minus;');
            }
            return false;
        });
        jQuery('.nav-bracket > li').hover(function () {
            jQuery(this).addClass('nav-hover');
        }, function () {
            jQuery(this).removeClass('nav-hover');
        });
        jQuery('.menutoggle').click(function () {
            var body = jQuery('body');
            var bodypos = body.css('position');
            if (bodypos != 'relative') {
                if (!body.hasClass('leftpanel-collapsed')) {
                    body.addClass('leftpanel-collapsed');
                    jQuery('.nav-bracket ul').attr('style', '');
                    jQuery(this).addClass('menu-collapsed');
                } else {
                    body.removeClass('leftpanel-collapsed chat-view');
                    jQuery('.nav-bracket li.active ul').css({ display: 'block' });
                    jQuery(this).removeClass('menu-collapsed');
                }
            } else {
                if (body.hasClass('leftpanel-show'))
                    body.removeClass('leftpanel-show');
                else
                    body.addClass('leftpanel-show');
                adjustmainpanelheight();
            }
        });
        reposition_topnav();
        reposition_searchform();
        jQuery(window).resize(function () {
            if (jQuery('body').css('position') == 'relative') {
                jQuery('body').removeClass('leftpanel-collapsed chat-view');
            } else {
                jQuery('body').removeClass('chat-relative-view');
                jQuery('body').css({
                    left: '',
                    marginRight: ''
                });
            }
            reposition_searchform();
            reposition_topnav();
            adjustmainpanelheight();
        });
        function reposition_searchform() {
            if (jQuery('.searchform').css('position') == 'relative') {
                jQuery('.searchform').insertBefore('.leftpanelinner .userlogged');
            } else {
                jQuery('.searchform').insertBefore('.header-right');
            }
        }
        function reposition_topnav() {
            if (jQuery('.nav-horizontal').length > 0) {
                if (jQuery('.nav-horizontal').css('position') == 'relative') {
                    if (jQuery('.leftpanel .nav-bracket').length == 2) {
                        jQuery('.nav-horizontal').insertAfter('.nav-bracket:eq(1)');
                    } else {
                        if (jQuery('.leftpanel .nav-horizontal').length == 0)
                            jQuery('.nav-horizontal').appendTo('.leftpanelinner');
                    }
                    jQuery('.nav-horizontal').css({ display: 'block' }).addClass('nav-pills nav-stacked nav-bracket');
                    jQuery('.nav-horizontal .children').removeClass('dropdown-menu');
                    jQuery('.nav-horizontal > li').each(function () {
                        jQuery(this).removeClass('open');
                        jQuery(this).find('a').removeAttr('class');
                        jQuery(this).find('a').removeAttr('data-toggle');
                    });
                    if (jQuery('.nav-horizontal li:last-child').has('form')) {
                        jQuery('.nav-horizontal li:last-child form').addClass('searchform').appendTo('.topnav');
                        jQuery('.nav-horizontal li:last-child').hide();
                    }
                } else {
                    if (jQuery('.leftpanel .nav-horizontal').length > 0) {
                        jQuery('.nav-horizontal').removeClass('nav-pills nav-stacked nav-bracket').appendTo('.topnav');
                        jQuery('.nav-horizontal .children').addClass('dropdown-menu').removeAttr('style');
                        jQuery('.nav-horizontal li:last-child').show();
                        jQuery('.searchform').removeClass('searchform').appendTo('.nav-horizontal li:last-child .dropdown-menu');
                        jQuery('.nav-horizontal > li > a').each(function () {
                            jQuery(this).parent().removeClass('nav-active');
                            if (jQuery(this).parent().find('.dropdown-menu').length > 0) {
                                jQuery(this).attr('class', 'dropdown-toggle');
                                jQuery(this).attr('data-toggle', 'dropdown');
                            }
                        });
                    }
                }
            }
        }
        if (localStorage.getItem('sticky-header'))
            jQuery('body').addClass('stickyheader');
        if (localStorage.getItem('sticky-leftpanel')) {
            jQuery('body').addClass('stickyheader');
            jQuery('.leftpanel').addClass('sticky-leftpanel');
        }
        if (localStorage.getItem('leftpanel-collapsed')) {
            jQuery('body').addClass('leftpanel-collapsed');
            jQuery('.menutoggle').addClass('menu-collapsed');
        }
        var c = localStorage.getItem('change-skin');
        var cssSkin = 'css/style.' + c + '.css';
        if (jQuery('body').css('direction') == 'rtl') {
            cssSkin = '../css/style.' + c + '.css';
            jQuery('html').addClass('rtl');
        }
        if (c) {
            jQuery('head').append('<link id="skinswitch" rel="stylesheet" href="' + cssSkin + '" />');
        }
        var fnt = localStorage.getItem('change-font');
        if (fnt) {
            jQuery('head').append('<link id="fontswitch" rel="stylesheet" href="css/font.' + fnt + '.css" />');
        }
        if (jQuery('body').hasClass('leftpanel-collapsed'))
            jQuery('.nav-bracket .children').css({ display: '' });
        jQuery('.dropdown-menu').find('form').click(function (e) {
            e.stopPropagation();
        });
        var c = localStorage.getItem('change-skin');
        if (c && c == 'greyjoy') {
            $('.btn-primary').removeClass('btn-primary').addClass('btn-orange');
            $('.rdio-primary').addClass('rdio-default').removeClass('rdio-primary');
            $('.text-primary').removeClass('text-primary').addClass('text-orange');
        }
    });
}.call(this));
define('bootstrap', ['jquery'], function () {
    if ('undefined' == typeof jQuery)
        throw new Error('Bootstrap\'s JavaScript requires jQuery');
    +function (a) {
        'use strict';
        var b = a.fn.jquery.split(' ')[0].split('.');
        if (b[0] < 2 && b[1] < 9 || 1 == b[0] && 9 == b[1] && b[2] < 1 || b[0] > 2)
            throw new Error('Bootstrap\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3');
    }(jQuery), +function (a) {
        'use strict';
        function b() {
            var a = document.createElement('bootstrap'), b = {
                    WebkitTransition: 'webkitTransitionEnd',
                    MozTransition: 'transitionend',
                    OTransition: 'oTransitionEnd otransitionend',
                    transition: 'transitionend'
                };
            for (var c in b)
                if (void 0 !== a.style[c])
                    return { end: b[c] };
            return !1;
        }
        a.fn.emulateTransitionEnd = function (b) {
            var c = !1, d = this;
            a(this).one('bsTransitionEnd', function () {
                c = !0;
            });
            var e = function () {
                c || a(d).trigger(a.support.transition.end);
            };
            return setTimeout(e, b), this;
        }, a(function () {
            a.support.transition = b(), a.support.transition && (a.event.special.bsTransitionEnd = {
                bindType: a.support.transition.end,
                delegateType: a.support.transition.end,
                handle: function (b) {
                    return a(b.target).is(this) ? b.handleObj.handler.apply(this, arguments) : void 0;
                }
            });
        });
    }(jQuery), +function (a) {
        'use strict';
        function b(b) {
            return this.each(function () {
                var c = a(this), e = c.data('bs.alert');
                e || c.data('bs.alert', e = new d(this)), 'string' == typeof b && e[b].call(c);
            });
        }
        var c = '[data-dismiss="alert"]', d = function (b) {
                a(b).on('click', c, this.close);
            };
        d.VERSION = '3.3.6', d.TRANSITION_DURATION = 150, d.prototype.close = function (b) {
            function c() {
                g.detach().trigger('closed.bs.alert').remove();
            }
            var e = a(this), f = e.attr('data-target');
            f || (f = e.attr('href'), f = f && f.replace(/.*(?=#[^\s]*$)/, ''));
            var g = a(f);
            b && b.preventDefault(), g.length || (g = e.closest('.alert')), g.trigger(b = a.Event('close.bs.alert')), b.isDefaultPrevented() || (g.removeClass('in'), a.support.transition && g.hasClass('fade') ? g.one('bsTransitionEnd', c).emulateTransitionEnd(d.TRANSITION_DURATION) : c());
        };
        var e = a.fn.alert;
        a.fn.alert = b, a.fn.alert.Constructor = d, a.fn.alert.noConflict = function () {
            return a.fn.alert = e, this;
        }, a(document).on('click.bs.alert.data-api', c, d.prototype.close);
    }(jQuery), +function (a) {
        'use strict';
        function b(b) {
            return this.each(function () {
                var d = a(this), e = d.data('bs.button'), f = 'object' == typeof b && b;
                e || d.data('bs.button', e = new c(this, f)), 'toggle' == b ? e.toggle() : b && e.setState(b);
            });
        }
        var c = function (b, d) {
            this.$element = a(b), this.options = a.extend({}, c.DEFAULTS, d), this.isLoading = !1;
        };
        c.VERSION = '3.3.6', c.DEFAULTS = { loadingText: 'loading...' }, c.prototype.setState = function (b) {
            var c = 'disabled', d = this.$element, e = d.is('input') ? 'val' : 'html', f = d.data();
            b += 'Text', null == f.resetText && d.data('resetText', d[e]()), setTimeout(a.proxy(function () {
                d[e](null == f[b] ? this.options[b] : f[b]), 'loadingText' == b ? (this.isLoading = !0, d.addClass(c).attr(c, c)) : this.isLoading && (this.isLoading = !1, d.removeClass(c).removeAttr(c));
            }, this), 0);
        }, c.prototype.toggle = function () {
            var a = !0, b = this.$element.closest('[data-toggle="buttons"]');
            if (b.length) {
                var c = this.$element.find('input');
                'radio' == c.prop('type') ? (c.prop('checked') && (a = !1), b.find('.active').removeClass('active'), this.$element.addClass('active')) : 'checkbox' == c.prop('type') && (c.prop('checked') !== this.$element.hasClass('active') && (a = !1), this.$element.toggleClass('active')), c.prop('checked', this.$element.hasClass('active')), a && c.trigger('change');
            } else
                this.$element.attr('aria-pressed', !this.$element.hasClass('active')), this.$element.toggleClass('active');
        };
        var d = a.fn.button;
        a.fn.button = b, a.fn.button.Constructor = c, a.fn.button.noConflict = function () {
            return a.fn.button = d, this;
        }, a(document).on('click.bs.button.data-api', '[data-toggle^="button"]', function (c) {
            var d = a(c.target);
            d.hasClass('btn') || (d = d.closest('.btn')), b.call(d, 'toggle'), a(c.target).is('input[type="radio"]') || a(c.target).is('input[type="checkbox"]') || c.preventDefault();
        }).on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^="button"]', function (b) {
            a(b.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(b.type));
        });
    }(jQuery), +function (a) {
        'use strict';
        function b(b) {
            return this.each(function () {
                var d = a(this), e = d.data('bs.carousel'), f = a.extend({}, c.DEFAULTS, d.data(), 'object' == typeof b && b), g = 'string' == typeof b ? b : f.slide;
                e || d.data('bs.carousel', e = new c(this, f)), 'number' == typeof b ? e.to(b) : g ? e[g]() : f.interval && e.pause().cycle();
            });
        }
        var c = function (b, c) {
            this.$element = a(b), this.$indicators = this.$element.find('.carousel-indicators'), this.options = c, this.paused = null, this.sliding = null, this.interval = null, this.$active = null, this.$items = null, this.options.keyboard && this.$element.on('keydown.bs.carousel', a.proxy(this.keydown, this)), 'hover' == this.options.pause && !('ontouchstart' in document.documentElement) && this.$element.on('mouseenter.bs.carousel', a.proxy(this.pause, this)).on('mouseleave.bs.carousel', a.proxy(this.cycle, this));
        };
        c.VERSION = '3.3.6', c.TRANSITION_DURATION = 600, c.DEFAULTS = {
            interval: 5000,
            pause: 'hover',
            wrap: !0,
            keyboard: !0
        }, c.prototype.keydown = function (a) {
            if (!/input|textarea/i.test(a.target.tagName)) {
                switch (a.which) {
                case 37:
                    this.prev();
                    break;
                case 39:
                    this.next();
                    break;
                default:
                    return;
                }
                a.preventDefault();
            }
        }, c.prototype.cycle = function (b) {
            return b || (this.paused = !1), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(a.proxy(this.next, this), this.options.interval)), this;
        }, c.prototype.getItemIndex = function (a) {
            return this.$items = a.parent().children('.item'), this.$items.index(a || this.$active);
        }, c.prototype.getItemForDirection = function (a, b) {
            var c = this.getItemIndex(b), d = 'prev' == a && 0 === c || 'next' == a && c == this.$items.length - 1;
            if (d && !this.options.wrap)
                return b;
            var e = 'prev' == a ? -1 : 1, f = (c + e) % this.$items.length;
            return this.$items.eq(f);
        }, c.prototype.to = function (a) {
            var b = this, c = this.getItemIndex(this.$active = this.$element.find('.item.active'));
            return a > this.$items.length - 1 || 0 > a ? void 0 : this.sliding ? this.$element.one('slid.bs.carousel', function () {
                b.to(a);
            }) : c == a ? this.pause().cycle() : this.slide(a > c ? 'next' : 'prev', this.$items.eq(a));
        }, c.prototype.pause = function (b) {
            return b || (this.paused = !0), this.$element.find('.next, .prev').length && a.support.transition && (this.$element.trigger(a.support.transition.end), this.cycle(!0)), this.interval = clearInterval(this.interval), this;
        }, c.prototype.next = function () {
            return this.sliding ? void 0 : this.slide('next');
        }, c.prototype.prev = function () {
            return this.sliding ? void 0 : this.slide('prev');
        }, c.prototype.slide = function (b, d) {
            var e = this.$element.find('.item.active'), f = d || this.getItemForDirection(b, e), g = this.interval, h = 'next' == b ? 'left' : 'right', i = this;
            if (f.hasClass('active'))
                return this.sliding = !1;
            var j = f[0], k = a.Event('slide.bs.carousel', {
                    relatedTarget: j,
                    direction: h
                });
            if (this.$element.trigger(k), !k.isDefaultPrevented()) {
                if (this.sliding = !0, g && this.pause(), this.$indicators.length) {
                    this.$indicators.find('.active').removeClass('active');
                    var l = a(this.$indicators.children()[this.getItemIndex(f)]);
                    l && l.addClass('active');
                }
                var m = a.Event('slid.bs.carousel', {
                    relatedTarget: j,
                    direction: h
                });
                return a.support.transition && this.$element.hasClass('slide') ? (f.addClass(b), f[0].offsetWidth, e.addClass(h), f.addClass(h), e.one('bsTransitionEnd', function () {
                    f.removeClass([
                        b,
                        h
                    ].join(' ')).addClass('active'), e.removeClass([
                        'active',
                        h
                    ].join(' ')), i.sliding = !1, setTimeout(function () {
                        i.$element.trigger(m);
                    }, 0);
                }).emulateTransitionEnd(c.TRANSITION_DURATION)) : (e.removeClass('active'), f.addClass('active'), this.sliding = !1, this.$element.trigger(m)), g && this.cycle(), this;
            }
        };
        var d = a.fn.carousel;
        a.fn.carousel = b, a.fn.carousel.Constructor = c, a.fn.carousel.noConflict = function () {
            return a.fn.carousel = d, this;
        };
        var e = function (c) {
            var d, e = a(this), f = a(e.attr('data-target') || (d = e.attr('href')) && d.replace(/.*(?=#[^\s]+$)/, ''));
            if (f.hasClass('carousel')) {
                var g = a.extend({}, f.data(), e.data()), h = e.attr('data-slide-to');
                h && (g.interval = !1), b.call(f, g), h && f.data('bs.carousel').to(h), c.preventDefault();
            }
        };
        a(document).on('click.bs.carousel.data-api', '[data-slide]', e).on('click.bs.carousel.data-api', '[data-slide-to]', e), a(window).on('load', function () {
            a('[data-ride="carousel"]').each(function () {
                var c = a(this);
                b.call(c, c.data());
            });
        });
    }(jQuery), +function (a) {
        'use strict';
        function b(b) {
            var c, d = b.attr('data-target') || (c = b.attr('href')) && c.replace(/.*(?=#[^\s]+$)/, '');
            return a(d);
        }
        function c(b) {
            return this.each(function () {
                var c = a(this), e = c.data('bs.collapse'), f = a.extend({}, d.DEFAULTS, c.data(), 'object' == typeof b && b);
                !e && f.toggle && /show|hide/.test(b) && (f.toggle = !1), e || c.data('bs.collapse', e = new d(this, f)), 'string' == typeof b && e[b]();
            });
        }
        var d = function (b, c) {
            this.$element = a(b), this.options = a.extend({}, d.DEFAULTS, c), this.$trigger = a('[data-toggle="collapse"][href="#' + b.id + '"],[data-toggle="collapse"][data-target="#' + b.id + '"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle();
        };
        d.VERSION = '3.3.6', d.TRANSITION_DURATION = 350, d.DEFAULTS = { toggle: !0 }, d.prototype.dimension = function () {
            var a = this.$element.hasClass('width');
            return a ? 'width' : 'height';
        }, d.prototype.show = function () {
            if (!this.transitioning && !this.$element.hasClass('in')) {
                var b, e = this.$parent && this.$parent.children('.panel').children('.in, .collapsing');
                if (!(e && e.length && (b = e.data('bs.collapse'), b && b.transitioning))) {
                    var f = a.Event('show.bs.collapse');
                    if (this.$element.trigger(f), !f.isDefaultPrevented()) {
                        e && e.length && (c.call(e, 'hide'), b || e.data('bs.collapse', null));
                        var g = this.dimension();
                        this.$element.removeClass('collapse').addClass('collapsing')[g](0).attr('aria-expanded', !0), this.$trigger.removeClass('collapsed').attr('aria-expanded', !0), this.transitioning = 1;
                        var h = function () {
                            this.$element.removeClass('collapsing').addClass('collapse in')[g](''), this.transitioning = 0, this.$element.trigger('shown.bs.collapse');
                        };
                        if (!a.support.transition)
                            return h.call(this);
                        var i = a.camelCase([
                            'scroll',
                            g
                        ].join('-'));
                        this.$element.one('bsTransitionEnd', a.proxy(h, this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i]);
                    }
                }
            }
        }, d.prototype.hide = function () {
            if (!this.transitioning && this.$element.hasClass('in')) {
                var b = a.Event('hide.bs.collapse');
                if (this.$element.trigger(b), !b.isDefaultPrevented()) {
                    var c = this.dimension();
                    this.$element[c](this.$element[c]())[0].offsetHeight, this.$element.addClass('collapsing').removeClass('collapse in').attr('aria-expanded', !1), this.$trigger.addClass('collapsed').attr('aria-expanded', !1), this.transitioning = 1;
                    var e = function () {
                        this.transitioning = 0, this.$element.removeClass('collapsing').addClass('collapse').trigger('hidden.bs.collapse');
                    };
                    return a.support.transition ? void this.$element[c](0).one('bsTransitionEnd', a.proxy(e, this)).emulateTransitionEnd(d.TRANSITION_DURATION) : e.call(this);
                }
            }
        }, d.prototype.toggle = function () {
            this[this.$element.hasClass('in') ? 'hide' : 'show']();
        }, d.prototype.getParent = function () {
            return a(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each(a.proxy(function (c, d) {
                var e = a(d);
                this.addAriaAndCollapsedClass(b(e), e);
            }, this)).end();
        }, d.prototype.addAriaAndCollapsedClass = function (a, b) {
            var c = a.hasClass('in');
            a.attr('aria-expanded', c), b.toggleClass('collapsed', !c).attr('aria-expanded', c);
        };
        var e = a.fn.collapse;
        a.fn.collapse = c, a.fn.collapse.Constructor = d, a.fn.collapse.noConflict = function () {
            return a.fn.collapse = e, this;
        }, a(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (d) {
            var e = a(this);
            e.attr('data-target') || d.preventDefault();
            var f = b(e), g = f.data('bs.collapse'), h = g ? 'toggle' : e.data();
            c.call(f, h);
        });
    }(jQuery), +function (a) {
        'use strict';
        function b(b) {
            var c = b.attr('data-target');
            c || (c = b.attr('href'), c = c && /#[A-Za-z]/.test(c) && c.replace(/.*(?=#[^\s]*$)/, ''));
            var d = c && a(c);
            return d && d.length ? d : b.parent();
        }
        function c(c) {
            c && 3 === c.which || (a(e).remove(), a(f).each(function () {
                var d = a(this), e = b(d), f = { relatedTarget: this };
                e.hasClass('open') && (c && 'click' == c.type && /input|textarea/i.test(c.target.tagName) && a.contains(e[0], c.target) || (e.trigger(c = a.Event('hide.bs.dropdown', f)), c.isDefaultPrevented() || (d.attr('aria-expanded', 'false'), e.removeClass('open').trigger(a.Event('hidden.bs.dropdown', f)))));
            }));
        }
        function d(b) {
            return this.each(function () {
                var c = a(this), d = c.data('bs.dropdown');
                d || c.data('bs.dropdown', d = new g(this)), 'string' == typeof b && d[b].call(c);
            });
        }
        var e = '.dropdown-backdrop', f = '[data-toggle="dropdown"]', g = function (b) {
                a(b).on('click.bs.dropdown', this.toggle);
            };
        g.VERSION = '3.3.6', g.prototype.toggle = function (d) {
            var e = a(this);
            if (!e.is('.disabled, :disabled')) {
                var f = b(e), g = f.hasClass('open');
                if (c(), !g) {
                    'ontouchstart' in document.documentElement && !f.closest('.navbar-nav').length && a(document.createElement('div')).addClass('dropdown-backdrop').insertAfter(a(this)).on('click', c);
                    var h = { relatedTarget: this };
                    if (f.trigger(d = a.Event('show.bs.dropdown', h)), d.isDefaultPrevented())
                        return;
                    e.trigger('focus').attr('aria-expanded', 'true'), f.toggleClass('open').trigger(a.Event('shown.bs.dropdown', h));
                }
                return !1;
            }
        }, g.prototype.keydown = function (c) {
            if (/(38|40|27|32)/.test(c.which) && !/input|textarea/i.test(c.target.tagName)) {
                var d = a(this);
                if (c.preventDefault(), c.stopPropagation(), !d.is('.disabled, :disabled')) {
                    var e = b(d), g = e.hasClass('open');
                    if (!g && 27 != c.which || g && 27 == c.which)
                        return 27 == c.which && e.find(f).trigger('focus'), d.trigger('click');
                    var h = ' li:not(.disabled):visible a', i = e.find('.dropdown-menu' + h);
                    if (i.length) {
                        var j = i.index(c.target);
                        38 == c.which && j > 0 && j--, 40 == c.which && j < i.length - 1 && j++, ~j || (j = 0), i.eq(j).trigger('focus');
                    }
                }
            }
        };
        var h = a.fn.dropdown;
        a.fn.dropdown = d, a.fn.dropdown.Constructor = g, a.fn.dropdown.noConflict = function () {
            return a.fn.dropdown = h, this;
        }, a(document).on('click.bs.dropdown.data-api', c).on('click.bs.dropdown.data-api', '.dropdown form', function (a) {
            a.stopPropagation();
        }).on('click.bs.dropdown.data-api', f, g.prototype.toggle).on('keydown.bs.dropdown.data-api', f, g.prototype.keydown).on('keydown.bs.dropdown.data-api', '.dropdown-menu', g.prototype.keydown);
    }(jQuery), +function (a) {
        'use strict';
        function b(b, d) {
            return this.each(function () {
                var e = a(this), f = e.data('bs.modal'), g = a.extend({}, c.DEFAULTS, e.data(), 'object' == typeof b && b);
                f || e.data('bs.modal', f = new c(this, g)), 'string' == typeof b ? f[b](d) : g.show && f.show(d);
            });
        }
        var c = function (b, c) {
            this.options = c, this.$body = a(document.body), this.$element = a(b), this.$dialog = this.$element.find('.modal-dialog'), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.options.remote && this.$element.find('.modal-content').load(this.options.remote, a.proxy(function () {
                this.$element.trigger('loaded.bs.modal');
            }, this));
        };
        c.VERSION = '3.3.6', c.TRANSITION_DURATION = 300, c.BACKDROP_TRANSITION_DURATION = 150, c.DEFAULTS = {
            backdrop: !0,
            keyboard: !0,
            show: !0
        }, c.prototype.toggle = function (a) {
            return this.isShown ? this.hide() : this.show(a);
        }, c.prototype.show = function (b) {
            var d = this, e = a.Event('show.bs.modal', { relatedTarget: b });
            this.$element.trigger(e), this.isShown || e.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass('modal-open'), this.escape(), this.resize(), this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', a.proxy(this.hide, this)), this.$dialog.on('mousedown.dismiss.bs.modal', function () {
                d.$element.one('mouseup.dismiss.bs.modal', function (b) {
                    a(b.target).is(d.$element) && (d.ignoreBackdropClick = !0);
                });
            }), this.backdrop(function () {
                var e = a.support.transition && d.$element.hasClass('fade');
                d.$element.parent().length || d.$element.appendTo(d.$body), d.$element.show().scrollTop(0), d.adjustDialog(), e && d.$element[0].offsetWidth, d.$element.addClass('in'), d.enforceFocus();
                var f = a.Event('shown.bs.modal', { relatedTarget: b });
                e ? d.$dialog.one('bsTransitionEnd', function () {
                    d.$element.trigger('focus').trigger(f);
                }).emulateTransitionEnd(c.TRANSITION_DURATION) : d.$element.trigger('focus').trigger(f);
            }));
        }, c.prototype.hide = function (b) {
            b && b.preventDefault(), b = a.Event('hide.bs.modal'), this.$element.trigger(b), this.isShown && !b.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), a(document).off('focusin.bs.modal'), this.$element.removeClass('in').off('click.dismiss.bs.modal').off('mouseup.dismiss.bs.modal'), this.$dialog.off('mousedown.dismiss.bs.modal'), a.support.transition && this.$element.hasClass('fade') ? this.$element.one('bsTransitionEnd', a.proxy(this.hideModal, this)).emulateTransitionEnd(c.TRANSITION_DURATION) : this.hideModal());
        }, c.prototype.enforceFocus = function () {
            a(document).off('focusin.bs.modal').on('focusin.bs.modal', a.proxy(function (a) {
                this.$element[0] === a.target || this.$element.has(a.target).length || this.$element.trigger('focus');
            }, this));
        }, c.prototype.escape = function () {
            this.isShown && this.options.keyboard ? this.$element.on('keydown.dismiss.bs.modal', a.proxy(function (a) {
                27 == a.which && this.hide();
            }, this)) : this.isShown || this.$element.off('keydown.dismiss.bs.modal');
        }, c.prototype.resize = function () {
            this.isShown ? a(window).on('resize.bs.modal', a.proxy(this.handleUpdate, this)) : a(window).off('resize.bs.modal');
        }, c.prototype.hideModal = function () {
            var a = this;
            this.$element.hide(), this.backdrop(function () {
                a.$body.removeClass('modal-open'), a.resetAdjustments(), a.resetScrollbar(), a.$element.trigger('hidden.bs.modal');
            });
        }, c.prototype.removeBackdrop = function () {
            this.$backdrop && this.$backdrop.remove(), this.$backdrop = null;
        }, c.prototype.backdrop = function (b) {
            var d = this, e = this.$element.hasClass('fade') ? 'fade' : '';
            if (this.isShown && this.options.backdrop) {
                var f = a.support.transition && e;
                if (this.$backdrop = a(document.createElement('div')).addClass('modal-backdrop ' + e).appendTo(this.$body), this.$element.on('click.dismiss.bs.modal', a.proxy(function (a) {
                        return this.ignoreBackdropClick ? void (this.ignoreBackdropClick = !1) : void (a.target === a.currentTarget && ('static' == this.options.backdrop ? this.$element[0].focus() : this.hide()));
                    }, this)), f && this.$backdrop[0].offsetWidth, this.$backdrop.addClass('in'), !b)
                    return;
                f ? this.$backdrop.one('bsTransitionEnd', b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : b();
            } else if (!this.isShown && this.$backdrop) {
                this.$backdrop.removeClass('in');
                var g = function () {
                    d.removeBackdrop(), b && b();
                };
                a.support.transition && this.$element.hasClass('fade') ? this.$backdrop.one('bsTransitionEnd', g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION) : g();
            } else
                b && b();
        }, c.prototype.handleUpdate = function () {
            this.adjustDialog();
        }, c.prototype.adjustDialog = function () {
            var a = this.$element[0].scrollHeight > document.documentElement.clientHeight;
            this.$element.css({
                paddingLeft: !this.bodyIsOverflowing && a ? this.scrollbarWidth : '',
                paddingRight: this.bodyIsOverflowing && !a ? this.scrollbarWidth : ''
            });
        }, c.prototype.resetAdjustments = function () {
            this.$element.css({
                paddingLeft: '',
                paddingRight: ''
            });
        }, c.prototype.checkScrollbar = function () {
            var a = window.innerWidth;
            if (!a) {
                var b = document.documentElement.getBoundingClientRect();
                a = b.right - Math.abs(b.left);
            }
            this.bodyIsOverflowing = document.body.clientWidth < a, this.scrollbarWidth = this.measureScrollbar();
        }, c.prototype.setScrollbar = function () {
            var a = parseInt(this.$body.css('padding-right') || 0, 10);
            this.originalBodyPad = document.body.style.paddingRight || '', this.bodyIsOverflowing && this.$body.css('padding-right', a + this.scrollbarWidth);
        }, c.prototype.resetScrollbar = function () {
            this.$body.css('padding-right', this.originalBodyPad);
        }, c.prototype.measureScrollbar = function () {
            var a = document.createElement('div');
            a.className = 'modal-scrollbar-measure', this.$body.append(a);
            var b = a.offsetWidth - a.clientWidth;
            return this.$body[0].removeChild(a), b;
        };
        var d = a.fn.modal;
        a.fn.modal = b, a.fn.modal.Constructor = c, a.fn.modal.noConflict = function () {
            return a.fn.modal = d, this;
        }, a(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (c) {
            var d = a(this), e = d.attr('href'), f = a(d.attr('data-target') || e && e.replace(/.*(?=#[^\s]+$)/, '')), g = f.data('bs.modal') ? 'toggle' : a.extend({ remote: !/#/.test(e) && e }, f.data(), d.data());
            d.is('a') && c.preventDefault(), f.one('show.bs.modal', function (a) {
                a.isDefaultPrevented() || f.one('hidden.bs.modal', function () {
                    d.is(':visible') && d.trigger('focus');
                });
            }), b.call(f, g, this);
        });
    }(jQuery), +function (a) {
        'use strict';
        function b(b) {
            return this.each(function () {
                var d = a(this), e = d.data('bs.tooltip'), f = 'object' == typeof b && b;
                (e || !/destroy|hide/.test(b)) && (e || d.data('bs.tooltip', e = new c(this, f)), 'string' == typeof b && e[b]());
            });
        }
        var c = function (a, b) {
            this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init('tooltip', a, b);
        };
        c.VERSION = '3.3.6', c.TRANSITION_DURATION = 150, c.DEFAULTS = {
            animation: !0,
            placement: 'top',
            selector: !1,
            template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
            trigger: 'hover focus',
            title: '',
            delay: 0,
            html: !1,
            container: !1,
            viewport: {
                selector: 'body',
                padding: 0
            }
        }, c.prototype.init = function (b, c, d) {
            if (this.enabled = !0, this.type = b, this.$element = a(c), this.options = this.getOptions(d), this.$viewport = this.options.viewport && a(a.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = {
                    click: !1,
                    hover: !1,
                    focus: !1
                }, this.$element[0] instanceof document.constructor && !this.options.selector)
                throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!');
            for (var e = this.options.trigger.split(' '), f = e.length; f--;) {
                var g = e[f];
                if ('click' == g)
                    this.$element.on('click.' + this.type, this.options.selector, a.proxy(this.toggle, this));
                else if ('manual' != g) {
                    var h = 'hover' == g ? 'mouseenter' : 'focusin', i = 'hover' == g ? 'mouseleave' : 'focusout';
                    this.$element.on(h + '.' + this.type, this.options.selector, a.proxy(this.enter, this)), this.$element.on(i + '.' + this.type, this.options.selector, a.proxy(this.leave, this));
                }
            }
            this.options.selector ? this._options = a.extend({}, this.options, {
                trigger: 'manual',
                selector: ''
            }) : this.fixTitle();
        }, c.prototype.getDefaults = function () {
            return c.DEFAULTS;
        }, c.prototype.getOptions = function (b) {
            return b = a.extend({}, this.getDefaults(), this.$element.data(), b), b.delay && 'number' == typeof b.delay && (b.delay = {
                show: b.delay,
                hide: b.delay
            }), b;
        }, c.prototype.getDelegateOptions = function () {
            var b = {}, c = this.getDefaults();
            return this._options && a.each(this._options, function (a, d) {
                c[a] != d && (b[a] = d);
            }), b;
        }, c.prototype.enter = function (b) {
            var c = b instanceof this.constructor ? b : a(b.currentTarget).data('bs.' + this.type);
            return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data('bs.' + this.type, c)), b instanceof a.Event && (c.inState['focusin' == b.type ? 'focus' : 'hover'] = !0), c.tip().hasClass('in') || 'in' == c.hoverState ? void (c.hoverState = 'in') : (clearTimeout(c.timeout), c.hoverState = 'in', c.options.delay && c.options.delay.show ? void (c.timeout = setTimeout(function () {
                'in' == c.hoverState && c.show();
            }, c.options.delay.show)) : c.show());
        }, c.prototype.isInStateTrue = function () {
            for (var a in this.inState)
                if (this.inState[a])
                    return !0;
            return !1;
        }, c.prototype.leave = function (b) {
            var c = b instanceof this.constructor ? b : a(b.currentTarget).data('bs.' + this.type);
            return c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data('bs.' + this.type, c)), b instanceof a.Event && (c.inState['focusout' == b.type ? 'focus' : 'hover'] = !1), c.isInStateTrue() ? void 0 : (clearTimeout(c.timeout), c.hoverState = 'out', c.options.delay && c.options.delay.hide ? void (c.timeout = setTimeout(function () {
                'out' == c.hoverState && c.hide();
            }, c.options.delay.hide)) : c.hide());
        }, c.prototype.show = function () {
            var b = a.Event('show.bs.' + this.type);
            if (this.hasContent() && this.enabled) {
                this.$element.trigger(b);
                var d = a.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
                if (b.isDefaultPrevented() || !d)
                    return;
                var e = this, f = this.tip(), g = this.getUID(this.type);
                this.setContent(), f.attr('id', g), this.$element.attr('aria-describedby', g), this.options.animation && f.addClass('fade');
                var h = 'function' == typeof this.options.placement ? this.options.placement.call(this, f[0], this.$element[0]) : this.options.placement, i = /\s?auto?\s?/i, j = i.test(h);
                j && (h = h.replace(i, '') || 'top'), f.detach().css({
                    top: 0,
                    left: 0,
                    display: 'block'
                }).addClass(h).data('bs.' + this.type, this), this.options.container ? f.appendTo(this.options.container) : f.insertAfter(this.$element), this.$element.trigger('inserted.bs.' + this.type);
                var k = this.getPosition(), l = f[0].offsetWidth, m = f[0].offsetHeight;
                if (j) {
                    var n = h, o = this.getPosition(this.$viewport);
                    h = 'bottom' == h && k.bottom + m > o.bottom ? 'top' : 'top' == h && k.top - m < o.top ? 'bottom' : 'right' == h && k.right + l > o.width ? 'left' : 'left' == h && k.left - l < o.left ? 'right' : h, f.removeClass(n).addClass(h);
                }
                var p = this.getCalculatedOffset(h, k, l, m);
                this.applyPlacement(p, h);
                var q = function () {
                    var a = e.hoverState;
                    e.$element.trigger('shown.bs.' + e.type), e.hoverState = null, 'out' == a && e.leave(e);
                };
                a.support.transition && this.$tip.hasClass('fade') ? f.one('bsTransitionEnd', q).emulateTransitionEnd(c.TRANSITION_DURATION) : q();
            }
        }, c.prototype.applyPlacement = function (b, c) {
            var d = this.tip(), e = d[0].offsetWidth, f = d[0].offsetHeight, g = parseInt(d.css('margin-top'), 10), h = parseInt(d.css('margin-left'), 10);
            isNaN(g) && (g = 0), isNaN(h) && (h = 0), b.top += g, b.left += h, a.offset.setOffset(d[0], a.extend({
                using: function (a) {
                    d.css({
                        top: Math.round(a.top),
                        left: Math.round(a.left)
                    });
                }
            }, b), 0), d.addClass('in');
            var i = d[0].offsetWidth, j = d[0].offsetHeight;
            'top' == c && j != f && (b.top = b.top + f - j);
            var k = this.getViewportAdjustedDelta(c, b, i, j);
            k.left ? b.left += k.left : b.top += k.top;
            var l = /top|bottom/.test(c), m = l ? 2 * k.left - e + i : 2 * k.top - f + j, n = l ? 'offsetWidth' : 'offsetHeight';
            d.offset(b), this.replaceArrow(m, d[0][n], l);
        }, c.prototype.replaceArrow = function (a, b, c) {
            this.arrow().css(c ? 'left' : 'top', 50 * (1 - a / b) + '%').css(c ? 'top' : 'left', '');
        }, c.prototype.setContent = function () {
            var a = this.tip(), b = this.getTitle();
            a.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](b), a.removeClass('fade in top bottom left right');
        }, c.prototype.hide = function (b) {
            function d() {
                'in' != e.hoverState && f.detach(), e.$element.removeAttr('aria-describedby').trigger('hidden.bs.' + e.type), b && b();
            }
            var e = this, f = a(this.$tip), g = a.Event('hide.bs.' + this.type);
            return this.$element.trigger(g), g.isDefaultPrevented() ? void 0 : (f.removeClass('in'), a.support.transition && f.hasClass('fade') ? f.one('bsTransitionEnd', d).emulateTransitionEnd(c.TRANSITION_DURATION) : d(), this.hoverState = null, this);
        }, c.prototype.fixTitle = function () {
            var a = this.$element;
            (a.attr('title') || 'string' != typeof a.attr('data-original-title')) && a.attr('data-original-title', a.attr('title') || '').attr('title', '');
        }, c.prototype.hasContent = function () {
            return this.getTitle();
        }, c.prototype.getPosition = function (b) {
            b = b || this.$element;
            var c = b[0], d = 'BODY' == c.tagName, e = c.getBoundingClientRect();
            null == e.width && (e = a.extend({}, e, {
                width: e.right - e.left,
                height: e.bottom - e.top
            }));
            var f = d ? {
                    top: 0,
                    left: 0
                } : b.offset(), g = { scroll: d ? document.documentElement.scrollTop || document.body.scrollTop : b.scrollTop() }, h = d ? {
                    width: a(window).width(),
                    height: a(window).height()
                } : null;
            return a.extend({}, e, g, h, f);
        }, c.prototype.getCalculatedOffset = function (a, b, c, d) {
            return 'bottom' == a ? {
                top: b.top + b.height,
                left: b.left + b.width / 2 - c / 2
            } : 'top' == a ? {
                top: b.top - d,
                left: b.left + b.width / 2 - c / 2
            } : 'left' == a ? {
                top: b.top + b.height / 2 - d / 2,
                left: b.left - c
            } : {
                top: b.top + b.height / 2 - d / 2,
                left: b.left + b.width
            };
        }, c.prototype.getViewportAdjustedDelta = function (a, b, c, d) {
            var e = {
                top: 0,
                left: 0
            };
            if (!this.$viewport)
                return e;
            var f = this.options.viewport && this.options.viewport.padding || 0, g = this.getPosition(this.$viewport);
            if (/right|left/.test(a)) {
                var h = b.top - f - g.scroll, i = b.top + f - g.scroll + d;
                h < g.top ? e.top = g.top - h : i > g.top + g.height && (e.top = g.top + g.height - i);
            } else {
                var j = b.left - f, k = b.left + f + c;
                j < g.left ? e.left = g.left - j : k > g.right && (e.left = g.left + g.width - k);
            }
            return e;
        }, c.prototype.getTitle = function () {
            var a, b = this.$element, c = this.options;
            return a = b.attr('data-original-title') || ('function' == typeof c.title ? c.title.call(b[0]) : c.title);
        }, c.prototype.getUID = function (a) {
            do
                a += ~~(1000000 * Math.random());
            while (document.getElementById(a));
            return a;
        }, c.prototype.tip = function () {
            if (!this.$tip && (this.$tip = a(this.options.template), 1 != this.$tip.length))
                throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!');
            return this.$tip;
        }, c.prototype.arrow = function () {
            return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow');
        }, c.prototype.enable = function () {
            this.enabled = !0;
        }, c.prototype.disable = function () {
            this.enabled = !1;
        }, c.prototype.toggleEnabled = function () {
            this.enabled = !this.enabled;
        }, c.prototype.toggle = function (b) {
            var c = this;
            b && (c = a(b.currentTarget).data('bs.' + this.type), c || (c = new this.constructor(b.currentTarget, this.getDelegateOptions()), a(b.currentTarget).data('bs.' + this.type, c))), b ? (c.inState.click = !c.inState.click, c.isInStateTrue() ? c.enter(c) : c.leave(c)) : c.tip().hasClass('in') ? c.leave(c) : c.enter(c);
        }, c.prototype.destroy = function () {
            var a = this;
            clearTimeout(this.timeout), this.hide(function () {
                a.$element.off('.' + a.type).removeData('bs.' + a.type), a.$tip && a.$tip.detach(), a.$tip = null, a.$arrow = null, a.$viewport = null;
            });
        };
        var d = a.fn.tooltip;
        a.fn.tooltip = b, a.fn.tooltip.Constructor = c, a.fn.tooltip.noConflict = function () {
            return a.fn.tooltip = d, this;
        };
    }(jQuery), +function (a) {
        'use strict';
        function b(b) {
            return this.each(function () {
                var d = a(this), e = d.data('bs.popover'), f = 'object' == typeof b && b;
                (e || !/destroy|hide/.test(b)) && (e || d.data('bs.popover', e = new c(this, f)), 'string' == typeof b && e[b]());
            });
        }
        var c = function (a, b) {
            this.init('popover', a, b);
        };
        if (!a.fn.tooltip)
            throw new Error('Popover requires tooltip.js');
        c.VERSION = '3.3.6', c.DEFAULTS = a.extend({}, a.fn.tooltip.Constructor.DEFAULTS, {
            placement: 'right',
            trigger: 'click',
            content: '',
            template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
        }), c.prototype = a.extend({}, a.fn.tooltip.Constructor.prototype), c.prototype.constructor = c, c.prototype.getDefaults = function () {
            return c.DEFAULTS;
        }, c.prototype.setContent = function () {
            var a = this.tip(), b = this.getTitle(), c = this.getContent();
            a.find('.popover-title')[this.options.html ? 'html' : 'text'](b), a.find('.popover-content').children().detach().end()[this.options.html ? 'string' == typeof c ? 'html' : 'append' : 'text'](c), a.removeClass('fade top bottom left right in'), a.find('.popover-title').html() || a.find('.popover-title').hide();
        }, c.prototype.hasContent = function () {
            return this.getTitle() || this.getContent();
        }, c.prototype.getContent = function () {
            var a = this.$element, b = this.options;
            return a.attr('data-content') || ('function' == typeof b.content ? b.content.call(a[0]) : b.content);
        }, c.prototype.arrow = function () {
            return this.$arrow = this.$arrow || this.tip().find('.arrow');
        };
        var d = a.fn.popover;
        a.fn.popover = b, a.fn.popover.Constructor = c, a.fn.popover.noConflict = function () {
            return a.fn.popover = d, this;
        };
    }(jQuery), +function (a) {
        'use strict';
        function b(c, d) {
            this.$body = a(document.body), this.$scrollElement = a(a(c).is(document.body) ? window : c), this.options = a.extend({}, b.DEFAULTS, d), this.selector = (this.options.target || '') + ' .nav li > a', this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on('scroll.bs.scrollspy', a.proxy(this.process, this)), this.refresh(), this.process();
        }
        function c(c) {
            return this.each(function () {
                var d = a(this), e = d.data('bs.scrollspy'), f = 'object' == typeof c && c;
                e || d.data('bs.scrollspy', e = new b(this, f)), 'string' == typeof c && e[c]();
            });
        }
        b.VERSION = '3.3.6', b.DEFAULTS = { offset: 10 }, b.prototype.getScrollHeight = function () {
            return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight);
        }, b.prototype.refresh = function () {
            var b = this, c = 'offset', d = 0;
            this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight(), a.isWindow(this.$scrollElement[0]) || (c = 'position', d = this.$scrollElement.scrollTop()), this.$body.find(this.selector).map(function () {
                var b = a(this), e = b.data('target') || b.attr('href'), f = /^#./.test(e) && a(e);
                return f && f.length && f.is(':visible') && [[
                        f[c]().top + d,
                        e
                    ]] || null;
            }).sort(function (a, b) {
                return a[0] - b[0];
            }).each(function () {
                b.offsets.push(this[0]), b.targets.push(this[1]);
            });
        }, b.prototype.process = function () {
            var a, b = this.$scrollElement.scrollTop() + this.options.offset, c = this.getScrollHeight(), d = this.options.offset + c - this.$scrollElement.height(), e = this.offsets, f = this.targets, g = this.activeTarget;
            if (this.scrollHeight != c && this.refresh(), b >= d)
                return g != (a = f[f.length - 1]) && this.activate(a);
            if (g && b < e[0])
                return this.activeTarget = null, this.clear();
            for (a = e.length; a--;)
                g != f[a] && b >= e[a] && (void 0 === e[a + 1] || b < e[a + 1]) && this.activate(f[a]);
        }, b.prototype.activate = function (b) {
            this.activeTarget = b, this.clear();
            var c = this.selector + '[data-target="' + b + '"],' + this.selector + '[href="' + b + '"]', d = a(c).parents('li').addClass('active');
            d.parent('.dropdown-menu').length && (d = d.closest('li.dropdown').addClass('active')), d.trigger('activate.bs.scrollspy');
        }, b.prototype.clear = function () {
            a(this.selector).parentsUntil(this.options.target, '.active').removeClass('active');
        };
        var d = a.fn.scrollspy;
        a.fn.scrollspy = c, a.fn.scrollspy.Constructor = b, a.fn.scrollspy.noConflict = function () {
            return a.fn.scrollspy = d, this;
        }, a(window).on('load.bs.scrollspy.data-api', function () {
            a('[data-spy="scroll"]').each(function () {
                var b = a(this);
                c.call(b, b.data());
            });
        });
    }(jQuery), +function (a) {
        'use strict';
        function b(b) {
            return this.each(function () {
                var d = a(this), e = d.data('bs.tab');
                e || d.data('bs.tab', e = new c(this)), 'string' == typeof b && e[b]();
            });
        }
        var c = function (b) {
            this.element = a(b);
        };
        c.VERSION = '3.3.6', c.TRANSITION_DURATION = 150, c.prototype.show = function () {
            var b = this.element, c = b.closest('ul:not(.dropdown-menu)'), d = b.data('target');
            if (d || (d = b.attr('href'), d = d && d.replace(/.*(?=#[^\s]*$)/, '')), !b.parent('li').hasClass('active')) {
                var e = c.find('.active:last a'), f = a.Event('hide.bs.tab', { relatedTarget: b[0] }), g = a.Event('show.bs.tab', { relatedTarget: e[0] });
                if (e.trigger(f), b.trigger(g), !g.isDefaultPrevented() && !f.isDefaultPrevented()) {
                    var h = a(d);
                    this.activate(b.closest('li'), c), this.activate(h, h.parent(), function () {
                        e.trigger({
                            type: 'hidden.bs.tab',
                            relatedTarget: b[0]
                        }), b.trigger({
                            type: 'shown.bs.tab',
                            relatedTarget: e[0]
                        });
                    });
                }
            }
        }, c.prototype.activate = function (b, d, e) {
            function f() {
                g.removeClass('active').find('> .dropdown-menu > .active').removeClass('active').end().find('[data-toggle="tab"]').attr('aria-expanded', !1), b.addClass('active').find('[data-toggle="tab"]').attr('aria-expanded', !0), h ? (b[0].offsetWidth, b.addClass('in')) : b.removeClass('fade'), b.parent('.dropdown-menu').length && b.closest('li.dropdown').addClass('active').end().find('[data-toggle="tab"]').attr('aria-expanded', !0), e && e();
            }
            var g = d.find('> .active'), h = e && a.support.transition && (g.length && g.hasClass('fade') || !!d.find('> .fade').length);
            g.length && h ? g.one('bsTransitionEnd', f).emulateTransitionEnd(c.TRANSITION_DURATION) : f(), g.removeClass('in');
        };
        var d = a.fn.tab;
        a.fn.tab = b, a.fn.tab.Constructor = c, a.fn.tab.noConflict = function () {
            return a.fn.tab = d, this;
        };
        var e = function (c) {
            c.preventDefault(), b.call(a(this), 'show');
        };
        a(document).on('click.bs.tab.data-api', '[data-toggle="tab"]', e).on('click.bs.tab.data-api', '[data-toggle="pill"]', e);
    }(jQuery), +function (a) {
        'use strict';
        function b(b) {
            return this.each(function () {
                var d = a(this), e = d.data('bs.affix'), f = 'object' == typeof b && b;
                e || d.data('bs.affix', e = new c(this, f)), 'string' == typeof b && e[b]();
            });
        }
        var c = function (b, d) {
            this.options = a.extend({}, c.DEFAULTS, d), this.$target = a(this.options.target).on('scroll.bs.affix.data-api', a.proxy(this.checkPosition, this)).on('click.bs.affix.data-api', a.proxy(this.checkPositionWithEventLoop, this)), this.$element = a(b), this.affixed = null, this.unpin = null, this.pinnedOffset = null, this.checkPosition();
        };
        c.VERSION = '3.3.6', c.RESET = 'affix affix-top affix-bottom', c.DEFAULTS = {
            offset: 0,
            target: window
        }, c.prototype.getState = function (a, b, c, d) {
            var e = this.$target.scrollTop(), f = this.$element.offset(), g = this.$target.height();
            if (null != c && 'top' == this.affixed)
                return c > e ? 'top' : !1;
            if ('bottom' == this.affixed)
                return null != c ? e + this.unpin <= f.top ? !1 : 'bottom' : a - d >= e + g ? !1 : 'bottom';
            var h = null == this.affixed, i = h ? e : f.top, j = h ? g : b;
            return null != c && c >= e ? 'top' : null != d && i + j >= a - d ? 'bottom' : !1;
        }, c.prototype.getPinnedOffset = function () {
            if (this.pinnedOffset)
                return this.pinnedOffset;
            this.$element.removeClass(c.RESET).addClass('affix');
            var a = this.$target.scrollTop(), b = this.$element.offset();
            return this.pinnedOffset = b.top - a;
        }, c.prototype.checkPositionWithEventLoop = function () {
            setTimeout(a.proxy(this.checkPosition, this), 1);
        }, c.prototype.checkPosition = function () {
            if (this.$element.is(':visible')) {
                var b = this.$element.height(), d = this.options.offset, e = d.top, f = d.bottom, g = Math.max(a(document).height(), a(document.body).height());
                'object' != typeof d && (f = e = d), 'function' == typeof e && (e = d.top(this.$element)), 'function' == typeof f && (f = d.bottom(this.$element));
                var h = this.getState(g, b, e, f);
                if (this.affixed != h) {
                    null != this.unpin && this.$element.css('top', '');
                    var i = 'affix' + (h ? '-' + h : ''), j = a.Event(i + '.bs.affix');
                    if (this.$element.trigger(j), j.isDefaultPrevented())
                        return;
                    this.affixed = h, this.unpin = 'bottom' == h ? this.getPinnedOffset() : null, this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace('affix', 'affixed') + '.bs.affix');
                }
                'bottom' == h && this.$element.offset({ top: g - b - f });
            }
        };
        var d = a.fn.affix;
        a.fn.affix = b, a.fn.affix.Constructor = c, a.fn.affix.noConflict = function () {
            return a.fn.affix = d, this;
        }, a(window).on('load', function () {
            a('[data-spy="affix"]').each(function () {
                var c = a(this), d = c.data();
                d.offset = d.offset || {}, null != d.offsetBottom && (d.offset.bottom = d.offsetBottom), null != d.offsetTop && (d.offset.top = d.offsetTop), b.call(c, d);
            });
        });
    }(jQuery);
    return;
});
define('gritter', ['jquery'], function () {
    (function (b) {
        b.gritter = {};
        b.gritter.options = {
            position: '',
            class_name: '',
            fade_in_speed: 'medium',
            fade_out_speed: 1000,
            time: 6000
        };
        b.gritter.add = function (f) {
            try {
                return a.add(f || {});
            } catch (d) {
                var c = 'Gritter Error: ' + d;
                typeof console != 'undefined' && console.error ? console.error(c, f) : alert(c);
            }
        };
        b.gritter.remove = function (d, c) {
            a.removeSpecific(d, c || {});
        };
        b.gritter.removeAll = function (c) {
            a.stop(c || {});
        };
        var a = {
            position: '',
            fade_in_speed: '',
            fade_out_speed: '',
            time: '',
            _custom_timer: 0,
            _item_count: 0,
            _is_setup: 0,
            _tpl_close: '<a class="gritter-close" href="#" tabindex="1">Close Notification</a>',
            _tpl_title: '<span class="gritter-title">[[title]]</span>',
            _tpl_item: '<div id="gritter-item-[[number]]" class="gritter-item-wrapper [[item_class]]" style="display:none" role="alert"><div class="gritter-top"></div><div class="gritter-item">[[close]][[image]]<div class="[[class_name]]">[[title]]<p>[[text]]</p></div><div style="clear:both"></div></div><div class="gritter-bottom"></div></div>',
            _tpl_wrap: '<div id="gritter-notice-wrapper"></div>',
            add: function (g) {
                if (typeof g == 'string') {
                    g = { text: g };
                }
                if (g.text === null) {
                    throw 'You must supply "text" parameter.';
                }
                if (!this._is_setup) {
                    this._runSetup();
                }
                var k = g.title, n = g.text, e = g.image || '', l = g.sticky || false, m = g.class_name || b.gritter.options.class_name, j = b.gritter.options.position, d = g.time || '';
                this._verifyWrapper();
                this._item_count++;
                var f = this._item_count, i = this._tpl_item;
                b([
                    'before_open',
                    'after_open',
                    'before_close',
                    'after_close'
                ]).each(function (p, q) {
                    a['_' + q + '_' + f] = b.isFunction(g[q]) ? g[q] : function () {
                    };
                });
                this._custom_timer = 0;
                if (d) {
                    this._custom_timer = d;
                }
                var c = e != '' ? '<img src="' + e + '" class="gritter-image" />' : '', h = e != '' ? 'gritter-with-image' : 'gritter-without-image';
                if (k) {
                    k = this._str_replace('[[title]]', k, this._tpl_title);
                } else {
                    k = '';
                }
                i = this._str_replace([
                    '[[title]]',
                    '[[text]]',
                    '[[close]]',
                    '[[image]]',
                    '[[number]]',
                    '[[class_name]]',
                    '[[item_class]]'
                ], [
                    k,
                    n,
                    this._tpl_close,
                    c,
                    this._item_count,
                    h,
                    m
                ], i);
                if (this['_before_open_' + f]() === false) {
                    return false;
                }
                b('#gritter-notice-wrapper').addClass(j).append(i);
                var o = b('#gritter-item-' + this._item_count);
                o.fadeIn(this.fade_in_speed, function () {
                    a['_after_open_' + f](b(this));
                });
                if (!l) {
                    this._setFadeTimer(o, f);
                }
                b(o).bind('mouseenter mouseleave', function (p) {
                    if (p.type == 'mouseenter') {
                        if (!l) {
                            a._restoreItemIfFading(b(this), f);
                        }
                    } else {
                        if (!l) {
                            a._setFadeTimer(b(this), f);
                        }
                    }
                    a._hoverState(b(this), p.type);
                });
                b(o).find('.gritter-close').click(function () {
                    a.removeSpecific(f, {}, null, true);
                    return false;
                });
                return f;
            },
            _countRemoveWrapper: function (c, d, f) {
                d.remove();
                this['_after_close_' + c](d, f);
                if (b('.gritter-item-wrapper').length == 0) {
                    b('#gritter-notice-wrapper').remove();
                }
            },
            _fade: function (g, d, j, f) {
                var j = j || {}, i = typeof j.fade != 'undefined' ? j.fade : true, c = j.speed || this.fade_out_speed, h = f;
                this['_before_close_' + d](g, h);
                if (f) {
                    g.unbind('mouseenter mouseleave');
                }
                if (i) {
                    g.animate({ opacity: 0 }, c, function () {
                        g.animate({ height: 0 }, 300, function () {
                            a._countRemoveWrapper(d, g, h);
                        });
                    });
                } else {
                    this._countRemoveWrapper(d, g);
                }
            },
            _hoverState: function (d, c) {
                if (c == 'mouseenter') {
                    d.addClass('hover');
                    d.find('.gritter-close').show();
                } else {
                    d.removeClass('hover');
                    d.find('.gritter-close').hide();
                }
            },
            removeSpecific: function (c, g, f, d) {
                if (!f) {
                    var f = b('#gritter-item-' + c);
                }
                this._fade(f, c, g || {}, d);
            },
            _restoreItemIfFading: function (d, c) {
                clearTimeout(this['_int_id_' + c]);
                d.stop().css({
                    opacity: '',
                    height: ''
                });
            },
            _runSetup: function () {
                for (opt in b.gritter.options) {
                    this[opt] = b.gritter.options[opt];
                }
                this._is_setup = 1;
            },
            _setFadeTimer: function (f, d) {
                var c = this._custom_timer ? this._custom_timer : this.time;
                this['_int_id_' + d] = setTimeout(function () {
                    a._fade(f, d);
                }, c);
            },
            stop: function (e) {
                var c = b.isFunction(e.before_close) ? e.before_close : function () {
                };
                var f = b.isFunction(e.after_close) ? e.after_close : function () {
                };
                var d = b('#gritter-notice-wrapper');
                c(d);
                d.fadeOut(function () {
                    b(this).remove();
                    f();
                });
            },
            _str_replace: function (v, e, o, n) {
                var k = 0, h = 0, t = '', m = '', g = 0, q = 0, l = [].concat(v), c = [].concat(e), u = o, d = c instanceof Array, p = u instanceof Array;
                u = [].concat(u);
                if (n) {
                    this.window[n] = 0;
                }
                for (k = 0, g = u.length; k < g; k++) {
                    if (u[k] === '') {
                        continue;
                    }
                    for (h = 0, q = l.length; h < q; h++) {
                        t = u[k] + '';
                        m = d ? c[h] !== undefined ? c[h] : '' : c[0];
                        u[k] = t.split(l[h]).join(m);
                        if (n && u[k] !== t) {
                            this.window[n] += (t.length - u[k].length) / l[h].length;
                        }
                    }
                }
                return p ? u : u[0];
            },
            _verifyWrapper: function () {
                if (b('#gritter-notice-wrapper').length == 0) {
                    b('body').append(this._tpl_wrap);
                }
            }
        };
    }(jQuery));
    return;
});
define('lib/hyxt', ['gritter'], function () {
    var hyxt = window.hyxt || {};
    var classMap = {
        'warn': 'growl-warning',
        'error': 'growl-danger',
        'info': 'growl-info',
        'success': 'growl-success',
        'primary': 'growl-primary',
        'black': ''
    };
    hyxt.commonErrorHandler = function (data) {
        if (data.result != 1) {
            alert(data.msg);
            return false;
        }
        return true;
    };
    hyxt.tips = function (title, msg, type) {
        if (arguments.length > 0) {
            jQuery.gritter.add({
                title: title || '',
                text: msg || '',
                sticky: false,
                class_name: type ? classMap[arguments[2]] : '',
                time: ''
            });
        }
    };
    $.map(classMap, function (value, key) {
        hyxt[key] = function () {
            hyxt.tips.call(null, arguments[0], arguments[1], key);
        };
    });
    window.hyxt = hyxt;
});
define('angular', [], function () {
    (function (v) {
        'use strict';
        function O(a) {
            return function () {
                var b = arguments[0], d;
                d = '[' + (a ? a + ':' : '') + b + '] http://errors.angularjs.org/1.5.5/' + (a ? a + '/' : '') + b;
                for (b = 1; b < arguments.length; b++) {
                    d = d + (1 == b ? '?' : '&') + 'p' + (b - 1) + '=';
                    var c = encodeURIComponent, e;
                    e = arguments[b];
                    e = 'function' == typeof e ? e.toString().replace(/ \{[\s\S]*$/, '') : 'undefined' == typeof e ? 'undefined' : 'string' != typeof e ? JSON.stringify(e) : e;
                    d += c(e);
                }
                return Error(d);
            };
        }
        function ya(a) {
            if (null == a || Va(a))
                return !1;
            if (K(a) || F(a) || B && a instanceof B)
                return !0;
            var b = 'length' in Object(a) && a.length;
            return Q(b) && (0 <= b && (b - 1 in a || a instanceof Array) || 'function' == typeof a.item);
        }
        function q(a, b, d) {
            var c, e;
            if (a)
                if (E(a))
                    for (c in a)
                        'prototype' == c || 'length' == c || 'name' == c || a.hasOwnProperty && !a.hasOwnProperty(c) || b.call(d, a[c], c, a);
                else if (K(a) || ya(a)) {
                    var f = 'object' !== typeof a;
                    c = 0;
                    for (e = a.length; c < e; c++)
                        (f || c in a) && b.call(d, a[c], c, a);
                } else if (a.forEach && a.forEach !== q)
                    a.forEach(b, d, a);
                else if (oc(a))
                    for (c in a)
                        b.call(d, a[c], c, a);
                else if ('function' === typeof a.hasOwnProperty)
                    for (c in a)
                        a.hasOwnProperty(c) && b.call(d, a[c], c, a);
                else
                    for (c in a)
                        ua.call(a, c) && b.call(d, a[c], c, a);
            return a;
        }
        function pc(a, b, d) {
            for (var c = Object.keys(a).sort(), e = 0; e < c.length; e++)
                b.call(d, a[c[e]], c[e]);
            return c;
        }
        function qc(a) {
            return function (b, d) {
                a(d, b);
            };
        }
        function Xd() {
            return ++nb;
        }
        function Nb(a, b, d) {
            for (var c = a.$$hashKey, e = 0, f = b.length; e < f; ++e) {
                var g = b[e];
                if (G(g) || E(g))
                    for (var h = Object.keys(g), k = 0, l = h.length; k < l; k++) {
                        var n = h[k], m = g[n];
                        d && G(m) ? fa(m) ? a[n] = new Date(m.valueOf()) : Wa(m) ? a[n] = new RegExp(m) : m.nodeName ? a[n] = m.cloneNode(!0) : Ob(m) ? a[n] = m.clone() : (G(a[n]) || (a[n] = K(m) ? [] : {}), Nb(a[n], [m], !0)) : a[n] = m;
                    }
            }
            c ? a.$$hashKey = c : delete a.$$hashKey;
            return a;
        }
        function R(a) {
            return Nb(a, za.call(arguments, 1), !1);
        }
        function Yd(a) {
            return Nb(a, za.call(arguments, 1), !0);
        }
        function X(a) {
            return parseInt(a, 10);
        }
        function Pb(a, b) {
            return R(Object.create(a), b);
        }
        function C() {
        }
        function Xa(a) {
            return a;
        }
        function da(a) {
            return function () {
                return a;
            };
        }
        function rc(a) {
            return E(a.toString) && a.toString !== ma;
        }
        function y(a) {
            return 'undefined' === typeof a;
        }
        function x(a) {
            return 'undefined' !== typeof a;
        }
        function G(a) {
            return null !== a && 'object' === typeof a;
        }
        function oc(a) {
            return null !== a && 'object' === typeof a && !sc(a);
        }
        function F(a) {
            return 'string' === typeof a;
        }
        function Q(a) {
            return 'number' === typeof a;
        }
        function fa(a) {
            return '[object Date]' === ma.call(a);
        }
        function E(a) {
            return 'function' === typeof a;
        }
        function Wa(a) {
            return '[object RegExp]' === ma.call(a);
        }
        function Va(a) {
            return a && a.window === a;
        }
        function Ya(a) {
            return a && a.$evalAsync && a.$watch;
        }
        function Da(a) {
            return 'boolean' === typeof a;
        }
        function Zd(a) {
            return a && Q(a.length) && $d.test(ma.call(a));
        }
        function Ob(a) {
            return !(!a || !(a.nodeName || a.prop && a.attr && a.find));
        }
        function ae(a) {
            var b = {};
            a = a.split(',');
            var d;
            for (d = 0; d < a.length; d++)
                b[a[d]] = !0;
            return b;
        }
        function va(a) {
            return P(a.nodeName || a[0] && a[0].nodeName);
        }
        function Za(a, b) {
            var d = a.indexOf(b);
            0 <= d && a.splice(d, 1);
            return d;
        }
        function qa(a, b) {
            function d(a, b) {
                var d = b.$$hashKey, e;
                if (K(a)) {
                    e = 0;
                    for (var f = a.length; e < f; e++)
                        b.push(c(a[e]));
                } else if (oc(a))
                    for (e in a)
                        b[e] = c(a[e]);
                else if (a && 'function' === typeof a.hasOwnProperty)
                    for (e in a)
                        a.hasOwnProperty(e) && (b[e] = c(a[e]));
                else
                    for (e in a)
                        ua.call(a, e) && (b[e] = c(a[e]));
                d ? b.$$hashKey = d : delete b.$$hashKey;
                return b;
            }
            function c(a) {
                if (!G(a))
                    return a;
                var b = f.indexOf(a);
                if (-1 !== b)
                    return g[b];
                if (Va(a) || Ya(a))
                    throw Aa('cpws');
                var b = !1, c = e(a);
                void 0 === c && (c = K(a) ? [] : Object.create(sc(a)), b = !0);
                f.push(a);
                g.push(c);
                return b ? d(a, c) : c;
            }
            function e(a) {
                switch (ma.call(a)) {
                case '[object Int8Array]':
                case '[object Int16Array]':
                case '[object Int32Array]':
                case '[object Float32Array]':
                case '[object Float64Array]':
                case '[object Uint8Array]':
                case '[object Uint8ClampedArray]':
                case '[object Uint16Array]':
                case '[object Uint32Array]':
                    return new a.constructor(c(a.buffer));
                case '[object ArrayBuffer]':
                    if (!a.slice) {
                        var b = new ArrayBuffer(a.byteLength);
                        new Uint8Array(b).set(new Uint8Array(a));
                        return b;
                    }
                    return a.slice(0);
                case '[object Boolean]':
                case '[object Number]':
                case '[object String]':
                case '[object Date]':
                    return new a.constructor(a.valueOf());
                case '[object RegExp]':
                    return b = new RegExp(a.source, a.toString().match(/[^\/]*$/)[0]), b.lastIndex = a.lastIndex, b;
                case '[object Blob]':
                    return new a.constructor([a], { type: a.type });
                }
                if (E(a.cloneNode))
                    return a.cloneNode(!0);
            }
            var f = [], g = [];
            if (b) {
                if (Zd(b) || '[object ArrayBuffer]' === ma.call(b))
                    throw Aa('cpta');
                if (a === b)
                    throw Aa('cpi');
                K(b) ? b.length = 0 : q(b, function (a, d) {
                    '$$hashKey' !== d && delete b[d];
                });
                f.push(a);
                g.push(b);
                return d(a, b);
            }
            return c(a);
        }
        function ha(a, b) {
            if (K(a)) {
                b = b || [];
                for (var d = 0, c = a.length; d < c; d++)
                    b[d] = a[d];
            } else if (G(a))
                for (d in b = b || {}, a)
                    if ('$' !== d.charAt(0) || '$' !== d.charAt(1))
                        b[d] = a[d];
            return b || a;
        }
        function pa(a, b) {
            if (a === b)
                return !0;
            if (null === a || null === b)
                return !1;
            if (a !== a && b !== b)
                return !0;
            var d = typeof a, c;
            if (d == typeof b && 'object' == d)
                if (K(a)) {
                    if (!K(b))
                        return !1;
                    if ((d = a.length) == b.length) {
                        for (c = 0; c < d; c++)
                            if (!pa(a[c], b[c]))
                                return !1;
                        return !0;
                    }
                } else {
                    if (fa(a))
                        return fa(b) ? pa(a.getTime(), b.getTime()) : !1;
                    if (Wa(a))
                        return Wa(b) ? a.toString() == b.toString() : !1;
                    if (Ya(a) || Ya(b) || Va(a) || Va(b) || K(b) || fa(b) || Wa(b))
                        return !1;
                    d = T();
                    for (c in a)
                        if ('$' !== c.charAt(0) && !E(a[c])) {
                            if (!pa(a[c], b[c]))
                                return !1;
                            d[c] = !0;
                        }
                    for (c in b)
                        if (!(c in d) && '$' !== c.charAt(0) && x(b[c]) && !E(b[c]))
                            return !1;
                    return !0;
                }
            return !1;
        }
        function $a(a, b, d) {
            return a.concat(za.call(b, d));
        }
        function tc(a, b) {
            var d = 2 < arguments.length ? za.call(arguments, 2) : [];
            return !E(b) || b instanceof RegExp ? b : d.length ? function () {
                return arguments.length ? b.apply(a, $a(d, arguments, 0)) : b.apply(a, d);
            } : function () {
                return arguments.length ? b.apply(a, arguments) : b.call(a);
            };
        }
        function be(a, b) {
            var d = b;
            'string' === typeof a && '$' === a.charAt(0) && '$' === a.charAt(1) ? d = void 0 : Va(b) ? d = '$WINDOW' : b && v.document === b ? d = '$DOCUMENT' : Ya(b) && (d = '$SCOPE');
            return d;
        }
        function ab(a, b) {
            if (!y(a))
                return Q(b) || (b = b ? 2 : null), JSON.stringify(a, be, b);
        }
        function uc(a) {
            return F(a) ? JSON.parse(a) : a;
        }
        function vc(a, b) {
            a = a.replace(ce, '');
            var d = Date.parse('Jan 01, 1970 00:00:00 ' + a) / 60000;
            return isNaN(d) ? b : d;
        }
        function Qb(a, b, d) {
            d = d ? -1 : 1;
            var c = a.getTimezoneOffset();
            b = vc(b, c);
            d *= b - c;
            a = new Date(a.getTime());
            a.setMinutes(a.getMinutes() + d);
            return a;
        }
        function wa(a) {
            a = B(a).clone();
            try {
                a.empty();
            } catch (b) {
            }
            var d = B('<div>').append(a).html();
            try {
                return a[0].nodeType === Ma ? P(d) : d.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/, function (a, b) {
                    return '<' + P(b);
                });
            } catch (c) {
                return P(d);
            }
        }
        function wc(a) {
            try {
                return decodeURIComponent(a);
            } catch (b) {
            }
        }
        function xc(a) {
            var b = {};
            q((a || '').split('&'), function (a) {
                var c, e, f;
                a && (e = a = a.replace(/\+/g, '%20'), c = a.indexOf('='), -1 !== c && (e = a.substring(0, c), f = a.substring(c + 1)), e = wc(e), x(e) && (f = x(f) ? wc(f) : !0, ua.call(b, e) ? K(b[e]) ? b[e].push(f) : b[e] = [
                    b[e],
                    f
                ] : b[e] = f));
            });
            return b;
        }
        function Rb(a) {
            var b = [];
            q(a, function (a, c) {
                K(a) ? q(a, function (a) {
                    b.push(ja(c, !0) + (!0 === a ? '' : '=' + ja(a, !0)));
                }) : b.push(ja(c, !0) + (!0 === a ? '' : '=' + ja(a, !0)));
            });
            return b.length ? b.join('&') : '';
        }
        function ob(a) {
            return ja(a, !0).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');
        }
        function ja(a, b) {
            return encodeURIComponent(a).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%3B/gi, ';').replace(/%20/g, b ? '%20' : '+');
        }
        function de(a, b) {
            var d, c, e = Na.length;
            for (c = 0; c < e; ++c)
                if (d = Na[c] + b, F(d = a.getAttribute(d)))
                    return d;
            return null;
        }
        function ee(a, b) {
            var d, c, e = {};
            q(Na, function (b) {
                b += 'app';
                !d && a.hasAttribute && a.hasAttribute(b) && (d = a, c = a.getAttribute(b));
            });
            q(Na, function (b) {
                b += 'app';
                var e;
                !d && (e = a.querySelector('[' + b.replace(':', '\\:') + ']')) && (d = e, c = e.getAttribute(b));
            });
            d && (e.strictDi = null !== de(d, 'strict-di'), b(d, c ? [c] : [], e));
        }
        function yc(a, b, d) {
            G(d) || (d = {});
            d = R({ strictDi: !1 }, d);
            var c = function () {
                    a = B(a);
                    if (a.injector()) {
                        var c = a[0] === v.document ? 'document' : wa(a);
                        throw Aa('btstrpd', c.replace(/</, '&lt;').replace(/>/, '&gt;'));
                    }
                    b = b || [];
                    b.unshift([
                        '$provide',
                        function (b) {
                            b.value('$rootElement', a);
                        }
                    ]);
                    d.debugInfoEnabled && b.push([
                        '$compileProvider',
                        function (a) {
                            a.debugInfoEnabled(!0);
                        }
                    ]);
                    b.unshift('ng');
                    c = bb(b, d.strictDi);
                    c.invoke([
                        '$rootScope',
                        '$rootElement',
                        '$compile',
                        '$injector',
                        function (a, b, c, d) {
                            a.$apply(function () {
                                b.data('$injector', d);
                                c(b)(a);
                            });
                        }
                    ]);
                    return c;
                }, e = /^NG_ENABLE_DEBUG_INFO!/, f = /^NG_DEFER_BOOTSTRAP!/;
            v && e.test(v.name) && (d.debugInfoEnabled = !0, v.name = v.name.replace(e, ''));
            if (v && !f.test(v.name))
                return c();
            v.name = v.name.replace(f, '');
            ea.resumeBootstrap = function (a) {
                q(a, function (a) {
                    b.push(a);
                });
                return c();
            };
            E(ea.resumeDeferredBootstrap) && ea.resumeDeferredBootstrap();
        }
        function fe() {
            v.name = 'NG_ENABLE_DEBUG_INFO!' + v.name;
            v.location.reload();
        }
        function ge(a) {
            a = ea.element(a).injector();
            if (!a)
                throw Aa('test');
            return a.get('$$testability');
        }
        function zc(a, b) {
            b = b || '_';
            return a.replace(he, function (a, c) {
                return (c ? b : '') + a.toLowerCase();
            });
        }
        function ie() {
            var a;
            if (!Ac) {
                var b = pb();
                (Z = y(b) ? v.jQuery : b ? v[b] : void 0) && Z.fn.on ? (B = Z, R(Z.fn, {
                    scope: Oa.scope,
                    isolateScope: Oa.isolateScope,
                    controller: Oa.controller,
                    injector: Oa.injector,
                    inheritedData: Oa.inheritedData
                }), a = Z.cleanData, Z.cleanData = function (b) {
                    for (var c, e = 0, f; null != (f = b[e]); e++)
                        (c = Z._data(f, 'events')) && c.$destroy && Z(f).triggerHandler('$destroy');
                    a(b);
                }) : B = U;
                ea.element = B;
                Ac = !0;
            }
        }
        function qb(a, b, d) {
            if (!a)
                throw Aa('areq', b || '?', d || 'required');
            return a;
        }
        function Pa(a, b, d) {
            d && K(a) && (a = a[a.length - 1]);
            qb(E(a), b, 'not a function, got ' + (a && 'object' === typeof a ? a.constructor.name || 'Object' : typeof a));
            return a;
        }
        function Qa(a, b) {
            if ('hasOwnProperty' === a)
                throw Aa('badname', b);
        }
        function Bc(a, b, d) {
            if (!b)
                return a;
            b = b.split('.');
            for (var c, e = a, f = b.length, g = 0; g < f; g++)
                c = b[g], a && (a = (e = a)[c]);
            return !d && E(a) ? tc(e, a) : a;
        }
        function rb(a) {
            for (var b = a[0], d = a[a.length - 1], c, e = 1; b !== d && (b = b.nextSibling); e++)
                if (c || a[e] !== b)
                    c || (c = B(za.call(a, 0, e))), c.push(b);
            return c || a;
        }
        function T() {
            return Object.create(null);
        }
        function je(a) {
            function b(a, b, c) {
                return a[b] || (a[b] = c());
            }
            var d = O('$injector'), c = O('ng');
            a = b(a, 'angular', Object);
            a.$$minErr = a.$$minErr || O;
            return b(a, 'module', function () {
                var a = {};
                return function (f, g, h) {
                    if ('hasOwnProperty' === f)
                        throw c('badname', 'module');
                    g && a.hasOwnProperty(f) && (a[f] = null);
                    return b(a, f, function () {
                        function a(b, d, e, f) {
                            f || (f = c);
                            return function () {
                                f[e || 'push']([
                                    b,
                                    d,
                                    arguments
                                ]);
                                return M;
                            };
                        }
                        function b(a, d) {
                            return function (b, e) {
                                e && E(e) && (e.$$moduleName = f);
                                c.push([
                                    a,
                                    d,
                                    arguments
                                ]);
                                return M;
                            };
                        }
                        if (!g)
                            throw d('nomod', f);
                        var c = [], e = [], r = [], N = a('$injector', 'invoke', 'push', e), M = {
                                _invokeQueue: c,
                                _configBlocks: e,
                                _runBlocks: r,
                                requires: g,
                                name: f,
                                provider: b('$provide', 'provider'),
                                factory: b('$provide', 'factory'),
                                service: b('$provide', 'service'),
                                value: a('$provide', 'value'),
                                constant: a('$provide', 'constant', 'unshift'),
                                decorator: b('$provide', 'decorator'),
                                animation: b('$animateProvider', 'register'),
                                filter: b('$filterProvider', 'register'),
                                controller: b('$controllerProvider', 'register'),
                                directive: b('$compileProvider', 'directive'),
                                component: b('$compileProvider', 'component'),
                                config: N,
                                run: function (a) {
                                    r.push(a);
                                    return this;
                                }
                            };
                        h && N(h);
                        return M;
                    });
                };
            });
        }
        function ke(a) {
            R(a, {
                bootstrap: yc,
                copy: qa,
                extend: R,
                merge: Yd,
                equals: pa,
                element: B,
                forEach: q,
                injector: bb,
                noop: C,
                bind: tc,
                toJson: ab,
                fromJson: uc,
                identity: Xa,
                isUndefined: y,
                isDefined: x,
                isString: F,
                isFunction: E,
                isObject: G,
                isNumber: Q,
                isElement: Ob,
                isArray: K,
                version: le,
                isDate: fa,
                lowercase: P,
                uppercase: sb,
                callbacks: { counter: 0 },
                getTestability: ge,
                $$minErr: O,
                $$csp: Ea,
                reloadWithDebugInfo: fe
            });
            Sb = je(v);
            Sb('ng', ['ngLocale'], [
                '$provide',
                function (a) {
                    a.provider({ $$sanitizeUri: me });
                    a.provider('$compile', Cc).directive({
                        a: ne,
                        input: Dc,
                        textarea: Dc,
                        form: oe,
                        script: pe,
                        select: qe,
                        style: re,
                        option: se,
                        ngBind: te,
                        ngBindHtml: ue,
                        ngBindTemplate: ve,
                        ngClass: we,
                        ngClassEven: xe,
                        ngClassOdd: ye,
                        ngCloak: ze,
                        ngController: Ae,
                        ngForm: Be,
                        ngHide: Ce,
                        ngIf: De,
                        ngInclude: Ee,
                        ngInit: Fe,
                        ngNonBindable: Ge,
                        ngPluralize: He,
                        ngRepeat: Ie,
                        ngShow: Je,
                        ngStyle: Ke,
                        ngSwitch: Le,
                        ngSwitchWhen: Me,
                        ngSwitchDefault: Ne,
                        ngOptions: Oe,
                        ngTransclude: Pe,
                        ngModel: Qe,
                        ngList: Re,
                        ngChange: Se,
                        pattern: Ec,
                        ngPattern: Ec,
                        required: Fc,
                        ngRequired: Fc,
                        minlength: Gc,
                        ngMinlength: Gc,
                        maxlength: Hc,
                        ngMaxlength: Hc,
                        ngValue: Te,
                        ngModelOptions: Ue
                    }).directive({ ngInclude: Ve }).directive(tb).directive(Ic);
                    a.provider({
                        $anchorScroll: We,
                        $animate: Xe,
                        $animateCss: Ye,
                        $$animateJs: Ze,
                        $$animateQueue: $e,
                        $$AnimateRunner: af,
                        $$animateAsyncRun: bf,
                        $browser: cf,
                        $cacheFactory: df,
                        $controller: ef,
                        $document: ff,
                        $exceptionHandler: gf,
                        $filter: Jc,
                        $$forceReflow: hf,
                        $interpolate: jf,
                        $interval: kf,
                        $http: lf,
                        $httpParamSerializer: mf,
                        $httpParamSerializerJQLike: nf,
                        $httpBackend: of,
                        $xhrFactory: pf,
                        $location: qf,
                        $log: rf,
                        $parse: sf,
                        $rootScope: tf,
                        $q: uf,
                        $$q: vf,
                        $sce: wf,
                        $sceDelegate: xf,
                        $sniffer: yf,
                        $templateCache: zf,
                        $templateRequest: Af,
                        $$testability: Bf,
                        $timeout: Cf,
                        $window: Df,
                        $$rAF: Ef,
                        $$jqLite: Ff,
                        $$HashMap: Gf,
                        $$cookieReader: Hf
                    });
                }
            ]);
        }
        function cb(a) {
            return a.replace(If, function (a, d, c, e) {
                return e ? c.toUpperCase() : c;
            }).replace(Jf, 'Moz$1');
        }
        function Kc(a) {
            a = a.nodeType;
            return 1 === a || !a || 9 === a;
        }
        function Lc(a, b) {
            var d, c, e = b.createDocumentFragment(), f = [];
            if (Tb.test(a)) {
                d = d || e.appendChild(b.createElement('div'));
                c = (Kf.exec(a) || [
                    '',
                    ''
                ])[1].toLowerCase();
                c = ia[c] || ia._default;
                d.innerHTML = c[1] + a.replace(Lf, '<$1></$2>') + c[2];
                for (c = c[0]; c--;)
                    d = d.lastChild;
                f = $a(f, d.childNodes);
                d = e.firstChild;
                d.textContent = '';
            } else
                f.push(b.createTextNode(a));
            e.textContent = '';
            e.innerHTML = '';
            q(f, function (a) {
                e.appendChild(a);
            });
            return e;
        }
        function Mc(a, b) {
            var d = a.parentNode;
            d && d.replaceChild(b, a);
            b.appendChild(a);
        }
        function U(a) {
            if (a instanceof U)
                return a;
            var b;
            F(a) && (a = V(a), b = !0);
            if (!(this instanceof U)) {
                if (b && '<' != a.charAt(0))
                    throw Ub('nosel');
                return new U(a);
            }
            if (b) {
                b = v.document;
                var d;
                a = (d = Mf.exec(a)) ? [b.createElement(d[1])] : (d = Lc(a, b)) ? d.childNodes : [];
            }
            Nc(this, a);
        }
        function Vb(a) {
            return a.cloneNode(!0);
        }
        function ub(a, b) {
            b || db(a);
            if (a.querySelectorAll)
                for (var d = a.querySelectorAll('*'), c = 0, e = d.length; c < e; c++)
                    db(d[c]);
        }
        function Oc(a, b, d, c) {
            if (x(c))
                throw Ub('offargs');
            var e = (c = vb(a)) && c.events, f = c && c.handle;
            if (f)
                if (b) {
                    var g = function (b) {
                        var c = e[b];
                        x(d) && Za(c || [], d);
                        x(d) && c && 0 < c.length || (a.removeEventListener(b, f, !1), delete e[b]);
                    };
                    q(b.split(' '), function (a) {
                        g(a);
                        wb[a] && g(wb[a]);
                    });
                } else
                    for (b in e)
                        '$destroy' !== b && a.removeEventListener(b, f, !1), delete e[b];
        }
        function db(a, b) {
            var d = a.ng339, c = d && eb[d];
            c && (b ? delete c.data[b] : (c.handle && (c.events.$destroy && c.handle({}, '$destroy'), Oc(a)), delete eb[d], a.ng339 = void 0));
        }
        function vb(a, b) {
            var d = a.ng339, d = d && eb[d];
            b && !d && (a.ng339 = d = ++Nf, d = eb[d] = {
                events: {},
                data: {},
                handle: void 0
            });
            return d;
        }
        function Wb(a, b, d) {
            if (Kc(a)) {
                var c = x(d), e = !c && b && !G(b), f = !b;
                a = (a = vb(a, !e)) && a.data;
                if (c)
                    a[b] = d;
                else {
                    if (f)
                        return a;
                    if (e)
                        return a && a[b];
                    R(a, b);
                }
            }
        }
        function xb(a, b) {
            return a.getAttribute ? -1 < (' ' + (a.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ').indexOf(' ' + b + ' ') : !1;
        }
        function yb(a, b) {
            b && a.setAttribute && q(b.split(' '), function (b) {
                a.setAttribute('class', V((' ' + (a.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ').replace(' ' + V(b) + ' ', ' ')));
            });
        }
        function zb(a, b) {
            if (b && a.setAttribute) {
                var d = (' ' + (a.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ');
                q(b.split(' '), function (a) {
                    a = V(a);
                    -1 === d.indexOf(' ' + a + ' ') && (d += a + ' ');
                });
                a.setAttribute('class', V(d));
            }
        }
        function Nc(a, b) {
            if (b)
                if (b.nodeType)
                    a[a.length++] = b;
                else {
                    var d = b.length;
                    if ('number' === typeof d && b.window !== b) {
                        if (d)
                            for (var c = 0; c < d; c++)
                                a[a.length++] = b[c];
                    } else
                        a[a.length++] = b;
                }
        }
        function Pc(a, b) {
            return Ab(a, '$' + (b || 'ngController') + 'Controller');
        }
        function Ab(a, b, d) {
            9 == a.nodeType && (a = a.documentElement);
            for (b = K(b) ? b : [b]; a;) {
                for (var c = 0, e = b.length; c < e; c++)
                    if (x(d = B.data(a, b[c])))
                        return d;
                a = a.parentNode || 11 === a.nodeType && a.host;
            }
        }
        function Qc(a) {
            for (ub(a, !0); a.firstChild;)
                a.removeChild(a.firstChild);
        }
        function Bb(a, b) {
            b || ub(a);
            var d = a.parentNode;
            d && d.removeChild(a);
        }
        function Of(a, b) {
            b = b || v;
            if ('complete' === b.document.readyState)
                b.setTimeout(a);
            else
                B(b).on('load', a);
        }
        function Rc(a, b) {
            var d = Cb[b.toLowerCase()];
            return d && Sc[va(a)] && d;
        }
        function Pf(a, b) {
            var d = function (c, d) {
                c.isDefaultPrevented = function () {
                    return c.defaultPrevented;
                };
                var f = b[d || c.type], g = f ? f.length : 0;
                if (g) {
                    if (y(c.immediatePropagationStopped)) {
                        var h = c.stopImmediatePropagation;
                        c.stopImmediatePropagation = function () {
                            c.immediatePropagationStopped = !0;
                            c.stopPropagation && c.stopPropagation();
                            h && h.call(c);
                        };
                    }
                    c.isImmediatePropagationStopped = function () {
                        return !0 === c.immediatePropagationStopped;
                    };
                    var k = f.specialHandlerWrapper || Qf;
                    1 < g && (f = ha(f));
                    for (var l = 0; l < g; l++)
                        c.isImmediatePropagationStopped() || k(a, c, f[l]);
                }
            };
            d.elem = a;
            return d;
        }
        function Qf(a, b, d) {
            d.call(a, b);
        }
        function Rf(a, b, d) {
            var c = b.relatedTarget;
            c && (c === a || Sf.call(a, c)) || d.call(a, b);
        }
        function Ff() {
            this.$get = function () {
                return R(U, {
                    hasClass: function (a, b) {
                        a.attr && (a = a[0]);
                        return xb(a, b);
                    },
                    addClass: function (a, b) {
                        a.attr && (a = a[0]);
                        return zb(a, b);
                    },
                    removeClass: function (a, b) {
                        a.attr && (a = a[0]);
                        return yb(a, b);
                    }
                });
            };
        }
        function Fa(a, b) {
            var d = a && a.$$hashKey;
            if (d)
                return 'function' === typeof d && (d = a.$$hashKey()), d;
            d = typeof a;
            return d = 'function' == d || 'object' == d && null !== a ? a.$$hashKey = d + ':' + (b || Xd)() : d + ':' + a;
        }
        function Ra(a, b) {
            if (b) {
                var d = 0;
                this.nextUid = function () {
                    return ++d;
                };
            }
            q(a, this.put, this);
        }
        function Tc(a) {
            a = Function.prototype.toString.call(a).replace(Tf, '');
            return a.match(Uf) || a.match(Vf);
        }
        function Wf(a) {
            return (a = Tc(a)) ? 'function(' + (a[1] || '').replace(/[\s\r\n]+/, ' ') + ')' : 'fn';
        }
        function bb(a, b) {
            function d(a) {
                return function (b, c) {
                    if (G(b))
                        q(b, qc(a));
                    else
                        return a(b, c);
                };
            }
            function c(a, b) {
                Qa(a, 'service');
                if (E(b) || K(b))
                    b = r.instantiate(b);
                if (!b.$get)
                    throw Ga('pget', a);
                return m[a + 'Provider'] = b;
            }
            function e(a, b) {
                return function () {
                    var c = w.invoke(b, this);
                    if (y(c))
                        throw Ga('undef', a);
                    return c;
                };
            }
            function f(a, b, d) {
                return c(a, { $get: !1 !== d ? e(a, b) : b });
            }
            function g(a) {
                qb(y(a) || K(a), 'modulesToLoad', 'not an array');
                var b = [], c;
                q(a, function (a) {
                    function d(a) {
                        var b, c;
                        b = 0;
                        for (c = a.length; b < c; b++) {
                            var e = a[b], f = r.get(e[0]);
                            f[e[1]].apply(f, e[2]);
                        }
                    }
                    if (!n.get(a)) {
                        n.put(a, !0);
                        try {
                            F(a) ? (c = Sb(a), b = b.concat(g(c.requires)).concat(c._runBlocks), d(c._invokeQueue), d(c._configBlocks)) : E(a) ? b.push(r.invoke(a)) : K(a) ? b.push(r.invoke(a)) : Pa(a, 'module');
                        } catch (e) {
                            throw K(a) && (a = a[a.length - 1]), e.message && e.stack && -1 == e.stack.indexOf(e.message) && (e = e.message + '\n' + e.stack), Ga('modulerr', a, e.stack || e.message || e);
                        }
                    }
                });
                return b;
            }
            function h(a, c) {
                function d(b, e) {
                    if (a.hasOwnProperty(b)) {
                        if (a[b] === k)
                            throw Ga('cdep', b + ' <- ' + l.join(' <- '));
                        return a[b];
                    }
                    try {
                        return l.unshift(b), a[b] = k, a[b] = c(b, e);
                    } catch (f) {
                        throw a[b] === k && delete a[b], f;
                    } finally {
                        l.shift();
                    }
                }
                function e(a, c, f) {
                    var g = [];
                    a = bb.$$annotate(a, b, f);
                    for (var h = 0, k = a.length; h < k; h++) {
                        var l = a[h];
                        if ('string' !== typeof l)
                            throw Ga('itkn', l);
                        g.push(c && c.hasOwnProperty(l) ? c[l] : d(l, f));
                    }
                    return g;
                }
                return {
                    invoke: function (a, b, c, d) {
                        'string' === typeof c && (d = c, c = null);
                        c = e(a, c, d);
                        K(a) && (a = a[a.length - 1]);
                        d = 11 >= Ca ? !1 : 'function' === typeof a && /^(?:class\s|constructor\()/.test(Function.prototype.toString.call(a));
                        return d ? (c.unshift(null), new (Function.prototype.bind.apply(a, c))()) : a.apply(b, c);
                    },
                    instantiate: function (a, b, c) {
                        var d = K(a) ? a[a.length - 1] : a;
                        a = e(a, b, c);
                        a.unshift(null);
                        return new (Function.prototype.bind.apply(d, a))();
                    },
                    get: d,
                    annotate: bb.$$annotate,
                    has: function (b) {
                        return m.hasOwnProperty(b + 'Provider') || a.hasOwnProperty(b);
                    }
                };
            }
            b = !0 === b;
            var k = {}, l = [], n = new Ra([], !0), m = {
                    $provide: {
                        provider: d(c),
                        factory: d(f),
                        service: d(function (a, b) {
                            return f(a, [
                                '$injector',
                                function (a) {
                                    return a.instantiate(b);
                                }
                            ]);
                        }),
                        value: d(function (a, b) {
                            return f(a, da(b), !1);
                        }),
                        constant: d(function (a, b) {
                            Qa(a, 'constant');
                            m[a] = b;
                            N[a] = b;
                        }),
                        decorator: function (a, b) {
                            var c = r.get(a + 'Provider'), d = c.$get;
                            c.$get = function () {
                                var a = w.invoke(d, c);
                                return w.invoke(b, null, { $delegate: a });
                            };
                        }
                    }
                }, r = m.$injector = h(m, function (a, b) {
                    ea.isString(b) && l.push(b);
                    throw Ga('unpr', l.join(' <- '));
                }), N = {}, M = h(N, function (a, b) {
                    var c = r.get(a + 'Provider', b);
                    return w.invoke(c.$get, c, void 0, a);
                }), w = M;
            m.$injectorProvider = { $get: da(M) };
            var p = g(a), w = M.get('$injector');
            w.strictDi = b;
            q(p, function (a) {
                a && w.invoke(a);
            });
            return w;
        }
        function We() {
            var a = !0;
            this.disableAutoScrolling = function () {
                a = !1;
            };
            this.$get = [
                '$window',
                '$location',
                '$rootScope',
                function (b, d, c) {
                    function e(a) {
                        var b = null;
                        Array.prototype.some.call(a, function (a) {
                            if ('a' === va(a))
                                return b = a, !0;
                        });
                        return b;
                    }
                    function f(a) {
                        if (a) {
                            a.scrollIntoView();
                            var c;
                            c = g.yOffset;
                            E(c) ? c = c() : Ob(c) ? (c = c[0], c = 'fixed' !== b.getComputedStyle(c).position ? 0 : c.getBoundingClientRect().bottom) : Q(c) || (c = 0);
                            c && (a = a.getBoundingClientRect().top, b.scrollBy(0, a - c));
                        } else
                            b.scrollTo(0, 0);
                    }
                    function g(a) {
                        a = F(a) ? a : d.hash();
                        var b;
                        a ? (b = h.getElementById(a)) ? f(b) : (b = e(h.getElementsByName(a))) ? f(b) : 'top' === a && f(null) : f(null);
                    }
                    var h = b.document;
                    a && c.$watch(function () {
                        return d.hash();
                    }, function (a, b) {
                        a === b && '' === a || Of(function () {
                            c.$evalAsync(g);
                        });
                    });
                    return g;
                }
            ];
        }
        function fb(a, b) {
            if (!a && !b)
                return '';
            if (!a)
                return b;
            if (!b)
                return a;
            K(a) && (a = a.join(' '));
            K(b) && (b = b.join(' '));
            return a + ' ' + b;
        }
        function Xf(a) {
            F(a) && (a = a.split(' '));
            var b = T();
            q(a, function (a) {
                a.length && (b[a] = !0);
            });
            return b;
        }
        function Ha(a) {
            return G(a) ? a : {};
        }
        function Yf(a, b, d, c) {
            function e(a) {
                try {
                    a.apply(null, za.call(arguments, 1));
                } finally {
                    if (M--, 0 === M)
                        for (; w.length;)
                            try {
                                w.pop()();
                            } catch (b) {
                                d.error(b);
                            }
                }
            }
            function f() {
                u = null;
                g();
                h();
            }
            function g() {
                p = I();
                p = y(p) ? null : p;
                pa(p, L) && (p = L);
                L = p;
            }
            function h() {
                if (t !== k.url() || H !== p)
                    t = k.url(), H = p, q(J, function (a) {
                        a(k.url(), p);
                    });
            }
            var k = this, l = a.location, n = a.history, m = a.setTimeout, r = a.clearTimeout, N = {};
            k.isMock = !1;
            var M = 0, w = [];
            k.$$completeOutstandingRequest = e;
            k.$$incOutstandingRequestCount = function () {
                M++;
            };
            k.notifyWhenNoOutstandingRequests = function (a) {
                0 === M ? a() : w.push(a);
            };
            var p, H, t = l.href, z = b.find('base'), u = null, I = c.history ? function () {
                    try {
                        return n.state;
                    } catch (a) {
                    }
                } : C;
            g();
            H = p;
            k.url = function (b, d, e) {
                y(e) && (e = null);
                l !== a.location && (l = a.location);
                n !== a.history && (n = a.history);
                if (b) {
                    var f = H === e;
                    if (t === b && (!c.history || f))
                        return k;
                    var h = t && Ia(t) === Ia(b);
                    t = b;
                    H = e;
                    if (!c.history || h && f) {
                        if (!h || u)
                            u = b;
                        d ? l.replace(b) : h ? (d = l, e = b.indexOf('#'), e = -1 === e ? '' : b.substr(e), d.hash = e) : l.href = b;
                        l.href !== b && (u = b);
                    } else
                        n[d ? 'replaceState' : 'pushState'](e, '', b), g(), H = p;
                    return k;
                }
                return u || l.href.replace(/%27/g, '\'');
            };
            k.state = function () {
                return p;
            };
            var J = [], D = !1, L = null;
            k.onUrlChange = function (b) {
                if (!D) {
                    if (c.history)
                        B(a).on('popstate', f);
                    B(a).on('hashchange', f);
                    D = !0;
                }
                J.push(b);
                return b;
            };
            k.$$applicationDestroyed = function () {
                B(a).off('hashchange popstate', f);
            };
            k.$$checkUrlChange = h;
            k.baseHref = function () {
                var a = z.attr('href');
                return a ? a.replace(/^(https?\:)?\/\/[^\/]*/, '') : '';
            };
            k.defer = function (a, b) {
                var c;
                M++;
                c = m(function () {
                    delete N[c];
                    e(a);
                }, b || 0);
                N[c] = !0;
                return c;
            };
            k.defer.cancel = function (a) {
                return N[a] ? (delete N[a], r(a), e(C), !0) : !1;
            };
        }
        function cf() {
            this.$get = [
                '$window',
                '$log',
                '$sniffer',
                '$document',
                function (a, b, d, c) {
                    return new Yf(a, c, b, d);
                }
            ];
        }
        function df() {
            this.$get = function () {
                function a(a, c) {
                    function e(a) {
                        a != m && (r ? r == a && (r = a.n) : r = a, f(a.n, a.p), f(a, m), m = a, m.n = null);
                    }
                    function f(a, b) {
                        a != b && (a && (a.p = b), b && (b.n = a));
                    }
                    if (a in b)
                        throw O('$cacheFactory')('iid', a);
                    var g = 0, h = R({}, c, { id: a }), k = T(), l = c && c.capacity || Number.MAX_VALUE, n = T(), m = null, r = null;
                    return b[a] = {
                        put: function (a, b) {
                            if (!y(b)) {
                                if (l < Number.MAX_VALUE) {
                                    var c = n[a] || (n[a] = { key: a });
                                    e(c);
                                }
                                a in k || g++;
                                k[a] = b;
                                g > l && this.remove(r.key);
                                return b;
                            }
                        },
                        get: function (a) {
                            if (l < Number.MAX_VALUE) {
                                var b = n[a];
                                if (!b)
                                    return;
                                e(b);
                            }
                            return k[a];
                        },
                        remove: function (a) {
                            if (l < Number.MAX_VALUE) {
                                var b = n[a];
                                if (!b)
                                    return;
                                b == m && (m = b.p);
                                b == r && (r = b.n);
                                f(b.n, b.p);
                                delete n[a];
                            }
                            a in k && (delete k[a], g--);
                        },
                        removeAll: function () {
                            k = T();
                            g = 0;
                            n = T();
                            m = r = null;
                        },
                        destroy: function () {
                            n = h = k = null;
                            delete b[a];
                        },
                        info: function () {
                            return R({}, h, { size: g });
                        }
                    };
                }
                var b = {};
                a.info = function () {
                    var a = {};
                    q(b, function (b, e) {
                        a[e] = b.info();
                    });
                    return a;
                };
                a.get = function (a) {
                    return b[a];
                };
                return a;
            };
        }
        function zf() {
            this.$get = [
                '$cacheFactory',
                function (a) {
                    return a('templates');
                }
            ];
        }
        function Cc(a, b) {
            function d(a, b, c) {
                var d = /^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/, e = T();
                q(a, function (a, f) {
                    if (a in n)
                        e[f] = n[a];
                    else {
                        var g = a.match(d);
                        if (!g)
                            throw ga('iscp', b, f, a, c ? 'controller bindings definition' : 'isolate scope definition');
                        e[f] = {
                            mode: g[1][0],
                            collection: '*' === g[2],
                            optional: '?' === g[3],
                            attrName: g[4] || f
                        };
                        g[4] && (n[a] = e[f]);
                    }
                });
                return e;
            }
            function c(a) {
                var b = a.charAt(0);
                if (!b || b !== P(b))
                    throw ga('baddir', a);
                if (a !== a.trim())
                    throw ga('baddir', a);
            }
            var e = {}, f = /^\s*directive\:\s*([\w\-]+)\s+(.*)$/, g = /(([\w\-]+)(?:\:([^;]+))?;?)/, h = ae('ngSrc,ngSrcset,src,srcset'), k = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/, l = /^(on[a-z]+|formaction)$/, n = T();
            this.directive = function M(b, d) {
                Qa(b, 'directive');
                F(b) ? (c(b), qb(d, 'directiveFactory'), e.hasOwnProperty(b) || (e[b] = [], a.factory(b + 'Directive', [
                    '$injector',
                    '$exceptionHandler',
                    function (a, c) {
                        var d = [];
                        q(e[b], function (e, f) {
                            try {
                                var g = a.invoke(e);
                                E(g) ? g = { compile: da(g) } : !g.compile && g.link && (g.compile = da(g.link));
                                g.priority = g.priority || 0;
                                g.index = f;
                                g.name = g.name || b;
                                g.require = g.require || g.controller && g.name;
                                g.restrict = g.restrict || 'EA';
                                g.$$moduleName = e.$$moduleName;
                                d.push(g);
                            } catch (h) {
                                c(h);
                            }
                        });
                        return d;
                    }
                ])), e[b].push(d)) : q(b, qc(M));
                return this;
            };
            this.component = function (a, b) {
                function c(a) {
                    function e(b) {
                        return E(b) || K(b) ? function (c, d) {
                            return a.invoke(b, this, {
                                $element: c,
                                $attrs: d
                            });
                        } : b;
                    }
                    var f = b.template || b.templateUrl ? b.template : '', g = {
                            controller: d,
                            controllerAs: Uc(b.controller) || b.controllerAs || '$ctrl',
                            template: e(f),
                            templateUrl: e(b.templateUrl),
                            transclude: b.transclude,
                            scope: {},
                            bindToController: b.bindings || {},
                            restrict: 'E',
                            require: b.require
                        };
                    q(b, function (a, b) {
                        '$' === b.charAt(0) && (g[b] = a);
                    });
                    return g;
                }
                var d = b.controller || function () {
                };
                q(b, function (a, b) {
                    '$' === b.charAt(0) && (c[b] = a, E(d) && (d[b] = a));
                });
                c.$inject = ['$injector'];
                return this.directive(a, c);
            };
            this.aHrefSanitizationWhitelist = function (a) {
                return x(a) ? (b.aHrefSanitizationWhitelist(a), this) : b.aHrefSanitizationWhitelist();
            };
            this.imgSrcSanitizationWhitelist = function (a) {
                return x(a) ? (b.imgSrcSanitizationWhitelist(a), this) : b.imgSrcSanitizationWhitelist();
            };
            var m = !0;
            this.debugInfoEnabled = function (a) {
                return x(a) ? (m = a, this) : m;
            };
            var r = 10;
            this.onChangesTtl = function (a) {
                return arguments.length ? (r = a, this) : r;
            };
            this.$get = [
                '$injector',
                '$interpolate',
                '$exceptionHandler',
                '$templateRequest',
                '$parse',
                '$controller',
                '$rootScope',
                '$sce',
                '$animate',
                '$$sanitizeUri',
                function (a, b, c, n, t, z, u, I, J, D) {
                    function L() {
                        try {
                            if (!--qa)
                                throw Z = void 0, ga('infchng', r);
                            u.$apply(function () {
                                for (var a = 0, b = Z.length; a < b; ++a)
                                    Z[a]();
                                Z = void 0;
                            });
                        } finally {
                            qa++;
                        }
                    }
                    function S(a, b) {
                        if (b) {
                            var c = Object.keys(b), d, e, f;
                            d = 0;
                            for (e = c.length; d < e; d++)
                                f = c[d], this[f] = b[f];
                        } else
                            this.$attr = {};
                        this.$$element = a;
                    }
                    function $(a, b, c) {
                        na.innerHTML = '<span ' + b + '>';
                        b = na.firstChild.attributes;
                        var d = b[0];
                        b.removeNamedItem(d.name);
                        d.value = c;
                        a.attributes.setNamedItem(d);
                    }
                    function A(a, b) {
                        try {
                            a.addClass(b);
                        } catch (c) {
                        }
                    }
                    function ba(a, b, c, d, e) {
                        a instanceof B || (a = B(a));
                        for (var f = /\S+/, g = 0, h = a.length; g < h; g++) {
                            var k = a[g];
                            k.nodeType === Ma && k.nodeValue.match(f) && Mc(k, a[g] = v.document.createElement('span'));
                        }
                        var l = s(a, b, a, c, d, e);
                        ba.$$addScopeClass(a);
                        var m = null;
                        return function (b, c, d) {
                            qb(b, 'scope');
                            e && e.needsNewScope && (b = b.$parent.$new());
                            d = d || {};
                            var f = d.parentBoundTranscludeFn, g = d.transcludeControllers;
                            d = d.futureParentElement;
                            f && f.$$boundTransclude && (f = f.$$boundTransclude);
                            m || (m = (d = d && d[0]) ? 'foreignobject' !== va(d) && ma.call(d).match(/SVG/) ? 'svg' : 'html' : 'html');
                            d = 'html' !== m ? B(ca(m, B('<div>').append(a).html())) : c ? Oa.clone.call(a) : a;
                            if (g)
                                for (var h in g)
                                    d.data('$' + h + 'Controller', g[h].instance);
                            ba.$$addScopeInfo(d, b);
                            c && c(d, b);
                            l && l(b, d, d, f);
                            return d;
                        };
                    }
                    function s(a, b, c, d, e, f) {
                        function g(a, c, d, e) {
                            var f, k, l, m, n, t, p;
                            if (r)
                                for (p = Array(c.length), m = 0; m < h.length; m += 3)
                                    f = h[m], p[f] = c[f];
                            else
                                p = c;
                            m = 0;
                            for (n = h.length; m < n;)
                                k = p[h[m++]], c = h[m++], f = h[m++], c ? (c.scope ? (l = a.$new(), ba.$$addScopeInfo(B(k), l)) : l = a, t = c.transcludeOnThisElement ? ka(a, c.transclude, e) : !c.templateOnThisElement && e ? e : !e && b ? ka(a, b) : null, c(f, l, k, d, t)) : f && f(a, k.childNodes, void 0, e);
                        }
                        for (var h = [], k, l, m, n, r, t = 0; t < a.length; t++) {
                            k = new S();
                            l = x(a[t], [], k, 0 === t ? d : void 0, e);
                            (f = l.length ? Ba(l, a[t], k, b, c, null, [], [], f) : null) && f.scope && ba.$$addScopeClass(k.$$element);
                            k = f && f.terminal || !(m = a[t].childNodes) || !m.length ? null : s(m, f ? (f.transcludeOnThisElement || !f.templateOnThisElement) && f.transclude : b);
                            if (f || k)
                                h.push(t, f, k), n = !0, r = r || f;
                            f = null;
                        }
                        return n ? g : null;
                    }
                    function ka(a, b, c) {
                        function d(e, f, g, h, k) {
                            e || (e = a.$new(!1, k), e.$$transcluded = !0);
                            return b(e, f, {
                                parentBoundTranscludeFn: c,
                                transcludeControllers: g,
                                futureParentElement: h
                            });
                        }
                        var e = d.$$slots = T(), f;
                        for (f in b.$$slots)
                            e[f] = b.$$slots[f] ? ka(a, b.$$slots[f], c) : null;
                        return d;
                    }
                    function x(a, b, c, d, e) {
                        var h = c.$attr, k;
                        switch (a.nodeType) {
                        case 1:
                            la(b, xa(va(a)), 'E', d, e);
                            for (var l, m, n, t = a.attributes, r = 0, p = t && t.length; r < p; r++) {
                                var I = !1, D = !1;
                                l = t[r];
                                k = l.name;
                                m = V(l.value);
                                l = xa(k);
                                if (n = ya.test(l))
                                    k = k.replace(Vc, '').substr(8).replace(/_(.)/g, function (a, b) {
                                        return b.toUpperCase();
                                    });
                                (l = l.match(Aa)) && Q(l[1]) && (I = k, D = k.substr(0, k.length - 5) + 'end', k = k.substr(0, k.length - 6));
                                l = xa(k.toLowerCase());
                                h[l] = k;
                                if (n || !c.hasOwnProperty(l))
                                    c[l] = m, Rc(a, l) && (c[l] = !0);
                                fa(a, b, m, l, n);
                                la(b, l, 'A', d, e, I, D);
                            }
                            a = a.className;
                            G(a) && (a = a.animVal);
                            if (F(a) && '' !== a)
                                for (; k = g.exec(a);)
                                    l = xa(k[2]), la(b, l, 'C', d, e) && (c[l] = V(k[3])), a = a.substr(k.index + k[0].length);
                            break;
                        case Ma:
                            if (11 === Ca)
                                for (; a.parentNode && a.nextSibling && a.nextSibling.nodeType === Ma;)
                                    a.nodeValue += a.nextSibling.nodeValue, a.parentNode.removeChild(a.nextSibling);
                            X(b, a.nodeValue);
                            break;
                        case 8:
                            try {
                                if (k = f.exec(a.nodeValue))
                                    l = xa(k[1]), la(b, l, 'M', d, e) && (c[l] = V(k[2]));
                            } catch (J) {
                            }
                        }
                        b.sort(Y);
                        return b;
                    }
                    function Wc(a, b, c) {
                        var d = [], e = 0;
                        if (b && a.hasAttribute && a.hasAttribute(b)) {
                            do {
                                if (!a)
                                    throw ga('uterdir', b, c);
                                1 == a.nodeType && (a.hasAttribute(b) && e++, a.hasAttribute(c) && e--);
                                d.push(a);
                                a = a.nextSibling;
                            } while (0 < e);
                        } else
                            d.push(a);
                        return B(d);
                    }
                    function Xc(a, b, c) {
                        return function (d, e, f, g, h) {
                            e = Wc(e[0], b, c);
                            return a(d, e, f, g, h);
                        };
                    }
                    function Yb(a, b, c, d, e, f) {
                        var g;
                        return a ? ba(b, c, d, e, f) : function () {
                            g || (g = ba(b, c, d, e, f), b = c = f = null);
                            return g.apply(this, arguments);
                        };
                    }
                    function Ba(a, b, d, e, f, g, h, k, l) {
                        function m(a, b, c, d) {
                            if (a) {
                                c && (a = Xc(a, c, d));
                                a.require = A.require;
                                a.directiveName = M;
                                if (D === A || A.$$isolateScope)
                                    a = ha(a, { isolateScope: !0 });
                                h.push(a);
                            }
                            if (b) {
                                c && (b = Xc(b, c, d));
                                b.require = A.require;
                                b.directiveName = M;
                                if (D === A || A.$$isolateScope)
                                    b = ha(b, { isolateScope: !0 });
                                k.push(b);
                            }
                        }
                        function n(a, c, e, f, g) {
                            function l(a, b, c, d) {
                                var e;
                                Ya(a) || (d = c, c = b, b = a, a = void 0);
                                H && (e = u);
                                c || (c = H ? z.parent() : z);
                                if (d) {
                                    var f = g.$$slots[d];
                                    if (f)
                                        return f(a, b, e, c, $);
                                    if (y(f))
                                        throw ga('noslot', d, wa(z));
                                } else
                                    return g(a, b, e, c, $);
                            }
                            var m, t, p, A, w, u, L, z;
                            b === e ? (f = d, z = d.$$element) : (z = B(e), f = new S(z, d));
                            w = c;
                            D ? A = c.$new(!0) : r && (w = c.$parent);
                            g && (L = l, L.$$boundTransclude = g, L.isSlotFilled = function (a) {
                                return !!g.$$slots[a];
                            });
                            I && (u = O(z, f, L, I, A, c, D));
                            D && (ba.$$addScopeInfo(z, A, !0, !(J && (J === D || J === D.$$originalDirective))), ba.$$addScopeClass(z, !0), A.$$isolateBindings = D.$$isolateBindings, t = ia(c, f, A, A.$$isolateBindings, D), t.removeWatches && A.$on('$destroy', t.removeWatches));
                            for (m in u) {
                                t = I[m];
                                p = u[m];
                                var Xb = t.$$bindings.bindToController;
                                p.bindingInfo = p.identifier && Xb ? ia(w, f, p.instance, Xb, t) : {};
                                var M = p();
                                M !== p.instance && (p.instance = M, z.data('$' + t.name + 'Controller', M), p.bindingInfo.removeWatches && p.bindingInfo.removeWatches(), p.bindingInfo = ia(w, f, p.instance, Xb, t));
                            }
                            q(I, function (a, b) {
                                var c = a.require;
                                a.bindToController && !K(c) && G(c) && R(u[b].instance, gb(b, c, z, u));
                            });
                            q(u, function (a) {
                                var b = a.instance;
                                E(b.$onChanges) && b.$onChanges(a.bindingInfo.initialChanges);
                                E(b.$onInit) && b.$onInit();
                                E(b.$onDestroy) && w.$on('$destroy', function () {
                                    b.$onDestroy();
                                });
                            });
                            m = 0;
                            for (t = h.length; m < t; m++)
                                p = h[m], ja(p, p.isolateScope ? A : c, z, f, p.require && gb(p.directiveName, p.require, z, u), L);
                            var $ = c;
                            D && (D.template || null === D.templateUrl) && ($ = A);
                            a && a($, e.childNodes, void 0, g);
                            for (m = k.length - 1; 0 <= m; m--)
                                p = k[m], ja(p, p.isolateScope ? A : c, z, f, p.require && gb(p.directiveName, p.require, z, u), L);
                            q(u, function (a) {
                                a = a.instance;
                                E(a.$postLink) && a.$postLink();
                            });
                        }
                        l = l || {};
                        for (var t = -Number.MAX_VALUE, r = l.newScopeDirective, I = l.controllerDirectives, D = l.newIsolateScopeDirective, J = l.templateDirective, w = l.nonTlbTranscludeDirective, u = !1, L = !1, H = l.hasElementTranscludeDirective, z = d.$$element = B(b), A, M, $, s = e, Sa, ka = !1, C = !1, v, F = 0, Ba = a.length; F < Ba; F++) {
                            A = a[F];
                            var P = A.$$start, Q = A.$$end;
                            P && (z = Wc(b, P, Q));
                            $ = void 0;
                            if (t > A.priority)
                                break;
                            if (v = A.scope)
                                A.templateUrl || (G(v) ? (W('new/isolated scope', D || r, A, z), D = A) : W('new/isolated scope', D, A, z)), r = r || A;
                            M = A.name;
                            if (!ka && (A.replace && (A.templateUrl || A.template) || A.transclude && !A.$$tlb)) {
                                for (v = F + 1; ka = a[v++];)
                                    if (ka.transclude && !ka.$$tlb || ka.replace && (ka.templateUrl || ka.template)) {
                                        C = !0;
                                        break;
                                    }
                                ka = !0;
                            }
                            !A.templateUrl && A.controller && (v = A.controller, I = I || T(), W('\'' + M + '\' controller', I[M], A, z), I[M] = A);
                            if (v = A.transclude)
                                if (u = !0, A.$$tlb || (W('transclusion', w, A, z), w = A), 'element' == v)
                                    H = !0, t = A.priority, $ = z, z = d.$$element = B(ba.$$createComment(M, d[M])), b = z[0], da(f, za.call($, 0), b), $[0].$$parentNode = $[0].parentNode, s = Yb(C, $, e, t, g && g.name, { nonTlbTranscludeDirective: w });
                                else {
                                    var la = T();
                                    $ = B(Vb(b)).contents();
                                    if (G(v)) {
                                        $ = [];
                                        var Y = T(), X = T();
                                        q(v, function (a, b) {
                                            var c = '?' === a.charAt(0);
                                            a = c ? a.substring(1) : a;
                                            Y[a] = b;
                                            la[b] = null;
                                            X[b] = c;
                                        });
                                        q(z.contents(), function (a) {
                                            var b = Y[xa(va(a))];
                                            b ? (X[b] = !0, la[b] = la[b] || [], la[b].push(a)) : $.push(a);
                                        });
                                        q(X, function (a, b) {
                                            if (!a)
                                                throw ga('reqslot', b);
                                        });
                                        for (var Z in la)
                                            la[Z] && (la[Z] = Yb(C, la[Z], e));
                                    }
                                    z.empty();
                                    s = Yb(C, $, e, void 0, void 0, { needsNewScope: A.$$isolateScope || A.$$newScope });
                                    s.$$slots = la;
                                }
                            if (A.template)
                                if (L = !0, W('template', J, A, z), J = A, v = E(A.template) ? A.template(z, d) : A.template, v = ta(v), A.replace) {
                                    g = A;
                                    $ = Tb.test(v) ? Yc(ca(A.templateNamespace, V(v))) : [];
                                    b = $[0];
                                    if (1 != $.length || 1 !== b.nodeType)
                                        throw ga('tplrt', M, '');
                                    da(f, z, b);
                                    Ba = { $attr: {} };
                                    v = x(b, [], Ba);
                                    var ea = a.splice(F + 1, a.length - (F + 1));
                                    (D || r) && Zc(v, D, r);
                                    a = a.concat(v).concat(ea);
                                    U(d, Ba);
                                    Ba = a.length;
                                } else
                                    z.html(v);
                            if (A.templateUrl)
                                L = !0, W('template', J, A, z), J = A, A.replace && (g = A), n = aa(a.splice(F, a.length - F), z, d, f, u && s, h, k, {
                                    controllerDirectives: I,
                                    newScopeDirective: r !== A && r,
                                    newIsolateScopeDirective: D,
                                    templateDirective: J,
                                    nonTlbTranscludeDirective: w
                                }), Ba = a.length;
                            else if (A.compile)
                                try {
                                    Sa = A.compile(z, d, s), E(Sa) ? m(null, Sa, P, Q) : Sa && m(Sa.pre, Sa.post, P, Q);
                                } catch (fa) {
                                    c(fa, wa(z));
                                }
                            A.terminal && (n.terminal = !0, t = Math.max(t, A.priority));
                        }
                        n.scope = r && !0 === r.scope;
                        n.transcludeOnThisElement = u;
                        n.templateOnThisElement = L;
                        n.transclude = s;
                        l.hasElementTranscludeDirective = H;
                        return n;
                    }
                    function gb(a, b, c, d) {
                        var e;
                        if (F(b)) {
                            var f = b.match(k);
                            b = b.substring(f[0].length);
                            var g = f[1] || f[3], f = '?' === f[2];
                            '^^' === g ? c = c.parent() : e = (e = d && d[b]) && e.instance;
                            if (!e) {
                                var h = '$' + b + 'Controller';
                                e = g ? c.inheritedData(h) : c.data(h);
                            }
                            if (!e && !f)
                                throw ga('ctreq', b, a);
                        } else if (K(b))
                            for (e = [], g = 0, f = b.length; g < f; g++)
                                e[g] = gb(a, b[g], c, d);
                        else
                            G(b) && (e = {}, q(b, function (b, f) {
                                e[f] = gb(a, b, c, d);
                            }));
                        return e || null;
                    }
                    function O(a, b, c, d, e, f, g) {
                        var h = T(), k;
                        for (k in d) {
                            var l = d[k], m = {
                                    $scope: l === g || l.$$isolateScope ? e : f,
                                    $element: a,
                                    $attrs: b,
                                    $transclude: c
                                }, n = l.controller;
                            '@' == n && (n = b[l.name]);
                            m = z(n, m, !0, l.controllerAs);
                            h[l.name] = m;
                            a.data('$' + l.name + 'Controller', m.instance);
                        }
                        return h;
                    }
                    function Zc(a, b, c) {
                        for (var d = 0, e = a.length; d < e; d++)
                            a[d] = Pb(a[d], {
                                $$isolateScope: b,
                                $$newScope: c
                            });
                    }
                    function la(b, f, g, h, k, l, m) {
                        if (f === k)
                            return null;
                        k = null;
                        if (e.hasOwnProperty(f)) {
                            var n;
                            f = a.get(f + 'Directive');
                            for (var t = 0, r = f.length; t < r; t++)
                                try {
                                    if (n = f[t], (y(h) || h > n.priority) && -1 != n.restrict.indexOf(g)) {
                                        l && (n = Pb(n, {
                                            $$start: l,
                                            $$end: m
                                        }));
                                        if (!n.$$bindings) {
                                            var I = n, D = n, A = n.name, J = {
                                                    isolateScope: null,
                                                    bindToController: null
                                                };
                                            G(D.scope) && (!0 === D.bindToController ? (J.bindToController = d(D.scope, A, !0), J.isolateScope = {}) : J.isolateScope = d(D.scope, A, !1));
                                            G(D.bindToController) && (J.bindToController = d(D.bindToController, A, !0));
                                            if (G(J.bindToController)) {
                                                var w = D.controller, z = D.controllerAs;
                                                if (!w)
                                                    throw ga('noctrl', A);
                                                if (!Uc(w, z))
                                                    throw ga('noident', A);
                                            }
                                            var u = I.$$bindings = J;
                                            G(u.isolateScope) && (n.$$isolateBindings = u.isolateScope);
                                        }
                                        b.push(n);
                                        k = n;
                                    }
                                } catch (L) {
                                    c(L);
                                }
                        }
                        return k;
                    }
                    function Q(b) {
                        if (e.hasOwnProperty(b))
                            for (var c = a.get(b + 'Directive'), d = 0, f = c.length; d < f; d++)
                                if (b = c[d], b.multiElement)
                                    return !0;
                        return !1;
                    }
                    function U(a, b) {
                        var c = b.$attr, d = a.$attr, e = a.$$element;
                        q(a, function (d, e) {
                            '$' != e.charAt(0) && (b[e] && b[e] !== d && (d += ('style' === e ? ';' : ' ') + b[e]), a.$set(e, d, !0, c[e]));
                        });
                        q(b, function (b, f) {
                            'class' == f ? (A(e, b), a['class'] = (a['class'] ? a['class'] + ' ' : '') + b) : 'style' == f ? (e.attr('style', e.attr('style') + ';' + b), a.style = (a.style ? a.style + ';' : '') + b) : '$' == f.charAt(0) || a.hasOwnProperty(f) || (a[f] = b, d[f] = c[f]);
                        });
                    }
                    function aa(a, b, c, d, e, f, g, h) {
                        var k = [], l, m, t = b[0], p = a.shift(), r = Pb(p, {
                                templateUrl: null,
                                transclude: null,
                                replace: null,
                                $$originalDirective: p
                            }), I = E(p.templateUrl) ? p.templateUrl(b, c) : p.templateUrl, D = p.templateNamespace;
                        b.empty();
                        n(I).then(function (n) {
                            var J, w;
                            n = ta(n);
                            if (p.replace) {
                                n = Tb.test(n) ? Yc(ca(D, V(n))) : [];
                                J = n[0];
                                if (1 != n.length || 1 !== J.nodeType)
                                    throw ga('tplrt', p.name, I);
                                n = { $attr: {} };
                                da(d, b, J);
                                var z = x(J, [], n);
                                G(p.scope) && Zc(z, !0);
                                a = z.concat(a);
                                U(c, n);
                            } else
                                J = t, b.html(n);
                            a.unshift(r);
                            l = Ba(a, J, c, e, b, p, f, g, h);
                            q(d, function (a, c) {
                                a == J && (d[c] = b[0]);
                            });
                            for (m = s(b[0].childNodes, e); k.length;) {
                                n = k.shift();
                                w = k.shift();
                                var u = k.shift(), L = k.shift(), z = b[0];
                                if (!n.$$destroyed) {
                                    if (w !== t) {
                                        var S = w.className;
                                        h.hasElementTranscludeDirective && p.replace || (z = Vb(J));
                                        da(u, B(w), z);
                                        A(B(z), S);
                                    }
                                    w = l.transcludeOnThisElement ? ka(n, l.transclude, L) : L;
                                    l(m, n, z, d, w);
                                }
                            }
                            k = null;
                        });
                        return function (a, b, c, d, e) {
                            a = e;
                            b.$$destroyed || (k ? k.push(b, c, d, a) : (l.transcludeOnThisElement && (a = ka(b, l.transclude, e)), l(m, b, c, d, a)));
                        };
                    }
                    function Y(a, b) {
                        var c = b.priority - a.priority;
                        return 0 !== c ? c : a.name !== b.name ? a.name < b.name ? -1 : 1 : a.index - b.index;
                    }
                    function W(a, b, c, d) {
                        function e(a) {
                            return a ? ' (module: ' + a + ')' : '';
                        }
                        if (b)
                            throw ga('multidir', b.name, e(b.$$moduleName), c.name, e(c.$$moduleName), a, wa(d));
                    }
                    function X(a, c) {
                        var d = b(c, !0);
                        d && a.push({
                            priority: 0,
                            compile: function (a) {
                                a = a.parent();
                                var b = !!a.length;
                                b && ba.$$addBindingClass(a);
                                return function (a, c) {
                                    var e = c.parent();
                                    b || ba.$$addBindingClass(e);
                                    ba.$$addBindingInfo(e, d.expressions);
                                    a.$watch(d, function (a) {
                                        c[0].nodeValue = a;
                                    });
                                };
                            }
                        });
                    }
                    function ca(a, b) {
                        a = P(a || 'html');
                        switch (a) {
                        case 'svg':
                        case 'math':
                            var c = v.document.createElement('div');
                            c.innerHTML = '<' + a + '>' + b + '</' + a + '>';
                            return c.childNodes[0].childNodes;
                        default:
                            return b;
                        }
                    }
                    function ea(a, b) {
                        if ('srcdoc' == b)
                            return I.HTML;
                        var c = va(a);
                        if ('xlinkHref' == b || 'form' == c && 'action' == b || 'img' != c && ('src' == b || 'ngSrc' == b))
                            return I.RESOURCE_URL;
                    }
                    function fa(a, c, d, e, f) {
                        var g = ea(a, e);
                        f = h[e] || f;
                        var k = b(d, !0, g, f);
                        if (k) {
                            if ('multiple' === e && 'select' === va(a))
                                throw ga('selmulti', wa(a));
                            c.push({
                                priority: 100,
                                compile: function () {
                                    return {
                                        pre: function (a, c, h) {
                                            c = h.$$observers || (h.$$observers = T());
                                            if (l.test(e))
                                                throw ga('nodomevents');
                                            var m = h[e];
                                            m !== d && (k = m && b(m, !0, g, f), d = m);
                                            k && (h[e] = k(a), (c[e] || (c[e] = [])).$$inter = !0, (h.$$observers && h.$$observers[e].$$scope || a).$watch(k, function (a, b) {
                                                'class' === e && a != b ? h.$updateClass(a, b) : h.$set(e, a);
                                            }));
                                        }
                                    };
                                }
                            });
                        }
                    }
                    function da(a, b, c) {
                        var d = b[0], e = b.length, f = d.parentNode, g, h;
                        if (a)
                            for (g = 0, h = a.length; g < h; g++)
                                if (a[g] == d) {
                                    a[g++] = c;
                                    h = g + e - 1;
                                    for (var k = a.length; g < k; g++, h++)
                                        h < k ? a[g] = a[h] : delete a[g];
                                    a.length -= e - 1;
                                    a.context === d && (a.context = c);
                                    break;
                                }
                        f && f.replaceChild(c, d);
                        a = v.document.createDocumentFragment();
                        for (g = 0; g < e; g++)
                            a.appendChild(b[g]);
                        B.hasData(d) && (B.data(c, B.data(d)), B(d).off('$destroy'));
                        B.cleanData(a.querySelectorAll('*'));
                        for (g = 1; g < e; g++)
                            delete b[g];
                        b[0] = c;
                        b.length = 1;
                    }
                    function ha(a, b) {
                        return R(function () {
                            return a.apply(null, arguments);
                        }, a, b);
                    }
                    function ja(a, b, d, e, f, g) {
                        try {
                            a(b, d, e, f, g);
                        } catch (h) {
                            c(h, wa(d));
                        }
                    }
                    function ia(a, c, d, e, f) {
                        function g(b, c, e) {
                            E(d.$onChanges) && c !== e && (Z || (a.$$postDigest(L), Z = []), m || (m = {}, Z.push(h)), m[b] && (e = m[b].previousValue), m[b] = new Db(e, c));
                        }
                        function h() {
                            d.$onChanges(m);
                            m = void 0;
                        }
                        var k = [], l = {}, m;
                        q(e, function (e, h) {
                            var m = e.attrName, n = e.optional, p, r, I, D;
                            switch (e.mode) {
                            case '@':
                                n || ua.call(c, m) || (d[h] = c[m] = void 0);
                                c.$observe(m, function (a) {
                                    if (F(a) || Da(a))
                                        g(h, a, d[h]), d[h] = a;
                                });
                                c.$$observers[m].$$scope = a;
                                p = c[m];
                                F(p) ? d[h] = b(p)(a) : Da(p) && (d[h] = p);
                                l[h] = new Db(Zb, d[h]);
                                break;
                            case '=':
                                if (!ua.call(c, m)) {
                                    if (n)
                                        break;
                                    c[m] = void 0;
                                }
                                if (n && !c[m])
                                    break;
                                r = t(c[m]);
                                D = r.literal ? pa : function (a, b) {
                                    return a === b || a !== a && b !== b;
                                };
                                I = r.assign || function () {
                                    p = d[h] = r(a);
                                    throw ga('nonassign', c[m], m, f.name);
                                };
                                p = d[h] = r(a);
                                n = function (b) {
                                    D(b, d[h]) || (D(b, p) ? I(a, b = d[h]) : d[h] = b);
                                    return p = b;
                                };
                                n.$stateful = !0;
                                n = e.collection ? a.$watchCollection(c[m], n) : a.$watch(t(c[m], n), null, r.literal);
                                k.push(n);
                                break;
                            case '<':
                                if (!ua.call(c, m)) {
                                    if (n)
                                        break;
                                    c[m] = void 0;
                                }
                                if (n && !c[m])
                                    break;
                                r = t(c[m]);
                                d[h] = r(a);
                                l[h] = new Db(Zb, d[h]);
                                n = a.$watch(r, function (a, b) {
                                    a === b && (b = d[h]);
                                    g(h, a, b);
                                    d[h] = a;
                                }, r.literal);
                                k.push(n);
                                break;
                            case '&':
                                r = c.hasOwnProperty(m) ? t(c[m]) : C;
                                if (r === C && n)
                                    break;
                                d[h] = function (b) {
                                    return r(a, b);
                                };
                            }
                        });
                        return {
                            initialChanges: l,
                            removeWatches: k.length && function () {
                                for (var a = 0, b = k.length; a < b; ++a)
                                    k[a]();
                            }
                        };
                    }
                    var oa = /^\w/, na = v.document.createElement('div'), qa = r, Z;
                    S.prototype = {
                        $normalize: xa,
                        $addClass: function (a) {
                            a && 0 < a.length && J.addClass(this.$$element, a);
                        },
                        $removeClass: function (a) {
                            a && 0 < a.length && J.removeClass(this.$$element, a);
                        },
                        $updateClass: function (a, b) {
                            var c = $c(a, b);
                            c && c.length && J.addClass(this.$$element, c);
                            (c = $c(b, a)) && c.length && J.removeClass(this.$$element, c);
                        },
                        $set: function (a, b, d, e) {
                            var f = Rc(this.$$element[0], a), g = ad[a], h = a;
                            f ? (this.$$element.prop(a, b), e = f) : g && (this[g] = b, h = g);
                            this[a] = b;
                            e ? this.$attr[a] = e : (e = this.$attr[a]) || (this.$attr[a] = e = zc(a, '-'));
                            f = va(this.$$element);
                            if ('a' === f && ('href' === a || 'xlinkHref' === a) || 'img' === f && 'src' === a)
                                this[a] = b = D(b, 'src' === a);
                            else if ('img' === f && 'srcset' === a) {
                                for (var f = '', g = V(b), k = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/, k = /\s/.test(g) ? k : /(,)/, g = g.split(k), k = Math.floor(g.length / 2), l = 0; l < k; l++)
                                    var m = 2 * l, f = f + D(V(g[m]), !0), f = f + (' ' + V(g[m + 1]));
                                g = V(g[2 * l]).split(/\s/);
                                f += D(V(g[0]), !0);
                                2 === g.length && (f += ' ' + V(g[1]));
                                this[a] = b = f;
                            }
                            !1 !== d && (null === b || y(b) ? this.$$element.removeAttr(e) : oa.test(e) ? this.$$element.attr(e, b) : $(this.$$element[0], e, b));
                            (a = this.$$observers) && q(a[h], function (a) {
                                try {
                                    a(b);
                                } catch (d) {
                                    c(d);
                                }
                            });
                        },
                        $observe: function (a, b) {
                            var c = this, d = c.$$observers || (c.$$observers = T()), e = d[a] || (d[a] = []);
                            e.push(b);
                            u.$evalAsync(function () {
                                e.$$inter || !c.hasOwnProperty(a) || y(c[a]) || b(c[a]);
                            });
                            return function () {
                                Za(e, b);
                            };
                        }
                    };
                    var ra = b.startSymbol(), sa = b.endSymbol(), ta = '{{' == ra && '}}' == sa ? Xa : function (a) {
                            return a.replace(/\{\{/g, ra).replace(/}}/g, sa);
                        }, ya = /^ngAttr[A-Z]/, Aa = /^(.+)Start$/;
                    ba.$$addBindingInfo = m ? function (a, b) {
                        var c = a.data('$binding') || [];
                        K(b) ? c = c.concat(b) : c.push(b);
                        a.data('$binding', c);
                    } : C;
                    ba.$$addBindingClass = m ? function (a) {
                        A(a, 'ng-binding');
                    } : C;
                    ba.$$addScopeInfo = m ? function (a, b, c, d) {
                        a.data(c ? d ? '$isolateScopeNoTemplate' : '$isolateScope' : '$scope', b);
                    } : C;
                    ba.$$addScopeClass = m ? function (a, b) {
                        A(a, b ? 'ng-isolate-scope' : 'ng-scope');
                    } : C;
                    ba.$$createComment = function (a, b) {
                        var c = '';
                        m && (c = ' ' + (a || '') + ': ' + (b || '') + ' ');
                        return v.document.createComment(c);
                    };
                    return ba;
                }
            ];
        }
        function Db(a, b) {
            this.previousValue = a;
            this.currentValue = b;
        }
        function xa(a) {
            return cb(a.replace(Vc, ''));
        }
        function $c(a, b) {
            var d = '', c = a.split(/\s+/), e = b.split(/\s+/), f = 0;
            a:
                for (; f < c.length; f++) {
                    for (var g = c[f], h = 0; h < e.length; h++)
                        if (g == e[h])
                            continue a;
                    d += (0 < d.length ? ' ' : '') + g;
                }
            return d;
        }
        function Yc(a) {
            a = B(a);
            var b = a.length;
            if (1 >= b)
                return a;
            for (; b--;)
                8 === a[b].nodeType && Zf.call(a, b, 1);
            return a;
        }
        function Uc(a, b) {
            if (b && F(b))
                return b;
            if (F(a)) {
                var d = bd.exec(a);
                if (d)
                    return d[3];
            }
        }
        function ef() {
            var a = {}, b = !1;
            this.has = function (b) {
                return a.hasOwnProperty(b);
            };
            this.register = function (b, c) {
                Qa(b, 'controller');
                G(b) ? R(a, b) : a[b] = c;
            };
            this.allowGlobals = function () {
                b = !0;
            };
            this.$get = [
                '$injector',
                '$window',
                function (d, c) {
                    function e(a, b, c, d) {
                        if (!a || !G(a.$scope))
                            throw O('$controller')('noscp', d, b);
                        a.$scope[b] = c;
                    }
                    return function (f, g, h, k) {
                        var l, n, m;
                        h = !0 === h;
                        k && F(k) && (m = k);
                        if (F(f)) {
                            k = f.match(bd);
                            if (!k)
                                throw $f('ctrlfmt', f);
                            n = k[1];
                            m = m || k[3];
                            f = a.hasOwnProperty(n) ? a[n] : Bc(g.$scope, n, !0) || (b ? Bc(c, n, !0) : void 0);
                            Pa(f, n, !0);
                        }
                        if (h)
                            return h = (K(f) ? f[f.length - 1] : f).prototype, l = Object.create(h || null), m && e(g, m, l, n || f.name), R(function () {
                                var a = d.invoke(f, l, g, n);
                                a !== l && (G(a) || E(a)) && (l = a, m && e(g, m, l, n || f.name));
                                return l;
                            }, {
                                instance: l,
                                identifier: m
                            });
                        l = d.instantiate(f, g, n);
                        m && e(g, m, l, n || f.name);
                        return l;
                    };
                }
            ];
        }
        function ff() {
            this.$get = [
                '$window',
                function (a) {
                    return B(a.document);
                }
            ];
        }
        function gf() {
            this.$get = [
                '$log',
                function (a) {
                    return function (b, d) {
                        a.error.apply(a, arguments);
                    };
                }
            ];
        }
        function $b(a) {
            return G(a) ? fa(a) ? a.toISOString() : ab(a) : a;
        }
        function mf() {
            this.$get = function () {
                return function (a) {
                    if (!a)
                        return '';
                    var b = [];
                    pc(a, function (a, c) {
                        null === a || y(a) || (K(a) ? q(a, function (a) {
                            b.push(ja(c) + '=' + ja($b(a)));
                        }) : b.push(ja(c) + '=' + ja($b(a))));
                    });
                    return b.join('&');
                };
            };
        }
        function nf() {
            this.$get = function () {
                return function (a) {
                    function b(a, e, f) {
                        null === a || y(a) || (K(a) ? q(a, function (a, c) {
                            b(a, e + '[' + (G(a) ? c : '') + ']');
                        }) : G(a) && !fa(a) ? pc(a, function (a, c) {
                            b(a, e + (f ? '' : '[') + c + (f ? '' : ']'));
                        }) : d.push(ja(e) + '=' + ja($b(a))));
                    }
                    if (!a)
                        return '';
                    var d = [];
                    b(a, '', !0);
                    return d.join('&');
                };
            };
        }
        function ac(a, b) {
            if (F(a)) {
                var d = a.replace(ag, '').trim();
                if (d) {
                    var c = b('Content-Type');
                    (c = c && 0 === c.indexOf(cd)) || (c = (c = d.match(bg)) && cg[c[0]].test(d));
                    c && (a = uc(d));
                }
            }
            return a;
        }
        function dd(a) {
            var b = T(), d;
            F(a) ? q(a.split('\n'), function (a) {
                d = a.indexOf(':');
                var e = P(V(a.substr(0, d)));
                a = V(a.substr(d + 1));
                e && (b[e] = b[e] ? b[e] + ', ' + a : a);
            }) : G(a) && q(a, function (a, d) {
                var f = P(d), g = V(a);
                f && (b[f] = b[f] ? b[f] + ', ' + g : g);
            });
            return b;
        }
        function ed(a) {
            var b;
            return function (d) {
                b || (b = dd(a));
                return d ? (d = b[P(d)], void 0 === d && (d = null), d) : b;
            };
        }
        function fd(a, b, d, c) {
            if (E(c))
                return c(a, b, d);
            q(c, function (c) {
                a = c(a, b, d);
            });
            return a;
        }
        function lf() {
            var a = this.defaults = {
                    transformResponse: [ac],
                    transformRequest: [function (a) {
                            return G(a) && '[object File]' !== ma.call(a) && '[object Blob]' !== ma.call(a) && '[object FormData]' !== ma.call(a) ? ab(a) : a;
                        }],
                    headers: {
                        common: { Accept: 'application/json, text/plain, */*' },
                        post: ha(bc),
                        put: ha(bc),
                        patch: ha(bc)
                    },
                    xsrfCookieName: 'XSRF-TOKEN',
                    xsrfHeaderName: 'X-XSRF-TOKEN',
                    paramSerializer: '$httpParamSerializer'
                }, b = !1;
            this.useApplyAsync = function (a) {
                return x(a) ? (b = !!a, this) : b;
            };
            var d = !0;
            this.useLegacyPromiseExtensions = function (a) {
                return x(a) ? (d = !!a, this) : d;
            };
            var c = this.interceptors = [];
            this.$get = [
                '$httpBackend',
                '$$cookieReader',
                '$cacheFactory',
                '$rootScope',
                '$q',
                '$injector',
                function (e, f, g, h, k, l) {
                    function n(b) {
                        function c(a) {
                            var b = R({}, a);
                            b.data = fd(a.data, a.headers, a.status, f.transformResponse);
                            a = a.status;
                            return 200 <= a && 300 > a ? b : k.reject(b);
                        }
                        function e(a, b) {
                            var c, d = {};
                            q(a, function (a, e) {
                                E(a) ? (c = a(b), null != c && (d[e] = c)) : d[e] = a;
                            });
                            return d;
                        }
                        if (!G(b))
                            throw O('$http')('badreq', b);
                        if (!F(b.url))
                            throw O('$http')('badreq', b.url);
                        var f = R({
                            method: 'get',
                            transformRequest: a.transformRequest,
                            transformResponse: a.transformResponse,
                            paramSerializer: a.paramSerializer
                        }, b);
                        f.headers = function (b) {
                            var c = a.headers, d = R({}, b.headers), f, g, h, c = R({}, c.common, c[P(b.method)]);
                            a:
                                for (f in c) {
                                    g = P(f);
                                    for (h in d)
                                        if (P(h) === g)
                                            continue a;
                                    d[f] = c[f];
                                }
                            return e(d, ha(b));
                        }(b);
                        f.method = sb(f.method);
                        f.paramSerializer = F(f.paramSerializer) ? l.get(f.paramSerializer) : f.paramSerializer;
                        var g = [
                                function (b) {
                                    var d = b.headers, e = fd(b.data, ed(d), void 0, b.transformRequest);
                                    y(e) && q(d, function (a, b) {
                                        'content-type' === P(b) && delete d[b];
                                    });
                                    y(b.withCredentials) && !y(a.withCredentials) && (b.withCredentials = a.withCredentials);
                                    return m(b, e).then(c, c);
                                },
                                void 0
                            ], h = k.when(f);
                        for (q(M, function (a) {
                                (a.request || a.requestError) && g.unshift(a.request, a.requestError);
                                (a.response || a.responseError) && g.push(a.response, a.responseError);
                            }); g.length;) {
                            b = g.shift();
                            var n = g.shift(), h = h.then(b, n);
                        }
                        d ? (h.success = function (a) {
                            Pa(a, 'fn');
                            h.then(function (b) {
                                a(b.data, b.status, b.headers, f);
                            });
                            return h;
                        }, h.error = function (a) {
                            Pa(a, 'fn');
                            h.then(null, function (b) {
                                a(b.data, b.status, b.headers, f);
                            });
                            return h;
                        }) : (h.success = gd('success'), h.error = gd('error'));
                        return h;
                    }
                    function m(c, d) {
                        function g(a) {
                            if (a) {
                                var c = {};
                                q(a, function (a, d) {
                                    c[d] = function (c) {
                                        function d() {
                                            a(c);
                                        }
                                        b ? h.$applyAsync(d) : h.$$phase ? d() : h.$apply(d);
                                    };
                                });
                                return c;
                            }
                        }
                        function l(a, c, d, e) {
                            function f() {
                                m(c, a, d, e);
                            }
                            L && (200 <= a && 300 > a ? L.put(A, [
                                a,
                                c,
                                dd(d),
                                e
                            ]) : L.remove(A));
                            b ? h.$applyAsync(f) : (f(), h.$$phase || h.$apply());
                        }
                        function m(a, b, d, e) {
                            b = -1 <= b ? b : 0;
                            (200 <= b && 300 > b ? J.resolve : J.reject)({
                                data: a,
                                status: b,
                                headers: ed(d),
                                config: c,
                                statusText: e
                            });
                        }
                        function u(a) {
                            m(a.data, a.status, ha(a.headers()), a.statusText);
                        }
                        function I() {
                            var a = n.pendingRequests.indexOf(c);
                            -1 !== a && n.pendingRequests.splice(a, 1);
                        }
                        var J = k.defer(), D = J.promise, L, S, M = c.headers, A = r(c.url, c.paramSerializer(c.params));
                        n.pendingRequests.push(c);
                        D.then(I, I);
                        !c.cache && !a.cache || !1 === c.cache || 'GET' !== c.method && 'JSONP' !== c.method || (L = G(c.cache) ? c.cache : G(a.cache) ? a.cache : N);
                        L && (S = L.get(A), x(S) ? S && E(S.then) ? S.then(u, u) : K(S) ? m(S[1], S[0], ha(S[2]), S[3]) : m(S, 200, {}, 'OK') : L.put(A, D));
                        y(S) && ((S = hd(c.url) ? f()[c.xsrfCookieName || a.xsrfCookieName] : void 0) && (M[c.xsrfHeaderName || a.xsrfHeaderName] = S), e(c.method, A, d, l, M, c.timeout, c.withCredentials, c.responseType, g(c.eventHandlers), g(c.uploadEventHandlers)));
                        return D;
                    }
                    function r(a, b) {
                        0 < b.length && (a += (-1 == a.indexOf('?') ? '?' : '&') + b);
                        return a;
                    }
                    var N = g('$http');
                    a.paramSerializer = F(a.paramSerializer) ? l.get(a.paramSerializer) : a.paramSerializer;
                    var M = [];
                    q(c, function (a) {
                        M.unshift(F(a) ? l.get(a) : l.invoke(a));
                    });
                    n.pendingRequests = [];
                    (function (a) {
                        q(arguments, function (a) {
                            n[a] = function (b, c) {
                                return n(R({}, c || {}, {
                                    method: a,
                                    url: b
                                }));
                            };
                        });
                    }('get', 'delete', 'head', 'jsonp'));
                    (function (a) {
                        q(arguments, function (a) {
                            n[a] = function (b, c, d) {
                                return n(R({}, d || {}, {
                                    method: a,
                                    url: b,
                                    data: c
                                }));
                            };
                        });
                    }('post', 'put', 'patch'));
                    n.defaults = a;
                    return n;
                }
            ];
        }
        function pf() {
            this.$get = function () {
                return function () {
                    return new v.XMLHttpRequest();
                };
            };
        }
        function of() {
            this.$get = [
                '$browser',
                '$window',
                '$document',
                '$xhrFactory',
                function (a, b, d, c) {
                    return dg(a, c, a.defer, b.angular.callbacks, d[0]);
                }
            ];
        }
        function dg(a, b, d, c, e) {
            function f(a, b, d) {
                var f = e.createElement('script'), n = null;
                f.type = 'text/javascript';
                f.src = a;
                f.async = !0;
                n = function (a) {
                    f.removeEventListener('load', n, !1);
                    f.removeEventListener('error', n, !1);
                    e.body.removeChild(f);
                    f = null;
                    var g = -1, N = 'unknown';
                    a && ('load' !== a.type || c[b].called || (a = { type: 'error' }), N = a.type, g = 'error' === a.type ? 404 : 200);
                    d && d(g, N);
                };
                f.addEventListener('load', n, !1);
                f.addEventListener('error', n, !1);
                e.body.appendChild(f);
                return n;
            }
            return function (e, h, k, l, n, m, r, N, M, w) {
                function p() {
                    z && z();
                    u && u.abort();
                }
                function H(b, c, e, f, g) {
                    x(J) && d.cancel(J);
                    z = u = null;
                    b(c, e, f, g);
                    a.$$completeOutstandingRequest(C);
                }
                a.$$incOutstandingRequestCount();
                h = h || a.url();
                if ('jsonp' == P(e)) {
                    var t = '_' + (c.counter++).toString(36);
                    c[t] = function (a) {
                        c[t].data = a;
                        c[t].called = !0;
                    };
                    var z = f(h.replace('JSON_CALLBACK', 'angular.callbacks.' + t), t, function (a, b) {
                        H(l, a, c[t].data, '', b);
                        c[t] = C;
                    });
                } else {
                    var u = b(e, h);
                    u.open(e, h, !0);
                    q(n, function (a, b) {
                        x(a) && u.setRequestHeader(b, a);
                    });
                    u.onload = function () {
                        var a = u.statusText || '', b = 'response' in u ? u.response : u.responseText, c = 1223 === u.status ? 204 : u.status;
                        0 === c && (c = b ? 200 : 'file' == ra(h).protocol ? 404 : 0);
                        H(l, c, b, u.getAllResponseHeaders(), a);
                    };
                    e = function () {
                        H(l, -1, null, null, '');
                    };
                    u.onerror = e;
                    u.onabort = e;
                    q(M, function (a, b) {
                        u.addEventListener(b, a);
                    });
                    q(w, function (a, b) {
                        u.upload.addEventListener(b, a);
                    });
                    r && (u.withCredentials = !0);
                    if (N)
                        try {
                            u.responseType = N;
                        } catch (I) {
                            if ('json' !== N)
                                throw I;
                        }
                    u.send(y(k) ? null : k);
                }
                if (0 < m)
                    var J = d(p, m);
                else
                    m && E(m.then) && m.then(p);
            };
        }
        function jf() {
            var a = '{{', b = '}}';
            this.startSymbol = function (b) {
                return b ? (a = b, this) : a;
            };
            this.endSymbol = function (a) {
                return a ? (b = a, this) : b;
            };
            this.$get = [
                '$parse',
                '$exceptionHandler',
                '$sce',
                function (d, c, e) {
                    function f(a) {
                        return '\\\\\\' + a;
                    }
                    function g(c) {
                        return c.replace(m, a).replace(r, b);
                    }
                    function h(a, b, c, d) {
                        var e;
                        return e = a.$watch(function (a) {
                            e();
                            return d(a);
                        }, b, c);
                    }
                    function k(f, k, m, r) {
                        function H(a) {
                            try {
                                var b = a;
                                a = m ? e.getTrusted(m, b) : e.valueOf(b);
                                var d;
                                if (r && !x(a))
                                    d = a;
                                else if (null == a)
                                    d = '';
                                else {
                                    switch (typeof a) {
                                    case 'string':
                                        break;
                                    case 'number':
                                        a = '' + a;
                                        break;
                                    default:
                                        a = ab(a);
                                    }
                                    d = a;
                                }
                                return d;
                            } catch (g) {
                                c(Ja.interr(f, g));
                            }
                        }
                        if (!f.length || -1 === f.indexOf(a)) {
                            var t;
                            k || (k = g(f), t = da(k), t.exp = f, t.expressions = [], t.$$watchDelegate = h);
                            return t;
                        }
                        r = !!r;
                        var z, u, I = 0, J = [], D = [];
                        t = f.length;
                        for (var L = [], S = []; I < t;)
                            if (-1 != (z = f.indexOf(a, I)) && -1 != (u = f.indexOf(b, z + l)))
                                I !== z && L.push(g(f.substring(I, z))), I = f.substring(z + l, u), J.push(I), D.push(d(I, H)), I = u + n, S.push(L.length), L.push('');
                            else {
                                I !== t && L.push(g(f.substring(I)));
                                break;
                            }
                        m && 1 < L.length && Ja.throwNoconcat(f);
                        if (!k || J.length) {
                            var q = function (a) {
                                for (var b = 0, c = J.length; b < c; b++) {
                                    if (r && y(a[b]))
                                        return;
                                    L[S[b]] = a[b];
                                }
                                return L.join('');
                            };
                            return R(function (a) {
                                var b = 0, d = J.length, e = Array(d);
                                try {
                                    for (; b < d; b++)
                                        e[b] = D[b](a);
                                    return q(e);
                                } catch (g) {
                                    c(Ja.interr(f, g));
                                }
                            }, {
                                exp: f,
                                expressions: J,
                                $$watchDelegate: function (a, b) {
                                    var c;
                                    return a.$watchGroup(D, function (d, e) {
                                        var f = q(d);
                                        E(b) && b.call(this, f, d !== e ? c : f, a);
                                        c = f;
                                    });
                                }
                            });
                        }
                    }
                    var l = a.length, n = b.length, m = new RegExp(a.replace(/./g, f), 'g'), r = new RegExp(b.replace(/./g, f), 'g');
                    k.startSymbol = function () {
                        return a;
                    };
                    k.endSymbol = function () {
                        return b;
                    };
                    return k;
                }
            ];
        }
        function kf() {
            this.$get = [
                '$rootScope',
                '$window',
                '$q',
                '$$q',
                '$browser',
                function (a, b, d, c, e) {
                    function f(f, k, l, n) {
                        function m() {
                            r ? f.apply(null, N) : f(p);
                        }
                        var r = 4 < arguments.length, N = r ? za.call(arguments, 4) : [], q = b.setInterval, w = b.clearInterval, p = 0, H = x(n) && !n, t = (H ? c : d).defer(), z = t.promise;
                        l = x(l) ? l : 0;
                        z.$$intervalId = q(function () {
                            H ? e.defer(m) : a.$evalAsync(m);
                            t.notify(p++);
                            0 < l && p >= l && (t.resolve(p), w(z.$$intervalId), delete g[z.$$intervalId]);
                            H || a.$apply();
                        }, k);
                        g[z.$$intervalId] = t;
                        return z;
                    }
                    var g = {};
                    f.cancel = function (a) {
                        return a && a.$$intervalId in g ? (g[a.$$intervalId].reject('canceled'), b.clearInterval(a.$$intervalId), delete g[a.$$intervalId], !0) : !1;
                    };
                    return f;
                }
            ];
        }
        function cc(a) {
            a = a.split('/');
            for (var b = a.length; b--;)
                a[b] = ob(a[b]);
            return a.join('/');
        }
        function id(a, b) {
            var d = ra(a);
            b.$$protocol = d.protocol;
            b.$$host = d.hostname;
            b.$$port = X(d.port) || eg[d.protocol] || null;
        }
        function jd(a, b) {
            var d = '/' !== a.charAt(0);
            d && (a = '/' + a);
            var c = ra(a);
            b.$$path = decodeURIComponent(d && '/' === c.pathname.charAt(0) ? c.pathname.substring(1) : c.pathname);
            b.$$search = xc(c.search);
            b.$$hash = decodeURIComponent(c.hash);
            b.$$path && '/' != b.$$path.charAt(0) && (b.$$path = '/' + b.$$path);
        }
        function na(a, b) {
            if (0 === b.indexOf(a))
                return b.substr(a.length);
        }
        function Ia(a) {
            var b = a.indexOf('#');
            return -1 == b ? a : a.substr(0, b);
        }
        function hb(a) {
            return a.replace(/(#.+)|#$/, '$1');
        }
        function dc(a, b, d) {
            this.$$html5 = !0;
            d = d || '';
            id(a, this);
            this.$$parse = function (a) {
                var d = na(b, a);
                if (!F(d))
                    throw Eb('ipthprfx', a, b);
                jd(d, this);
                this.$$path || (this.$$path = '/');
                this.$$compose();
            };
            this.$$compose = function () {
                var a = Rb(this.$$search), d = this.$$hash ? '#' + ob(this.$$hash) : '';
                this.$$url = cc(this.$$path) + (a ? '?' + a : '') + d;
                this.$$absUrl = b + this.$$url.substr(1);
            };
            this.$$parseLinkUrl = function (c, e) {
                if (e && '#' === e[0])
                    return this.hash(e.slice(1)), !0;
                var f, g;
                x(f = na(a, c)) ? (g = f, g = x(f = na(d, f)) ? b + (na('/', f) || f) : a + g) : x(f = na(b, c)) ? g = b + f : b == c + '/' && (g = b);
                g && this.$$parse(g);
                return !!g;
            };
        }
        function ec(a, b, d) {
            id(a, this);
            this.$$parse = function (c) {
                var e = na(a, c) || na(b, c), f;
                y(e) || '#' !== e.charAt(0) ? this.$$html5 ? f = e : (f = '', y(e) && (a = c, this.replace())) : (f = na(d, e), y(f) && (f = e));
                jd(f, this);
                c = this.$$path;
                var e = a, g = /^\/[A-Z]:(\/.*)/;
                0 === f.indexOf(e) && (f = f.replace(e, ''));
                g.exec(f) || (c = (f = g.exec(c)) ? f[1] : c);
                this.$$path = c;
                this.$$compose();
            };
            this.$$compose = function () {
                var b = Rb(this.$$search), e = this.$$hash ? '#' + ob(this.$$hash) : '';
                this.$$url = cc(this.$$path) + (b ? '?' + b : '') + e;
                this.$$absUrl = a + (this.$$url ? d + this.$$url : '');
            };
            this.$$parseLinkUrl = function (b, d) {
                return Ia(a) == Ia(b) ? (this.$$parse(b), !0) : !1;
            };
        }
        function kd(a, b, d) {
            this.$$html5 = !0;
            ec.apply(this, arguments);
            this.$$parseLinkUrl = function (c, e) {
                if (e && '#' === e[0])
                    return this.hash(e.slice(1)), !0;
                var f, g;
                a == Ia(c) ? f = c : (g = na(b, c)) ? f = a + d + g : b === c + '/' && (f = b);
                f && this.$$parse(f);
                return !!f;
            };
            this.$$compose = function () {
                var b = Rb(this.$$search), e = this.$$hash ? '#' + ob(this.$$hash) : '';
                this.$$url = cc(this.$$path) + (b ? '?' + b : '') + e;
                this.$$absUrl = a + d + this.$$url;
            };
        }
        function Fb(a) {
            return function () {
                return this[a];
            };
        }
        function ld(a, b) {
            return function (d) {
                if (y(d))
                    return this[a];
                this[a] = b(d);
                this.$$compose();
                return this;
            };
        }
        function qf() {
            var a = '', b = {
                    enabled: !1,
                    requireBase: !0,
                    rewriteLinks: !0
                };
            this.hashPrefix = function (b) {
                return x(b) ? (a = b, this) : a;
            };
            this.html5Mode = function (a) {
                return Da(a) ? (b.enabled = a, this) : G(a) ? (Da(a.enabled) && (b.enabled = a.enabled), Da(a.requireBase) && (b.requireBase = a.requireBase), Da(a.rewriteLinks) && (b.rewriteLinks = a.rewriteLinks), this) : b;
            };
            this.$get = [
                '$rootScope',
                '$browser',
                '$sniffer',
                '$rootElement',
                '$window',
                function (d, c, e, f, g) {
                    function h(a, b, d) {
                        var e = l.url(), f = l.$$state;
                        try {
                            c.url(a, b, d), l.$$state = c.state();
                        } catch (g) {
                            throw l.url(e), l.$$state = f, g;
                        }
                    }
                    function k(a, b) {
                        d.$broadcast('$locationChangeSuccess', l.absUrl(), a, l.$$state, b);
                    }
                    var l, n;
                    n = c.baseHref();
                    var m = c.url(), r;
                    if (b.enabled) {
                        if (!n && b.requireBase)
                            throw Eb('nobase');
                        r = m.substring(0, m.indexOf('/', m.indexOf('//') + 2)) + (n || '/');
                        n = e.history ? dc : kd;
                    } else
                        r = Ia(m), n = ec;
                    var N = r.substr(0, Ia(r).lastIndexOf('/') + 1);
                    l = new n(r, N, '#' + a);
                    l.$$parseLinkUrl(m, m);
                    l.$$state = c.state();
                    var q = /^\s*(javascript|mailto):/i;
                    f.on('click', function (a) {
                        if (b.rewriteLinks && !a.ctrlKey && !a.metaKey && !a.shiftKey && 2 != a.which && 2 != a.button) {
                            for (var e = B(a.target); 'a' !== va(e[0]);)
                                if (e[0] === f[0] || !(e = e.parent())[0])
                                    return;
                            var h = e.prop('href'), k = e.attr('href') || e.attr('xlink:href');
                            G(h) && '[object SVGAnimatedString]' === h.toString() && (h = ra(h.animVal).href);
                            q.test(h) || !h || e.attr('target') || a.isDefaultPrevented() || !l.$$parseLinkUrl(h, k) || (a.preventDefault(), l.absUrl() != c.url() && (d.$apply(), g.angular['ff-684208-preventDefault'] = !0));
                        }
                    });
                    hb(l.absUrl()) != hb(m) && c.url(l.absUrl(), !0);
                    var w = !0;
                    c.onUrlChange(function (a, b) {
                        y(na(N, a)) ? g.location.href = a : (d.$evalAsync(function () {
                            var c = l.absUrl(), e = l.$$state, f;
                            a = hb(a);
                            l.$$parse(a);
                            l.$$state = b;
                            f = d.$broadcast('$locationChangeStart', a, c, b, e).defaultPrevented;
                            l.absUrl() === a && (f ? (l.$$parse(c), l.$$state = e, h(c, !1, e)) : (w = !1, k(c, e)));
                        }), d.$$phase || d.$digest());
                    });
                    d.$watch(function () {
                        var a = hb(c.url()), b = hb(l.absUrl()), f = c.state(), g = l.$$replace, m = a !== b || l.$$html5 && e.history && f !== l.$$state;
                        if (w || m)
                            w = !1, d.$evalAsync(function () {
                                var b = l.absUrl(), c = d.$broadcast('$locationChangeStart', b, a, l.$$state, f).defaultPrevented;
                                l.absUrl() === b && (c ? (l.$$parse(a), l.$$state = f) : (m && h(b, g, f === l.$$state ? null : l.$$state), k(a, f)));
                            });
                        l.$$replace = !1;
                    });
                    return l;
                }
            ];
        }
        function rf() {
            var a = !0, b = this;
            this.debugEnabled = function (b) {
                return x(b) ? (a = b, this) : a;
            };
            this.$get = [
                '$window',
                function (d) {
                    function c(a) {
                        a instanceof Error && (a.stack ? a = a.message && -1 === a.stack.indexOf(a.message) ? 'Error: ' + a.message + '\n' + a.stack : a.stack : a.sourceURL && (a = a.message + '\n' + a.sourceURL + ':' + a.line));
                        return a;
                    }
                    function e(a) {
                        var b = d.console || {}, e = b[a] || b.log || C;
                        a = !1;
                        try {
                            a = !!e.apply;
                        } catch (k) {
                        }
                        return a ? function () {
                            var a = [];
                            q(arguments, function (b) {
                                a.push(c(b));
                            });
                            return e.apply(b, a);
                        } : function (a, b) {
                            e(a, null == b ? '' : b);
                        };
                    }
                    return {
                        log: e('log'),
                        info: e('info'),
                        warn: e('warn'),
                        error: e('error'),
                        debug: function () {
                            var c = e('debug');
                            return function () {
                                a && c.apply(b, arguments);
                            };
                        }()
                    };
                }
            ];
        }
        function Ta(a, b) {
            if ('__defineGetter__' === a || '__defineSetter__' === a || '__lookupGetter__' === a || '__lookupSetter__' === a || '__proto__' === a)
                throw ca('isecfld', b);
            return a;
        }
        function fg(a) {
            return a + '';
        }
        function sa(a, b) {
            if (a) {
                if (a.constructor === a)
                    throw ca('isecfn', b);
                if (a.window === a)
                    throw ca('isecwindow', b);
                if (a.children && (a.nodeName || a.prop && a.attr && a.find))
                    throw ca('isecdom', b);
                if (a === Object)
                    throw ca('isecobj', b);
            }
            return a;
        }
        function md(a, b) {
            if (a) {
                if (a.constructor === a)
                    throw ca('isecfn', b);
                if (a === gg || a === hg || a === ig)
                    throw ca('isecff', b);
            }
        }
        function Gb(a, b) {
            if (a && (a === 0..constructor || a === (!1).constructor || a === ''.constructor || a === {}.constructor || a === [].constructor || a === Function.constructor))
                throw ca('isecaf', b);
        }
        function jg(a, b) {
            return 'undefined' !== typeof a ? a : b;
        }
        function nd(a, b) {
            return 'undefined' === typeof a ? b : 'undefined' === typeof b ? a : a + b;
        }
        function aa(a, b) {
            var d, c;
            switch (a.type) {
            case s.Program:
                d = !0;
                q(a.body, function (a) {
                    aa(a.expression, b);
                    d = d && a.expression.constant;
                });
                a.constant = d;
                break;
            case s.Literal:
                a.constant = !0;
                a.toWatch = [];
                break;
            case s.UnaryExpression:
                aa(a.argument, b);
                a.constant = a.argument.constant;
                a.toWatch = a.argument.toWatch;
                break;
            case s.BinaryExpression:
                aa(a.left, b);
                aa(a.right, b);
                a.constant = a.left.constant && a.right.constant;
                a.toWatch = a.left.toWatch.concat(a.right.toWatch);
                break;
            case s.LogicalExpression:
                aa(a.left, b);
                aa(a.right, b);
                a.constant = a.left.constant && a.right.constant;
                a.toWatch = a.constant ? [] : [a];
                break;
            case s.ConditionalExpression:
                aa(a.test, b);
                aa(a.alternate, b);
                aa(a.consequent, b);
                a.constant = a.test.constant && a.alternate.constant && a.consequent.constant;
                a.toWatch = a.constant ? [] : [a];
                break;
            case s.Identifier:
                a.constant = !1;
                a.toWatch = [a];
                break;
            case s.MemberExpression:
                aa(a.object, b);
                a.computed && aa(a.property, b);
                a.constant = a.object.constant && (!a.computed || a.property.constant);
                a.toWatch = [a];
                break;
            case s.CallExpression:
                d = a.filter ? !b(a.callee.name).$stateful : !1;
                c = [];
                q(a.arguments, function (a) {
                    aa(a, b);
                    d = d && a.constant;
                    a.constant || c.push.apply(c, a.toWatch);
                });
                a.constant = d;
                a.toWatch = a.filter && !b(a.callee.name).$stateful ? c : [a];
                break;
            case s.AssignmentExpression:
                aa(a.left, b);
                aa(a.right, b);
                a.constant = a.left.constant && a.right.constant;
                a.toWatch = [a];
                break;
            case s.ArrayExpression:
                d = !0;
                c = [];
                q(a.elements, function (a) {
                    aa(a, b);
                    d = d && a.constant;
                    a.constant || c.push.apply(c, a.toWatch);
                });
                a.constant = d;
                a.toWatch = c;
                break;
            case s.ObjectExpression:
                d = !0;
                c = [];
                q(a.properties, function (a) {
                    aa(a.value, b);
                    d = d && a.value.constant;
                    a.value.constant || c.push.apply(c, a.value.toWatch);
                });
                a.constant = d;
                a.toWatch = c;
                break;
            case s.ThisExpression:
                a.constant = !1;
                a.toWatch = [];
                break;
            case s.LocalsExpression:
                a.constant = !1, a.toWatch = [];
            }
        }
        function od(a) {
            if (1 == a.length) {
                a = a[0].expression;
                var b = a.toWatch;
                return 1 !== b.length ? b : b[0] !== a ? b : void 0;
            }
        }
        function pd(a) {
            return a.type === s.Identifier || a.type === s.MemberExpression;
        }
        function qd(a) {
            if (1 === a.body.length && pd(a.body[0].expression))
                return {
                    type: s.AssignmentExpression,
                    left: a.body[0].expression,
                    right: { type: s.NGValueParameter },
                    operator: '='
                };
        }
        function rd(a) {
            return 0 === a.body.length || 1 === a.body.length && (a.body[0].expression.type === s.Literal || a.body[0].expression.type === s.ArrayExpression || a.body[0].expression.type === s.ObjectExpression);
        }
        function sd(a, b) {
            this.astBuilder = a;
            this.$filter = b;
        }
        function td(a, b) {
            this.astBuilder = a;
            this.$filter = b;
        }
        function Hb(a) {
            return 'constructor' == a;
        }
        function fc(a) {
            return E(a.valueOf) ? a.valueOf() : kg.call(a);
        }
        function sf() {
            var a = T(), b = T(), d = {
                    'true': !0,
                    'false': !1,
                    'null': null,
                    undefined: void 0
                }, c, e;
            this.addLiteral = function (a, b) {
                d[a] = b;
            };
            this.setIdentifierFns = function (a, b) {
                c = a;
                e = b;
                return this;
            };
            this.$get = [
                '$filter',
                function (f) {
                    function g(c, d, e) {
                        var g, k, D;
                        e = e || H;
                        switch (typeof c) {
                        case 'string':
                            D = c = c.trim();
                            var q = e ? b : a;
                            g = q[D];
                            if (!g) {
                                ':' === c.charAt(0) && ':' === c.charAt(1) && (k = !0, c = c.substring(2));
                                g = e ? p : w;
                                var S = new gc(g);
                                g = new hc(S, f, g).parse(c);
                                g.constant ? g.$$watchDelegate = r : k ? g.$$watchDelegate = g.literal ? m : n : g.inputs && (g.$$watchDelegate = l);
                                e && (g = h(g));
                                q[D] = g;
                            }
                            return N(g, d);
                        case 'function':
                            return N(c, d);
                        default:
                            return N(C, d);
                        }
                    }
                    function h(a) {
                        function b(c, d, e, f) {
                            var g = H;
                            H = !0;
                            try {
                                return a(c, d, e, f);
                            } finally {
                                H = g;
                            }
                        }
                        if (!a)
                            return a;
                        b.$$watchDelegate = a.$$watchDelegate;
                        b.assign = h(a.assign);
                        b.constant = a.constant;
                        b.literal = a.literal;
                        for (var c = 0; a.inputs && c < a.inputs.length; ++c)
                            a.inputs[c] = h(a.inputs[c]);
                        b.inputs = a.inputs;
                        return b;
                    }
                    function k(a, b) {
                        return null == a || null == b ? a === b : 'object' === typeof a && (a = fc(a), 'object' === typeof a) ? !1 : a === b || a !== a && b !== b;
                    }
                    function l(a, b, c, d, e) {
                        var f = d.inputs, g;
                        if (1 === f.length) {
                            var h = k, f = f[0];
                            return a.$watch(function (a) {
                                var b = f(a);
                                k(b, h) || (g = d(a, void 0, void 0, [b]), h = b && fc(b));
                                return g;
                            }, b, c, e);
                        }
                        for (var l = [], m = [], n = 0, r = f.length; n < r; n++)
                            l[n] = k, m[n] = null;
                        return a.$watch(function (a) {
                            for (var b = !1, c = 0, e = f.length; c < e; c++) {
                                var h = f[c](a);
                                if (b || (b = !k(h, l[c])))
                                    m[c] = h, l[c] = h && fc(h);
                            }
                            b && (g = d(a, void 0, void 0, m));
                            return g;
                        }, b, c, e);
                    }
                    function n(a, b, c, d) {
                        var e, f;
                        return e = a.$watch(function (a) {
                            return d(a);
                        }, function (a, c, d) {
                            f = a;
                            E(b) && b.apply(this, arguments);
                            x(a) && d.$$postDigest(function () {
                                x(f) && e();
                            });
                        }, c);
                    }
                    function m(a, b, c, d) {
                        function e(a) {
                            var b = !0;
                            q(a, function (a) {
                                x(a) || (b = !1);
                            });
                            return b;
                        }
                        var f, g;
                        return f = a.$watch(function (a) {
                            return d(a);
                        }, function (a, c, d) {
                            g = a;
                            E(b) && b.call(this, a, c, d);
                            e(a) && d.$$postDigest(function () {
                                e(g) && f();
                            });
                        }, c);
                    }
                    function r(a, b, c, d) {
                        var e;
                        return e = a.$watch(function (a) {
                            e();
                            return d(a);
                        }, b, c);
                    }
                    function N(a, b) {
                        if (!b)
                            return a;
                        var c = a.$$watchDelegate, d = !1, c = c !== m && c !== n ? function (c, e, f, g) {
                                f = d && g ? g[0] : a(c, e, f, g);
                                return b(f, c, e);
                            } : function (c, d, e, f) {
                                e = a(c, d, e, f);
                                c = b(e, c, d);
                                return x(e) ? c : e;
                            };
                        a.$$watchDelegate && a.$$watchDelegate !== l ? c.$$watchDelegate = a.$$watchDelegate : b.$stateful || (c.$$watchDelegate = l, d = !a.inputs, c.inputs = a.inputs ? a.inputs : [a]);
                        return c;
                    }
                    var M = Ea().noUnsafeEval, w = {
                            csp: M,
                            expensiveChecks: !1,
                            literals: qa(d),
                            isIdentifierStart: E(c) && c,
                            isIdentifierContinue: E(e) && e
                        }, p = {
                            csp: M,
                            expensiveChecks: !0,
                            literals: qa(d),
                            isIdentifierStart: E(c) && c,
                            isIdentifierContinue: E(e) && e
                        }, H = !1;
                    g.$$runningExpensiveChecks = function () {
                        return H;
                    };
                    return g;
                }
            ];
        }
        function uf() {
            this.$get = [
                '$rootScope',
                '$exceptionHandler',
                function (a, b) {
                    return ud(function (b) {
                        a.$evalAsync(b);
                    }, b);
                }
            ];
        }
        function vf() {
            this.$get = [
                '$browser',
                '$exceptionHandler',
                function (a, b) {
                    return ud(function (b) {
                        a.defer(b);
                    }, b);
                }
            ];
        }
        function ud(a, b) {
            function d() {
                this.$$state = { status: 0 };
            }
            function c(a, b) {
                return function (c) {
                    b.call(a, c);
                };
            }
            function e(c) {
                !c.processScheduled && c.pending && (c.processScheduled = !0, a(function () {
                    var a, d, e;
                    e = c.pending;
                    c.processScheduled = !1;
                    c.pending = void 0;
                    for (var f = 0, g = e.length; f < g; ++f) {
                        d = e[f][0];
                        a = e[f][c.status];
                        try {
                            E(a) ? d.resolve(a(c.value)) : 1 === c.status ? d.resolve(c.value) : d.reject(c.value);
                        } catch (h) {
                            d.reject(h), b(h);
                        }
                    }
                }));
            }
            function f() {
                this.promise = new d();
            }
            var g = O('$q', TypeError);
            R(d.prototype, {
                then: function (a, b, c) {
                    if (y(a) && y(b) && y(c))
                        return this;
                    var d = new f();
                    this.$$state.pending = this.$$state.pending || [];
                    this.$$state.pending.push([
                        d,
                        a,
                        b,
                        c
                    ]);
                    0 < this.$$state.status && e(this.$$state);
                    return d.promise;
                },
                'catch': function (a) {
                    return this.then(null, a);
                },
                'finally': function (a, b) {
                    return this.then(function (b) {
                        return k(b, !0, a);
                    }, function (b) {
                        return k(b, !1, a);
                    }, b);
                }
            });
            R(f.prototype, {
                resolve: function (a) {
                    this.promise.$$state.status || (a === this.promise ? this.$$reject(g('qcycle', a)) : this.$$resolve(a));
                },
                $$resolve: function (a) {
                    function d(a) {
                        k || (k = !0, h.$$resolve(a));
                    }
                    function f(a) {
                        k || (k = !0, h.$$reject(a));
                    }
                    var g, h = this, k = !1;
                    try {
                        if (G(a) || E(a))
                            g = a && a.then;
                        E(g) ? (this.promise.$$state.status = -1, g.call(a, d, f, c(this, this.notify))) : (this.promise.$$state.value = a, this.promise.$$state.status = 1, e(this.promise.$$state));
                    } catch (l) {
                        f(l), b(l);
                    }
                },
                reject: function (a) {
                    this.promise.$$state.status || this.$$reject(a);
                },
                $$reject: function (a) {
                    this.promise.$$state.value = a;
                    this.promise.$$state.status = 2;
                    e(this.promise.$$state);
                },
                notify: function (c) {
                    var d = this.promise.$$state.pending;
                    0 >= this.promise.$$state.status && d && d.length && a(function () {
                        for (var a, e, f = 0, g = d.length; f < g; f++) {
                            e = d[f][0];
                            a = d[f][3];
                            try {
                                e.notify(E(a) ? a(c) : c);
                            } catch (h) {
                                b(h);
                            }
                        }
                    });
                }
            });
            var h = function (a, b) {
                    var c = new f();
                    b ? c.resolve(a) : c.reject(a);
                    return c.promise;
                }, k = function (a, b, c) {
                    var d = null;
                    try {
                        E(c) && (d = c());
                    } catch (e) {
                        return h(e, !1);
                    }
                    return d && E(d.then) ? d.then(function () {
                        return h(a, b);
                    }, function (a) {
                        return h(a, !1);
                    }) : h(a, b);
                }, l = function (a, b, c, d) {
                    var e = new f();
                    e.resolve(a);
                    return e.promise.then(b, c, d);
                }, n = function (a) {
                    if (!E(a))
                        throw g('norslvr', a);
                    var b = new f();
                    a(function (a) {
                        b.resolve(a);
                    }, function (a) {
                        b.reject(a);
                    });
                    return b.promise;
                };
            n.prototype = d.prototype;
            n.defer = function () {
                var a = new f();
                a.resolve = c(a, a.resolve);
                a.reject = c(a, a.reject);
                a.notify = c(a, a.notify);
                return a;
            };
            n.reject = function (a) {
                var b = new f();
                b.reject(a);
                return b.promise;
            };
            n.when = l;
            n.resolve = l;
            n.all = function (a) {
                var b = new f(), c = 0, d = K(a) ? [] : {};
                q(a, function (a, e) {
                    c++;
                    l(a).then(function (a) {
                        d.hasOwnProperty(e) || (d[e] = a, --c || b.resolve(d));
                    }, function (a) {
                        d.hasOwnProperty(e) || b.reject(a);
                    });
                });
                0 === c && b.resolve(d);
                return b.promise;
            };
            return n;
        }
        function Ef() {
            this.$get = [
                '$window',
                '$timeout',
                function (a, b) {
                    var d = a.requestAnimationFrame || a.webkitRequestAnimationFrame, c = a.cancelAnimationFrame || a.webkitCancelAnimationFrame || a.webkitCancelRequestAnimationFrame, e = !!d, f = e ? function (a) {
                            var b = d(a);
                            return function () {
                                c(b);
                            };
                        } : function (a) {
                            var c = b(a, 16.66, !1);
                            return function () {
                                b.cancel(c);
                            };
                        };
                    f.supported = e;
                    return f;
                }
            ];
        }
        function tf() {
            function a(a) {
                function b() {
                    this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null;
                    this.$$listeners = {};
                    this.$$listenerCount = {};
                    this.$$watchersCount = 0;
                    this.$id = ++nb;
                    this.$$ChildScope = null;
                }
                b.prototype = a;
                return b;
            }
            var b = 10, d = O('$rootScope'), c = null, e = null;
            this.digestTtl = function (a) {
                arguments.length && (b = a);
                return b;
            };
            this.$get = [
                '$exceptionHandler',
                '$parse',
                '$browser',
                function (f, g, h) {
                    function k(a) {
                        a.currentScope.$$destroyed = !0;
                    }
                    function l(a) {
                        9 === Ca && (a.$$childHead && l(a.$$childHead), a.$$nextSibling && l(a.$$nextSibling));
                        a.$parent = a.$$nextSibling = a.$$prevSibling = a.$$childHead = a.$$childTail = a.$root = a.$$watchers = null;
                    }
                    function n() {
                        this.$id = ++nb;
                        this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null;
                        this.$root = this;
                        this.$$destroyed = !1;
                        this.$$listeners = {};
                        this.$$listenerCount = {};
                        this.$$watchersCount = 0;
                        this.$$isolateBindings = null;
                    }
                    function m(a) {
                        if (H.$$phase)
                            throw d('inprog', H.$$phase);
                        H.$$phase = a;
                    }
                    function r(a, b) {
                        do
                            a.$$watchersCount += b;
                        while (a = a.$parent);
                    }
                    function N(a, b, c) {
                        do
                            a.$$listenerCount[c] -= b, 0 === a.$$listenerCount[c] && delete a.$$listenerCount[c];
                        while (a = a.$parent);
                    }
                    function s() {
                    }
                    function w() {
                        for (; u.length;)
                            try {
                                u.shift()();
                            } catch (a) {
                                f(a);
                            }
                        e = null;
                    }
                    function p() {
                        null === e && (e = h.defer(function () {
                            H.$apply(w);
                        }));
                    }
                    n.prototype = {
                        constructor: n,
                        $new: function (b, c) {
                            var d;
                            c = c || this;
                            b ? (d = new n(), d.$root = this.$root) : (this.$$ChildScope || (this.$$ChildScope = a(this)), d = new this.$$ChildScope());
                            d.$parent = c;
                            d.$$prevSibling = c.$$childTail;
                            c.$$childHead ? (c.$$childTail.$$nextSibling = d, c.$$childTail = d) : c.$$childHead = c.$$childTail = d;
                            (b || c != this) && d.$on('$destroy', k);
                            return d;
                        },
                        $watch: function (a, b, d, e) {
                            var f = g(a);
                            if (f.$$watchDelegate)
                                return f.$$watchDelegate(this, b, d, f, a);
                            var h = this, k = h.$$watchers, l = {
                                    fn: b,
                                    last: s,
                                    get: f,
                                    exp: e || a,
                                    eq: !!d
                                };
                            c = null;
                            E(b) || (l.fn = C);
                            k || (k = h.$$watchers = []);
                            k.unshift(l);
                            r(this, 1);
                            return function () {
                                0 <= Za(k, l) && r(h, -1);
                                c = null;
                            };
                        },
                        $watchGroup: function (a, b) {
                            function c() {
                                h = !1;
                                k ? (k = !1, b(e, e, g)) : b(e, d, g);
                            }
                            var d = Array(a.length), e = Array(a.length), f = [], g = this, h = !1, k = !0;
                            if (!a.length) {
                                var l = !0;
                                g.$evalAsync(function () {
                                    l && b(e, e, g);
                                });
                                return function () {
                                    l = !1;
                                };
                            }
                            if (1 === a.length)
                                return this.$watch(a[0], function (a, c, f) {
                                    e[0] = a;
                                    d[0] = c;
                                    b(e, a === c ? e : d, f);
                                });
                            q(a, function (a, b) {
                                var k = g.$watch(a, function (a, f) {
                                    e[b] = a;
                                    d[b] = f;
                                    h || (h = !0, g.$evalAsync(c));
                                });
                                f.push(k);
                            });
                            return function () {
                                for (; f.length;)
                                    f.shift()();
                            };
                        },
                        $watchCollection: function (a, b) {
                            function c(a) {
                                e = a;
                                var b, d, g, h;
                                if (!y(e)) {
                                    if (G(e))
                                        if (ya(e))
                                            for (f !== m && (f = m, t = f.length = 0, l++), a = e.length, t !== a && (l++, f.length = t = a), b = 0; b < a; b++)
                                                h = f[b], g = e[b], d = h !== h && g !== g, d || h === g || (l++, f[b] = g);
                                        else {
                                            f !== r && (f = r = {}, t = 0, l++);
                                            a = 0;
                                            for (b in e)
                                                ua.call(e, b) && (a++, g = e[b], h = f[b], b in f ? (d = h !== h && g !== g, d || h === g || (l++, f[b] = g)) : (t++, f[b] = g, l++));
                                            if (t > a)
                                                for (b in l++, f)
                                                    ua.call(e, b) || (t--, delete f[b]);
                                        }
                                    else
                                        f !== e && (f = e, l++);
                                    return l;
                                }
                            }
                            c.$stateful = !0;
                            var d = this, e, f, h, k = 1 < b.length, l = 0, n = g(a, c), m = [], r = {}, p = !0, t = 0;
                            return this.$watch(n, function () {
                                p ? (p = !1, b(e, e, d)) : b(e, h, d);
                                if (k)
                                    if (G(e))
                                        if (ya(e)) {
                                            h = Array(e.length);
                                            for (var a = 0; a < e.length; a++)
                                                h[a] = e[a];
                                        } else
                                            for (a in h = {}, e)
                                                ua.call(e, a) && (h[a] = e[a]);
                                    else
                                        h = e;
                            });
                        },
                        $digest: function () {
                            var a, g, k, l, n, r, p, q, N = b, u, x = [], y, v;
                            m('$digest');
                            h.$$checkUrlChange();
                            this === H && null !== e && (h.defer.cancel(e), w());
                            c = null;
                            do {
                                q = !1;
                                for (u = this; t.length;) {
                                    try {
                                        v = t.shift(), v.scope.$eval(v.expression, v.locals);
                                    } catch (C) {
                                        f(C);
                                    }
                                    c = null;
                                }
                                a:
                                    do {
                                        if (r = u.$$watchers)
                                            for (p = r.length; p--;)
                                                try {
                                                    if (a = r[p])
                                                        if (n = a.get, (g = n(u)) !== (k = a.last) && !(a.eq ? pa(g, k) : 'number' === typeof g && 'number' === typeof k && isNaN(g) && isNaN(k)))
                                                            q = !0, c = a, a.last = a.eq ? qa(g, null) : g, l = a.fn, l(g, k === s ? g : k, u), 5 > N && (y = 4 - N, x[y] || (x[y] = []), x[y].push({
                                                                msg: E(a.exp) ? 'fn: ' + (a.exp.name || a.exp.toString()) : a.exp,
                                                                newVal: g,
                                                                oldVal: k
                                                            }));
                                                        else if (a === c) {
                                                            q = !1;
                                                            break a;
                                                        }
                                                } catch (F) {
                                                    f(F);
                                                }
                                        if (!(r = u.$$watchersCount && u.$$childHead || u !== this && u.$$nextSibling))
                                            for (; u !== this && !(r = u.$$nextSibling);)
                                                u = u.$parent;
                                    } while (u = r);
                                if ((q || t.length) && !N--)
                                    throw H.$$phase = null, d('infdig', b, x);
                            } while (q || t.length);
                            for (H.$$phase = null; z.length;)
                                try {
                                    z.shift()();
                                } catch (B) {
                                    f(B);
                                }
                        },
                        $destroy: function () {
                            if (!this.$$destroyed) {
                                var a = this.$parent;
                                this.$broadcast('$destroy');
                                this.$$destroyed = !0;
                                this === H && h.$$applicationDestroyed();
                                r(this, -this.$$watchersCount);
                                for (var b in this.$$listenerCount)
                                    N(this, this.$$listenerCount[b], b);
                                a && a.$$childHead == this && (a.$$childHead = this.$$nextSibling);
                                a && a.$$childTail == this && (a.$$childTail = this.$$prevSibling);
                                this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling);
                                this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling);
                                this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = C;
                                this.$on = this.$watch = this.$watchGroup = function () {
                                    return C;
                                };
                                this.$$listeners = {};
                                this.$$nextSibling = null;
                                l(this);
                            }
                        },
                        $eval: function (a, b) {
                            return g(a)(this, b);
                        },
                        $evalAsync: function (a, b) {
                            H.$$phase || t.length || h.defer(function () {
                                t.length && H.$digest();
                            });
                            t.push({
                                scope: this,
                                expression: g(a),
                                locals: b
                            });
                        },
                        $$postDigest: function (a) {
                            z.push(a);
                        },
                        $apply: function (a) {
                            try {
                                m('$apply');
                                try {
                                    return this.$eval(a);
                                } finally {
                                    H.$$phase = null;
                                }
                            } catch (b) {
                                f(b);
                            } finally {
                                try {
                                    H.$digest();
                                } catch (c) {
                                    throw f(c), c;
                                }
                            }
                        },
                        $applyAsync: function (a) {
                            function b() {
                                c.$eval(a);
                            }
                            var c = this;
                            a && u.push(b);
                            a = g(a);
                            p();
                        },
                        $on: function (a, b) {
                            var c = this.$$listeners[a];
                            c || (this.$$listeners[a] = c = []);
                            c.push(b);
                            var d = this;
                            do
                                d.$$listenerCount[a] || (d.$$listenerCount[a] = 0), d.$$listenerCount[a]++;
                            while (d = d.$parent);
                            var e = this;
                            return function () {
                                var d = c.indexOf(b);
                                -1 !== d && (c[d] = null, N(e, 1, a));
                            };
                        },
                        $emit: function (a, b) {
                            var c = [], d, e = this, g = !1, h = {
                                    name: a,
                                    targetScope: e,
                                    stopPropagation: function () {
                                        g = !0;
                                    },
                                    preventDefault: function () {
                                        h.defaultPrevented = !0;
                                    },
                                    defaultPrevented: !1
                                }, k = $a([h], arguments, 1), l, n;
                            do {
                                d = e.$$listeners[a] || c;
                                h.currentScope = e;
                                l = 0;
                                for (n = d.length; l < n; l++)
                                    if (d[l])
                                        try {
                                            d[l].apply(null, k);
                                        } catch (m) {
                                            f(m);
                                        }
                                    else
                                        d.splice(l, 1), l--, n--;
                                if (g)
                                    return h.currentScope = null, h;
                                e = e.$parent;
                            } while (e);
                            h.currentScope = null;
                            return h;
                        },
                        $broadcast: function (a, b) {
                            var c = this, d = this, e = {
                                    name: a,
                                    targetScope: this,
                                    preventDefault: function () {
                                        e.defaultPrevented = !0;
                                    },
                                    defaultPrevented: !1
                                };
                            if (!this.$$listenerCount[a])
                                return e;
                            for (var g = $a([e], arguments, 1), h, k; c = d;) {
                                e.currentScope = c;
                                d = c.$$listeners[a] || [];
                                h = 0;
                                for (k = d.length; h < k; h++)
                                    if (d[h])
                                        try {
                                            d[h].apply(null, g);
                                        } catch (l) {
                                            f(l);
                                        }
                                    else
                                        d.splice(h, 1), h--, k--;
                                if (!(d = c.$$listenerCount[a] && c.$$childHead || c !== this && c.$$nextSibling))
                                    for (; c !== this && !(d = c.$$nextSibling);)
                                        c = c.$parent;
                            }
                            e.currentScope = null;
                            return e;
                        }
                    };
                    var H = new n(), t = H.$$asyncQueue = [], z = H.$$postDigestQueue = [], u = H.$$applyAsyncQueue = [];
                    return H;
                }
            ];
        }
        function me() {
            var a = /^\s*(https?|ftp|mailto|tel|file):/, b = /^\s*((https?|ftp|file|blob):|data:image\/)/;
            this.aHrefSanitizationWhitelist = function (b) {
                return x(b) ? (a = b, this) : a;
            };
            this.imgSrcSanitizationWhitelist = function (a) {
                return x(a) ? (b = a, this) : b;
            };
            this.$get = function () {
                return function (d, c) {
                    var e = c ? b : a, f;
                    f = ra(d).href;
                    return '' === f || f.match(e) ? d : 'unsafe:' + f;
                };
            };
        }
        function lg(a) {
            if ('self' === a)
                return a;
            if (F(a)) {
                if (-1 < a.indexOf('***'))
                    throw ta('iwcard', a);
                a = vd(a).replace('\\*\\*', '.*').replace('\\*', '[^:/.?&;]*');
                return new RegExp('^' + a + '$');
            }
            if (Wa(a))
                return new RegExp('^' + a.source + '$');
            throw ta('imatcher');
        }
        function wd(a) {
            var b = [];
            x(a) && q(a, function (a) {
                b.push(lg(a));
            });
            return b;
        }
        function xf() {
            this.SCE_CONTEXTS = oa;
            var a = ['self'], b = [];
            this.resourceUrlWhitelist = function (b) {
                arguments.length && (a = wd(b));
                return a;
            };
            this.resourceUrlBlacklist = function (a) {
                arguments.length && (b = wd(a));
                return b;
            };
            this.$get = [
                '$injector',
                function (d) {
                    function c(a, b) {
                        return 'self' === a ? hd(b) : !!a.exec(b.href);
                    }
                    function e(a) {
                        var b = function (a) {
                            this.$$unwrapTrustedValue = function () {
                                return a;
                            };
                        };
                        a && (b.prototype = new a());
                        b.prototype.valueOf = function () {
                            return this.$$unwrapTrustedValue();
                        };
                        b.prototype.toString = function () {
                            return this.$$unwrapTrustedValue().toString();
                        };
                        return b;
                    }
                    var f = function (a) {
                        throw ta('unsafe');
                    };
                    d.has('$sanitize') && (f = d.get('$sanitize'));
                    var g = e(), h = {};
                    h[oa.HTML] = e(g);
                    h[oa.CSS] = e(g);
                    h[oa.URL] = e(g);
                    h[oa.JS] = e(g);
                    h[oa.RESOURCE_URL] = e(h[oa.URL]);
                    return {
                        trustAs: function (a, b) {
                            var c = h.hasOwnProperty(a) ? h[a] : null;
                            if (!c)
                                throw ta('icontext', a, b);
                            if (null === b || y(b) || '' === b)
                                return b;
                            if ('string' !== typeof b)
                                throw ta('itype', a);
                            return new c(b);
                        },
                        getTrusted: function (d, e) {
                            if (null === e || y(e) || '' === e)
                                return e;
                            var g = h.hasOwnProperty(d) ? h[d] : null;
                            if (g && e instanceof g)
                                return e.$$unwrapTrustedValue();
                            if (d === oa.RESOURCE_URL) {
                                var g = ra(e.toString()), m, r, q = !1;
                                m = 0;
                                for (r = a.length; m < r; m++)
                                    if (c(a[m], g)) {
                                        q = !0;
                                        break;
                                    }
                                if (q)
                                    for (m = 0, r = b.length; m < r; m++)
                                        if (c(b[m], g)) {
                                            q = !1;
                                            break;
                                        }
                                if (q)
                                    return e;
                                throw ta('insecurl', e.toString());
                            }
                            if (d === oa.HTML)
                                return f(e);
                            throw ta('unsafe');
                        },
                        valueOf: function (a) {
                            return a instanceof g ? a.$$unwrapTrustedValue() : a;
                        }
                    };
                }
            ];
        }
        function wf() {
            var a = !0;
            this.enabled = function (b) {
                arguments.length && (a = !!b);
                return a;
            };
            this.$get = [
                '$parse',
                '$sceDelegate',
                function (b, d) {
                    if (a && 8 > Ca)
                        throw ta('iequirks');
                    var c = ha(oa);
                    c.isEnabled = function () {
                        return a;
                    };
                    c.trustAs = d.trustAs;
                    c.getTrusted = d.getTrusted;
                    c.valueOf = d.valueOf;
                    a || (c.trustAs = c.getTrusted = function (a, b) {
                        return b;
                    }, c.valueOf = Xa);
                    c.parseAs = function (a, d) {
                        var e = b(d);
                        return e.literal && e.constant ? e : b(d, function (b) {
                            return c.getTrusted(a, b);
                        });
                    };
                    var e = c.parseAs, f = c.getTrusted, g = c.trustAs;
                    q(oa, function (a, b) {
                        var d = P(b);
                        c[cb('parse_as_' + d)] = function (b) {
                            return e(a, b);
                        };
                        c[cb('get_trusted_' + d)] = function (b) {
                            return f(a, b);
                        };
                        c[cb('trust_as_' + d)] = function (b) {
                            return g(a, b);
                        };
                    });
                    return c;
                }
            ];
        }
        function yf() {
            this.$get = [
                '$window',
                '$document',
                function (a, b) {
                    var d = {}, c = !(a.chrome && a.chrome.app && a.chrome.app.runtime) && a.history && a.history.pushState, e = X((/android (\d+)/.exec(P((a.navigator || {}).userAgent)) || [])[1]), f = /Boxee/i.test((a.navigator || {}).userAgent), g = b[0] || {}, h, k = /^(Moz|webkit|ms)(?=[A-Z])/, l = g.body && g.body.style, n = !1, m = !1;
                    if (l) {
                        for (var r in l)
                            if (n = k.exec(r)) {
                                h = n[0];
                                h = h.substr(0, 1).toUpperCase() + h.substr(1);
                                break;
                            }
                        h || (h = 'WebkitOpacity' in l && 'webkit');
                        n = !!('transition' in l || h + 'Transition' in l);
                        m = !!('animation' in l || h + 'Animation' in l);
                        !e || n && m || (n = F(l.webkitTransition), m = F(l.webkitAnimation));
                    }
                    return {
                        history: !(!c || 4 > e || f),
                        hasEvent: function (a) {
                            if ('input' === a && 11 >= Ca)
                                return !1;
                            if (y(d[a])) {
                                var b = g.createElement('div');
                                d[a] = 'on' + a in b;
                            }
                            return d[a];
                        },
                        csp: Ea(),
                        vendorPrefix: h,
                        transitions: n,
                        animations: m,
                        android: e
                    };
                }
            ];
        }
        function Af() {
            var a;
            this.httpOptions = function (b) {
                return b ? (a = b, this) : a;
            };
            this.$get = [
                '$templateCache',
                '$http',
                '$q',
                '$sce',
                function (b, d, c, e) {
                    function f(g, h) {
                        f.totalPendingRequests++;
                        F(g) && b.get(g) || (g = e.getTrustedResourceUrl(g));
                        var k = d.defaults && d.defaults.transformResponse;
                        K(k) ? k = k.filter(function (a) {
                            return a !== ac;
                        }) : k === ac && (k = null);
                        return d.get(g, R({
                            cache: b,
                            transformResponse: k
                        }, a))['finally'](function () {
                            f.totalPendingRequests--;
                        }).then(function (a) {
                            b.put(g, a.data);
                            return a.data;
                        }, function (a) {
                            if (!h)
                                throw mg('tpload', g, a.status, a.statusText);
                            return c.reject(a);
                        });
                    }
                    f.totalPendingRequests = 0;
                    return f;
                }
            ];
        }
        function Bf() {
            this.$get = [
                '$rootScope',
                '$browser',
                '$location',
                function (a, b, d) {
                    return {
                        findBindings: function (a, b, d) {
                            a = a.getElementsByClassName('ng-binding');
                            var g = [];
                            q(a, function (a) {
                                var c = ea.element(a).data('$binding');
                                c && q(c, function (c) {
                                    d ? new RegExp('(^|\\s)' + vd(b) + '(\\s|\\||$)').test(c) && g.push(a) : -1 != c.indexOf(b) && g.push(a);
                                });
                            });
                            return g;
                        },
                        findModels: function (a, b, d) {
                            for (var g = [
                                        'ng-',
                                        'data-ng-',
                                        'ng\\:'
                                    ], h = 0; h < g.length; ++h) {
                                var k = a.querySelectorAll('[' + g[h] + 'model' + (d ? '=' : '*=') + '"' + b + '"]');
                                if (k.length)
                                    return k;
                            }
                        },
                        getLocation: function () {
                            return d.url();
                        },
                        setLocation: function (b) {
                            b !== d.url() && (d.url(b), a.$digest());
                        },
                        whenStable: function (a) {
                            b.notifyWhenNoOutstandingRequests(a);
                        }
                    };
                }
            ];
        }
        function Cf() {
            this.$get = [
                '$rootScope',
                '$browser',
                '$q',
                '$$q',
                '$exceptionHandler',
                function (a, b, d, c, e) {
                    function f(f, k, l) {
                        E(f) || (l = k, k = f, f = C);
                        var n = za.call(arguments, 3), m = x(l) && !l, r = (m ? c : d).defer(), q = r.promise, s;
                        s = b.defer(function () {
                            try {
                                r.resolve(f.apply(null, n));
                            } catch (b) {
                                r.reject(b), e(b);
                            } finally {
                                delete g[q.$$timeoutId];
                            }
                            m || a.$apply();
                        }, k);
                        q.$$timeoutId = s;
                        g[s] = r;
                        return q;
                    }
                    var g = {};
                    f.cancel = function (a) {
                        return a && a.$$timeoutId in g ? (g[a.$$timeoutId].reject('canceled'), delete g[a.$$timeoutId], b.defer.cancel(a.$$timeoutId)) : !1;
                    };
                    return f;
                }
            ];
        }
        function ra(a) {
            Ca && (Y.setAttribute('href', a), a = Y.href);
            Y.setAttribute('href', a);
            return {
                href: Y.href,
                protocol: Y.protocol ? Y.protocol.replace(/:$/, '') : '',
                host: Y.host,
                search: Y.search ? Y.search.replace(/^\?/, '') : '',
                hash: Y.hash ? Y.hash.replace(/^#/, '') : '',
                hostname: Y.hostname,
                port: Y.port,
                pathname: '/' === Y.pathname.charAt(0) ? Y.pathname : '/' + Y.pathname
            };
        }
        function hd(a) {
            a = F(a) ? ra(a) : a;
            return a.protocol === xd.protocol && a.host === xd.host;
        }
        function Df() {
            this.$get = da(v);
        }
        function yd(a) {
            function b(a) {
                try {
                    return decodeURIComponent(a);
                } catch (b) {
                    return a;
                }
            }
            var d = a[0] || {}, c = {}, e = '';
            return function () {
                var a, g, h, k, l;
                a = d.cookie || '';
                if (a !== e)
                    for (e = a, a = e.split('; '), c = {}, h = 0; h < a.length; h++)
                        g = a[h], k = g.indexOf('='), 0 < k && (l = b(g.substring(0, k)), y(c[l]) && (c[l] = b(g.substring(k + 1))));
                return c;
            };
        }
        function Hf() {
            this.$get = yd;
        }
        function Jc(a) {
            function b(d, c) {
                if (G(d)) {
                    var e = {};
                    q(d, function (a, c) {
                        e[c] = b(c, a);
                    });
                    return e;
                }
                return a.factory(d + 'Filter', c);
            }
            this.register = b;
            this.$get = [
                '$injector',
                function (a) {
                    return function (b) {
                        return a.get(b + 'Filter');
                    };
                }
            ];
            b('currency', zd);
            b('date', Ad);
            b('filter', ng);
            b('json', og);
            b('limitTo', pg);
            b('lowercase', qg);
            b('number', Bd);
            b('orderBy', Cd);
            b('uppercase', rg);
        }
        function ng() {
            return function (a, b, d) {
                if (!ya(a)) {
                    if (null == a)
                        return a;
                    throw O('filter')('notarray', a);
                }
                var c;
                switch (ic(b)) {
                case 'function':
                    break;
                case 'boolean':
                case 'null':
                case 'number':
                case 'string':
                    c = !0;
                case 'object':
                    b = sg(b, d, c);
                    break;
                default:
                    return a;
                }
                return Array.prototype.filter.call(a, b);
            };
        }
        function sg(a, b, d) {
            var c = G(a) && '$' in a;
            !0 === b ? b = pa : E(b) || (b = function (a, b) {
                if (y(a))
                    return !1;
                if (null === a || null === b)
                    return a === b;
                if (G(b) || G(a) && !rc(a))
                    return !1;
                a = P('' + a);
                b = P('' + b);
                return -1 !== a.indexOf(b);
            });
            return function (e) {
                return c && !G(e) ? Ka(e, a.$, b, !1) : Ka(e, a, b, d);
            };
        }
        function Ka(a, b, d, c, e) {
            var f = ic(a), g = ic(b);
            if ('string' === g && '!' === b.charAt(0))
                return !Ka(a, b.substring(1), d, c);
            if (K(a))
                return a.some(function (a) {
                    return Ka(a, b, d, c);
                });
            switch (f) {
            case 'object':
                var h;
                if (c) {
                    for (h in a)
                        if ('$' !== h.charAt(0) && Ka(a[h], b, d, !0))
                            return !0;
                    return e ? !1 : Ka(a, b, d, !1);
                }
                if ('object' === g) {
                    for (h in b)
                        if (e = b[h], !E(e) && !y(e) && (f = '$' === h, !Ka(f ? a : a[h], e, d, f, f)))
                            return !1;
                    return !0;
                }
                return d(a, b);
            case 'function':
                return !1;
            default:
                return d(a, b);
            }
        }
        function ic(a) {
            return null === a ? 'null' : typeof a;
        }
        function zd(a) {
            var b = a.NUMBER_FORMATS;
            return function (a, c, e) {
                y(c) && (c = b.CURRENCY_SYM);
                y(e) && (e = b.PATTERNS[1].maxFrac);
                return null == a ? a : Dd(a, b.PATTERNS[1], b.GROUP_SEP, b.DECIMAL_SEP, e).replace(/\u00A4/g, c);
            };
        }
        function Bd(a) {
            var b = a.NUMBER_FORMATS;
            return function (a, c) {
                return null == a ? a : Dd(a, b.PATTERNS[0], b.GROUP_SEP, b.DECIMAL_SEP, c);
            };
        }
        function tg(a) {
            var b = 0, d, c, e, f, g;
            -1 < (c = a.indexOf(Ed)) && (a = a.replace(Ed, ''));
            0 < (e = a.search(/e/i)) ? (0 > c && (c = e), c += +a.slice(e + 1), a = a.substring(0, e)) : 0 > c && (c = a.length);
            for (e = 0; a.charAt(e) == jc; e++);
            if (e == (g = a.length))
                d = [0], c = 1;
            else {
                for (g--; a.charAt(g) == jc;)
                    g--;
                c -= e;
                d = [];
                for (f = 0; e <= g; e++, f++)
                    d[f] = +a.charAt(e);
            }
            c > Fd && (d = d.splice(0, Fd - 1), b = c - 1, c = 1);
            return {
                d: d,
                e: b,
                i: c
            };
        }
        function ug(a, b, d, c) {
            var e = a.d, f = e.length - a.i;
            b = y(b) ? Math.min(Math.max(d, f), c) : +b;
            d = b + a.i;
            c = e[d];
            if (0 < d) {
                e.splice(Math.max(a.i, d));
                for (var g = d; g < e.length; g++)
                    e[g] = 0;
            } else
                for (f = Math.max(0, f), a.i = 1, e.length = Math.max(1, d = b + 1), e[0] = 0, g = 1; g < d; g++)
                    e[g] = 0;
            if (5 <= c)
                if (0 > d - 1) {
                    for (c = 0; c > d; c--)
                        e.unshift(0), a.i++;
                    e.unshift(1);
                    a.i++;
                } else
                    e[d - 1]++;
            for (; f < Math.max(0, b); f++)
                e.push(0);
            if (b = e.reduceRight(function (a, b, c, d) {
                    b += a;
                    d[c] = b % 10;
                    return Math.floor(b / 10);
                }, 0))
                e.unshift(b), a.i++;
        }
        function Dd(a, b, d, c, e) {
            if (!F(a) && !Q(a) || isNaN(a))
                return '';
            var f = !isFinite(a), g = !1, h = Math.abs(a) + '', k = '';
            if (f)
                k = '\u221E';
            else {
                g = tg(h);
                ug(g, e, b.minFrac, b.maxFrac);
                k = g.d;
                h = g.i;
                e = g.e;
                f = [];
                for (g = k.reduce(function (a, b) {
                        return a && !b;
                    }, !0); 0 > h;)
                    k.unshift(0), h++;
                0 < h ? f = k.splice(h) : (f = k, k = [0]);
                h = [];
                for (k.length >= b.lgSize && h.unshift(k.splice(-b.lgSize).join('')); k.length > b.gSize;)
                    h.unshift(k.splice(-b.gSize).join(''));
                k.length && h.unshift(k.join(''));
                k = h.join(d);
                f.length && (k += c + f.join(''));
                e && (k += 'e+' + e);
            }
            return 0 > a && !g ? b.negPre + k + b.negSuf : b.posPre + k + b.posSuf;
        }
        function Ib(a, b, d, c) {
            var e = '';
            if (0 > a || c && 0 >= a)
                c ? a = -a + 1 : (a = -a, e = '-');
            for (a = '' + a; a.length < b;)
                a = jc + a;
            d && (a = a.substr(a.length - b));
            return e + a;
        }
        function W(a, b, d, c, e) {
            d = d || 0;
            return function (f) {
                f = f['get' + a]();
                if (0 < d || f > -d)
                    f += d;
                0 === f && -12 == d && (f = 12);
                return Ib(f, b, c, e);
            };
        }
        function ib(a, b, d) {
            return function (c, e) {
                var f = c['get' + a](), g = sb((d ? 'STANDALONE' : '') + (b ? 'SHORT' : '') + a);
                return e[g][f];
            };
        }
        function Gd(a) {
            var b = new Date(a, 0, 1).getDay();
            return new Date(a, 0, (4 >= b ? 5 : 12) - b);
        }
        function Hd(a) {
            return function (b) {
                var d = Gd(b.getFullYear());
                b = +new Date(b.getFullYear(), b.getMonth(), b.getDate() + (4 - b.getDay())) - +d;
                b = 1 + Math.round(b / 604800000);
                return Ib(b, a);
            };
        }
        function kc(a, b) {
            return 0 >= a.getFullYear() ? b.ERAS[0] : b.ERAS[1];
        }
        function Ad(a) {
            function b(a) {
                var b;
                if (b = a.match(d)) {
                    a = new Date(0);
                    var f = 0, g = 0, h = b[8] ? a.setUTCFullYear : a.setFullYear, k = b[8] ? a.setUTCHours : a.setHours;
                    b[9] && (f = X(b[9] + b[10]), g = X(b[9] + b[11]));
                    h.call(a, X(b[1]), X(b[2]) - 1, X(b[3]));
                    f = X(b[4] || 0) - f;
                    g = X(b[5] || 0) - g;
                    h = X(b[6] || 0);
                    b = Math.round(1000 * parseFloat('0.' + (b[7] || 0)));
                    k.call(a, f, g, h, b);
                }
                return a;
            }
            var d = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
            return function (c, d, f) {
                var g = '', h = [], k, l;
                d = d || 'mediumDate';
                d = a.DATETIME_FORMATS[d] || d;
                F(c) && (c = vg.test(c) ? X(c) : b(c));
                Q(c) && (c = new Date(c));
                if (!fa(c) || !isFinite(c.getTime()))
                    return c;
                for (; d;)
                    (l = wg.exec(d)) ? (h = $a(h, l, 1), d = h.pop()) : (h.push(d), d = null);
                var n = c.getTimezoneOffset();
                f && (n = vc(f, n), c = Qb(c, f, !0));
                q(h, function (b) {
                    k = xg[b];
                    g += k ? k(c, a.DATETIME_FORMATS, n) : '\'\'' === b ? '\'' : b.replace(/(^'|'$)/g, '').replace(/''/g, '\'');
                });
                return g;
            };
        }
        function og() {
            return function (a, b) {
                y(b) && (b = 2);
                return ab(a, b);
            };
        }
        function pg() {
            return function (a, b, d) {
                b = Infinity === Math.abs(Number(b)) ? Number(b) : X(b);
                if (isNaN(b))
                    return a;
                Q(a) && (a = a.toString());
                if (!K(a) && !F(a))
                    return a;
                d = !d || isNaN(d) ? 0 : X(d);
                d = 0 > d ? Math.max(0, a.length + d) : d;
                return 0 <= b ? a.slice(d, d + b) : 0 === d ? a.slice(b, a.length) : a.slice(Math.max(0, d + b), d);
            };
        }
        function Cd(a) {
            function b(b, d) {
                d = d ? -1 : 1;
                return b.map(function (b) {
                    var c = 1, h = Xa;
                    if (E(b))
                        h = b;
                    else if (F(b)) {
                        if ('+' == b.charAt(0) || '-' == b.charAt(0))
                            c = '-' == b.charAt(0) ? -1 : 1, b = b.substring(1);
                        if ('' !== b && (h = a(b), h.constant))
                            var k = h(), h = function (a) {
                                    return a[k];
                                };
                    }
                    return {
                        get: h,
                        descending: c * d
                    };
                });
            }
            function d(a) {
                switch (typeof a) {
                case 'number':
                case 'boolean':
                case 'string':
                    return !0;
                default:
                    return !1;
                }
            }
            return function (a, e, f) {
                if (null == a)
                    return a;
                if (!ya(a))
                    throw O('orderBy')('notarray', a);
                K(e) || (e = [e]);
                0 === e.length && (e = ['+']);
                var g = b(e, f);
                g.push({
                    get: function () {
                        return {};
                    },
                    descending: f ? -1 : 1
                });
                a = Array.prototype.map.call(a, function (a, b) {
                    return {
                        value: a,
                        predicateValues: g.map(function (c) {
                            var e = c.get(a);
                            c = typeof e;
                            if (null === e)
                                c = 'string', e = 'null';
                            else if ('string' === c)
                                e = e.toLowerCase();
                            else if ('object' === c)
                                a: {
                                    if ('function' === typeof e.valueOf && (e = e.valueOf(), d(e)))
                                        break a;
                                    if (rc(e) && (e = e.toString(), d(e)))
                                        break a;
                                    e = b;
                                }
                            return {
                                value: e,
                                type: c
                            };
                        })
                    };
                });
                a.sort(function (a, b) {
                    for (var c = 0, d = 0, e = g.length; d < e; ++d) {
                        var c = a.predicateValues[d], f = b.predicateValues[d], q = 0;
                        c.type === f.type ? c.value !== f.value && (q = c.value < f.value ? -1 : 1) : q = c.type < f.type ? -1 : 1;
                        if (c = q * g[d].descending)
                            break;
                    }
                    return c;
                });
                return a = a.map(function (a) {
                    return a.value;
                });
            };
        }
        function La(a) {
            E(a) && (a = { link: a });
            a.restrict = a.restrict || 'AC';
            return da(a);
        }
        function Id(a, b, d, c, e) {
            var f = this, g = [];
            f.$error = {};
            f.$$success = {};
            f.$pending = void 0;
            f.$name = e(b.name || b.ngForm || '')(d);
            f.$dirty = !1;
            f.$pristine = !0;
            f.$valid = !0;
            f.$invalid = !1;
            f.$submitted = !1;
            f.$$parentForm = Jb;
            f.$rollbackViewValue = function () {
                q(g, function (a) {
                    a.$rollbackViewValue();
                });
            };
            f.$commitViewValue = function () {
                q(g, function (a) {
                    a.$commitViewValue();
                });
            };
            f.$addControl = function (a) {
                Qa(a.$name, 'input');
                g.push(a);
                a.$name && (f[a.$name] = a);
                a.$$parentForm = f;
            };
            f.$$renameControl = function (a, b) {
                var c = a.$name;
                f[c] === a && delete f[c];
                f[b] = a;
                a.$name = b;
            };
            f.$removeControl = function (a) {
                a.$name && f[a.$name] === a && delete f[a.$name];
                q(f.$pending, function (b, c) {
                    f.$setValidity(c, null, a);
                });
                q(f.$error, function (b, c) {
                    f.$setValidity(c, null, a);
                });
                q(f.$$success, function (b, c) {
                    f.$setValidity(c, null, a);
                });
                Za(g, a);
                a.$$parentForm = Jb;
            };
            Jd({
                ctrl: this,
                $element: a,
                set: function (a, b, c) {
                    var d = a[b];
                    d ? -1 === d.indexOf(c) && d.push(c) : a[b] = [c];
                },
                unset: function (a, b, c) {
                    var d = a[b];
                    d && (Za(d, c), 0 === d.length && delete a[b]);
                },
                $animate: c
            });
            f.$setDirty = function () {
                c.removeClass(a, Ua);
                c.addClass(a, Kb);
                f.$dirty = !0;
                f.$pristine = !1;
                f.$$parentForm.$setDirty();
            };
            f.$setPristine = function () {
                c.setClass(a, Ua, Kb + ' ng-submitted');
                f.$dirty = !1;
                f.$pristine = !0;
                f.$submitted = !1;
                q(g, function (a) {
                    a.$setPristine();
                });
            };
            f.$setUntouched = function () {
                q(g, function (a) {
                    a.$setUntouched();
                });
            };
            f.$setSubmitted = function () {
                c.addClass(a, 'ng-submitted');
                f.$submitted = !0;
                f.$$parentForm.$setSubmitted();
            };
        }
        function lc(a) {
            a.$formatters.push(function (b) {
                return a.$isEmpty(b) ? b : b.toString();
            });
        }
        function jb(a, b, d, c, e, f) {
            var g = P(b[0].type);
            if (!e.android) {
                var h = !1;
                b.on('compositionstart', function () {
                    h = !0;
                });
                b.on('compositionend', function () {
                    h = !1;
                    l();
                });
            }
            var k, l = function (a) {
                    k && (f.defer.cancel(k), k = null);
                    if (!h) {
                        var e = b.val();
                        a = a && a.type;
                        'password' === g || d.ngTrim && 'false' === d.ngTrim || (e = V(e));
                        (c.$viewValue !== e || '' === e && c.$$hasNativeValidators) && c.$setViewValue(e, a);
                    }
                };
            if (e.hasEvent('input'))
                b.on('input', l);
            else {
                var n = function (a, b, c) {
                    k || (k = f.defer(function () {
                        k = null;
                        b && b.value === c || l(a);
                    }));
                };
                b.on('keydown', function (a) {
                    var b = a.keyCode;
                    91 === b || 15 < b && 19 > b || 37 <= b && 40 >= b || n(a, this, this.value);
                });
                if (e.hasEvent('paste'))
                    b.on('paste cut', n);
            }
            b.on('change', l);
            if (Kd[g] && c.$$hasNativeValidators && g === d.type)
                b.on('keydown wheel mousedown', function (a) {
                    if (!k) {
                        var b = this.validity, c = b.badInput, d = b.typeMismatch;
                        k = f.defer(function () {
                            k = null;
                            b.badInput === c && b.typeMismatch === d || l(a);
                        });
                    }
                });
            c.$render = function () {
                var a = c.$isEmpty(c.$viewValue) ? '' : c.$viewValue;
                b.val() !== a && b.val(a);
            };
        }
        function Lb(a, b) {
            return function (d, c) {
                var e, f;
                if (fa(d))
                    return d;
                if (F(d)) {
                    '"' == d.charAt(0) && '"' == d.charAt(d.length - 1) && (d = d.substring(1, d.length - 1));
                    if (yg.test(d))
                        return new Date(d);
                    a.lastIndex = 0;
                    if (e = a.exec(d))
                        return e.shift(), f = c ? {
                            yyyy: c.getFullYear(),
                            MM: c.getMonth() + 1,
                            dd: c.getDate(),
                            HH: c.getHours(),
                            mm: c.getMinutes(),
                            ss: c.getSeconds(),
                            sss: c.getMilliseconds() / 1000
                        } : {
                            yyyy: 1970,
                            MM: 1,
                            dd: 1,
                            HH: 0,
                            mm: 0,
                            ss: 0,
                            sss: 0
                        }, q(e, function (a, c) {
                            c < b.length && (f[b[c]] = +a);
                        }), new Date(f.yyyy, f.MM - 1, f.dd, f.HH, f.mm, f.ss || 0, 1000 * f.sss || 0);
                }
                return NaN;
            };
        }
        function kb(a, b, d, c) {
            return function (e, f, g, h, k, l, n) {
                function m(a) {
                    return a && !(a.getTime && a.getTime() !== a.getTime());
                }
                function r(a) {
                    return x(a) && !fa(a) ? d(a) || void 0 : a;
                }
                Ld(e, f, g, h);
                jb(e, f, g, h, k, l);
                var q = h && h.$options && h.$options.timezone, s;
                h.$$parserName = a;
                h.$parsers.push(function (a) {
                    if (h.$isEmpty(a))
                        return null;
                    if (b.test(a))
                        return a = d(a, s), q && (a = Qb(a, q)), a;
                });
                h.$formatters.push(function (a) {
                    if (a && !fa(a))
                        throw lb('datefmt', a);
                    if (m(a))
                        return (s = a) && q && (s = Qb(s, q, !0)), n('date')(a, c, q);
                    s = null;
                    return '';
                });
                if (x(g.min) || g.ngMin) {
                    var w;
                    h.$validators.min = function (a) {
                        return !m(a) || y(w) || d(a) >= w;
                    };
                    g.$observe('min', function (a) {
                        w = r(a);
                        h.$validate();
                    });
                }
                if (x(g.max) || g.ngMax) {
                    var p;
                    h.$validators.max = function (a) {
                        return !m(a) || y(p) || d(a) <= p;
                    };
                    g.$observe('max', function (a) {
                        p = r(a);
                        h.$validate();
                    });
                }
            };
        }
        function Ld(a, b, d, c) {
            (c.$$hasNativeValidators = G(b[0].validity)) && c.$parsers.push(function (a) {
                var c = b.prop('validity') || {};
                return c.badInput || c.typeMismatch ? void 0 : a;
            });
        }
        function Md(a, b, d, c, e) {
            if (x(c)) {
                a = a(c);
                if (!a.constant)
                    throw lb('constexpr', d, c);
                return a(b);
            }
            return e;
        }
        function mc(a, b) {
            a = 'ngClass' + a;
            return [
                '$animate',
                function (d) {
                    function c(a, b) {
                        var c = [], d = 0;
                        a:
                            for (; d < a.length; d++) {
                                for (var e = a[d], n = 0; n < b.length; n++)
                                    if (e == b[n])
                                        continue a;
                                c.push(e);
                            }
                        return c;
                    }
                    function e(a) {
                        var b = [];
                        return K(a) ? (q(a, function (a) {
                            b = b.concat(e(a));
                        }), b) : F(a) ? a.split(' ') : G(a) ? (q(a, function (a, c) {
                            a && (b = b.concat(c.split(' ')));
                        }), b) : a;
                    }
                    return {
                        restrict: 'AC',
                        link: function (f, g, h) {
                            function k(a) {
                                a = l(a, 1);
                                h.$addClass(a);
                            }
                            function l(a, b) {
                                var c = g.data('$classCounts') || T(), d = [];
                                q(a, function (a) {
                                    if (0 < b || c[a])
                                        c[a] = (c[a] || 0) + b, c[a] === +(0 < b) && d.push(a);
                                });
                                g.data('$classCounts', c);
                                return d.join(' ');
                            }
                            function n(a, b) {
                                var e = c(b, a), f = c(a, b), e = l(e, 1), f = l(f, -1);
                                e && e.length && d.addClass(g, e);
                                f && f.length && d.removeClass(g, f);
                            }
                            function m(a) {
                                if (!0 === b || f.$index % 2 === b) {
                                    var c = e(a || []);
                                    if (!r)
                                        k(c);
                                    else if (!pa(a, r)) {
                                        var d = e(r);
                                        n(d, c);
                                    }
                                }
                                r = K(a) ? a.map(function (a) {
                                    return ha(a);
                                }) : ha(a);
                            }
                            var r;
                            f.$watch(h[a], m, !0);
                            h.$observe('class', function (b) {
                                m(f.$eval(h[a]));
                            });
                            'ngClass' !== a && f.$watch('$index', function (c, d) {
                                var g = c & 1;
                                if (g !== (d & 1)) {
                                    var m = e(f.$eval(h[a]));
                                    g === b ? k(m) : (g = l(m, -1), h.$removeClass(g));
                                }
                            });
                        }
                    };
                }
            ];
        }
        function Jd(a) {
            function b(a, b) {
                b && !f[a] ? (k.addClass(e, a), f[a] = !0) : !b && f[a] && (k.removeClass(e, a), f[a] = !1);
            }
            function d(a, c) {
                a = a ? '-' + zc(a, '-') : '';
                b(mb + a, !0 === c);
                b(Nd + a, !1 === c);
            }
            var c = a.ctrl, e = a.$element, f = {}, g = a.set, h = a.unset, k = a.$animate;
            f[Nd] = !(f[mb] = e.hasClass(mb));
            c.$setValidity = function (a, e, f) {
                y(e) ? (c.$pending || (c.$pending = {}), g(c.$pending, a, f)) : (c.$pending && h(c.$pending, a, f), Od(c.$pending) && (c.$pending = void 0));
                Da(e) ? e ? (h(c.$error, a, f), g(c.$$success, a, f)) : (g(c.$error, a, f), h(c.$$success, a, f)) : (h(c.$error, a, f), h(c.$$success, a, f));
                c.$pending ? (b(Pd, !0), c.$valid = c.$invalid = void 0, d('', null)) : (b(Pd, !1), c.$valid = Od(c.$error), c.$invalid = !c.$valid, d('', c.$valid));
                e = c.$pending && c.$pending[a] ? void 0 : c.$error[a] ? !1 : c.$$success[a] ? !0 : null;
                d(a, e);
                c.$$parentForm.$setValidity(a, e, c);
            };
        }
        function Od(a) {
            if (a)
                for (var b in a)
                    if (a.hasOwnProperty(b))
                        return !1;
            return !0;
        }
        var zg = /^\/(.+)\/([a-z]*)$/, ua = Object.prototype.hasOwnProperty, P = function (a) {
                return F(a) ? a.toLowerCase() : a;
            }, sb = function (a) {
                return F(a) ? a.toUpperCase() : a;
            }, Ca, B, Z, za = [].slice, Zf = [].splice, Ag = [].push, ma = Object.prototype.toString, sc = Object.getPrototypeOf, Aa = O('ng'), ea = v.angular || (v.angular = {}), Sb, nb = 0;
        Ca = v.document.documentMode;
        C.$inject = [];
        Xa.$inject = [];
        var K = Array.isArray, $d = /^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/, V = function (a) {
                return F(a) ? a.trim() : a;
            }, vd = function (a) {
                return a.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, '\\$1').replace(/\x08/g, '\\x08');
            }, Ea = function () {
                if (!x(Ea.rules)) {
                    var a = v.document.querySelector('[ng-csp]') || v.document.querySelector('[data-ng-csp]');
                    if (a) {
                        var b = a.getAttribute('ng-csp') || a.getAttribute('data-ng-csp');
                        Ea.rules = {
                            noUnsafeEval: !b || -1 !== b.indexOf('no-unsafe-eval'),
                            noInlineStyle: !b || -1 !== b.indexOf('no-inline-style')
                        };
                    } else {
                        a = Ea;
                        try {
                            new Function(''), b = !1;
                        } catch (d) {
                            b = !0;
                        }
                        a.rules = {
                            noUnsafeEval: b,
                            noInlineStyle: !1
                        };
                    }
                }
                return Ea.rules;
            }, pb = function () {
                if (x(pb.name_))
                    return pb.name_;
                var a, b, d = Na.length, c, e;
                for (b = 0; b < d; ++b)
                    if (c = Na[b], a = v.document.querySelector('[' + c.replace(':', '\\:') + 'jq]')) {
                        e = a.getAttribute(c + 'jq');
                        break;
                    }
                return pb.name_ = e;
            }, ce = /:/g, Na = [
                'ng-',
                'data-ng-',
                'ng:',
                'x-ng-'
            ], he = /[A-Z]/g, Ac = !1, Ma = 3, le = {
                full: '1.5.5',
                major: 1,
                minor: 5,
                dot: 5,
                codeName: 'material-conspiration'
            };
        U.expando = 'ng339';
        var eb = U.cache = {}, Nf = 1;
        U._data = function (a) {
            return this.cache[a[this.expando]] || {};
        };
        var If = /([\:\-\_]+(.))/g, Jf = /^moz([A-Z])/, wb = {
                mouseleave: 'mouseout',
                mouseenter: 'mouseover'
            }, Ub = O('jqLite'), Mf = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/, Tb = /<|&#?\w+;/, Kf = /<([\w:-]+)/, Lf = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi, ia = {
                option: [
                    1,
                    '<select multiple="multiple">',
                    '</select>'
                ],
                thead: [
                    1,
                    '<table>',
                    '</table>'
                ],
                col: [
                    2,
                    '<table><colgroup>',
                    '</colgroup></table>'
                ],
                tr: [
                    2,
                    '<table><tbody>',
                    '</tbody></table>'
                ],
                td: [
                    3,
                    '<table><tbody><tr>',
                    '</tr></tbody></table>'
                ],
                _default: [
                    0,
                    '',
                    ''
                ]
            };
        ia.optgroup = ia.option;
        ia.tbody = ia.tfoot = ia.colgroup = ia.caption = ia.thead;
        ia.th = ia.td;
        var Sf = v.Node.prototype.contains || function (a) {
                return !!(this.compareDocumentPosition(a) & 16);
            }, Oa = U.prototype = {
                ready: function (a) {
                    function b() {
                        d || (d = !0, a());
                    }
                    var d = !1;
                    'complete' === v.document.readyState ? v.setTimeout(b) : (this.on('DOMContentLoaded', b), U(v).on('load', b));
                },
                toString: function () {
                    var a = [];
                    q(this, function (b) {
                        a.push('' + b);
                    });
                    return '[' + a.join(', ') + ']';
                },
                eq: function (a) {
                    return 0 <= a ? B(this[a]) : B(this[this.length + a]);
                },
                length: 0,
                push: Ag,
                sort: [].sort,
                splice: [].splice
            }, Cb = {};
        q('multiple selected checked disabled readOnly required open'.split(' '), function (a) {
            Cb[P(a)] = a;
        });
        var Sc = {};
        q('input select option textarea button form details'.split(' '), function (a) {
            Sc[a] = !0;
        });
        var ad = {
            ngMinlength: 'minlength',
            ngMaxlength: 'maxlength',
            ngMin: 'min',
            ngMax: 'max',
            ngPattern: 'pattern'
        };
        q({
            data: Wb,
            removeData: db,
            hasData: function (a) {
                for (var b in eb[a.ng339])
                    return !0;
                return !1;
            },
            cleanData: function (a) {
                for (var b = 0, d = a.length; b < d; b++)
                    db(a[b]);
            }
        }, function (a, b) {
            U[b] = a;
        });
        q({
            data: Wb,
            inheritedData: Ab,
            scope: function (a) {
                return B.data(a, '$scope') || Ab(a.parentNode || a, [
                    '$isolateScope',
                    '$scope'
                ]);
            },
            isolateScope: function (a) {
                return B.data(a, '$isolateScope') || B.data(a, '$isolateScopeNoTemplate');
            },
            controller: Pc,
            injector: function (a) {
                return Ab(a, '$injector');
            },
            removeAttr: function (a, b) {
                a.removeAttribute(b);
            },
            hasClass: xb,
            css: function (a, b, d) {
                b = cb(b);
                if (x(d))
                    a.style[b] = d;
                else
                    return a.style[b];
            },
            attr: function (a, b, d) {
                var c = a.nodeType;
                if (c !== Ma && 2 !== c && 8 !== c)
                    if (c = P(b), Cb[c])
                        if (x(d))
                            d ? (a[b] = !0, a.setAttribute(b, c)) : (a[b] = !1, a.removeAttribute(c));
                        else
                            return a[b] || (a.attributes.getNamedItem(b) || C).specified ? c : void 0;
                    else if (x(d))
                        a.setAttribute(b, d);
                    else if (a.getAttribute)
                        return a = a.getAttribute(b, 2), null === a ? void 0 : a;
            },
            prop: function (a, b, d) {
                if (x(d))
                    a[b] = d;
                else
                    return a[b];
            },
            text: function () {
                function a(a, d) {
                    if (y(d)) {
                        var c = a.nodeType;
                        return 1 === c || c === Ma ? a.textContent : '';
                    }
                    a.textContent = d;
                }
                a.$dv = '';
                return a;
            }(),
            val: function (a, b) {
                if (y(b)) {
                    if (a.multiple && 'select' === va(a)) {
                        var d = [];
                        q(a.options, function (a) {
                            a.selected && d.push(a.value || a.text);
                        });
                        return 0 === d.length ? null : d;
                    }
                    return a.value;
                }
                a.value = b;
            },
            html: function (a, b) {
                if (y(b))
                    return a.innerHTML;
                ub(a, !0);
                a.innerHTML = b;
            },
            empty: Qc
        }, function (a, b) {
            U.prototype[b] = function (b, c) {
                var e, f, g = this.length;
                if (a !== Qc && y(2 == a.length && a !== xb && a !== Pc ? b : c)) {
                    if (G(b)) {
                        for (e = 0; e < g; e++)
                            if (a === Wb)
                                a(this[e], b);
                            else
                                for (f in b)
                                    a(this[e], f, b[f]);
                        return this;
                    }
                    e = a.$dv;
                    g = y(e) ? Math.min(g, 1) : g;
                    for (f = 0; f < g; f++) {
                        var h = a(this[f], b, c);
                        e = e ? e + h : h;
                    }
                    return e;
                }
                for (e = 0; e < g; e++)
                    a(this[e], b, c);
                return this;
            };
        });
        q({
            removeData: db,
            on: function (a, b, d, c) {
                if (x(c))
                    throw Ub('onargs');
                if (Kc(a)) {
                    c = vb(a, !0);
                    var e = c.events, f = c.handle;
                    f || (f = c.handle = Pf(a, e));
                    c = 0 <= b.indexOf(' ') ? b.split(' ') : [b];
                    for (var g = c.length, h = function (b, c, g) {
                                var h = e[b];
                                h || (h = e[b] = [], h.specialHandlerWrapper = c, '$destroy' === b || g || a.addEventListener(b, f, !1));
                                h.push(d);
                            }; g--;)
                        b = c[g], wb[b] ? (h(wb[b], Rf), h(b, void 0, !0)) : h(b);
                }
            },
            off: Oc,
            one: function (a, b, d) {
                a = B(a);
                a.on(b, function e() {
                    a.off(b, d);
                    a.off(b, e);
                });
                a.on(b, d);
            },
            replaceWith: function (a, b) {
                var d, c = a.parentNode;
                ub(a);
                q(new U(b), function (b) {
                    d ? c.insertBefore(b, d.nextSibling) : c.replaceChild(b, a);
                    d = b;
                });
            },
            children: function (a) {
                var b = [];
                q(a.childNodes, function (a) {
                    1 === a.nodeType && b.push(a);
                });
                return b;
            },
            contents: function (a) {
                return a.contentDocument || a.childNodes || [];
            },
            append: function (a, b) {
                var d = a.nodeType;
                if (1 === d || 11 === d) {
                    b = new U(b);
                    for (var d = 0, c = b.length; d < c; d++)
                        a.appendChild(b[d]);
                }
            },
            prepend: function (a, b) {
                if (1 === a.nodeType) {
                    var d = a.firstChild;
                    q(new U(b), function (b) {
                        a.insertBefore(b, d);
                    });
                }
            },
            wrap: function (a, b) {
                Mc(a, B(b).eq(0).clone()[0]);
            },
            remove: Bb,
            detach: function (a) {
                Bb(a, !0);
            },
            after: function (a, b) {
                var d = a, c = a.parentNode;
                b = new U(b);
                for (var e = 0, f = b.length; e < f; e++) {
                    var g = b[e];
                    c.insertBefore(g, d.nextSibling);
                    d = g;
                }
            },
            addClass: zb,
            removeClass: yb,
            toggleClass: function (a, b, d) {
                b && q(b.split(' '), function (b) {
                    var e = d;
                    y(e) && (e = !xb(a, b));
                    (e ? zb : yb)(a, b);
                });
            },
            parent: function (a) {
                return (a = a.parentNode) && 11 !== a.nodeType ? a : null;
            },
            next: function (a) {
                return a.nextElementSibling;
            },
            find: function (a, b) {
                return a.getElementsByTagName ? a.getElementsByTagName(b) : [];
            },
            clone: Vb,
            triggerHandler: function (a, b, d) {
                var c, e, f = b.type || b, g = vb(a);
                if (g = (g = g && g.events) && g[f])
                    c = {
                        preventDefault: function () {
                            this.defaultPrevented = !0;
                        },
                        isDefaultPrevented: function () {
                            return !0 === this.defaultPrevented;
                        },
                        stopImmediatePropagation: function () {
                            this.immediatePropagationStopped = !0;
                        },
                        isImmediatePropagationStopped: function () {
                            return !0 === this.immediatePropagationStopped;
                        },
                        stopPropagation: C,
                        type: f,
                        target: a
                    }, b.type && (c = R(c, b)), b = ha(g), e = d ? [c].concat(d) : [c], q(b, function (b) {
                        c.isImmediatePropagationStopped() || b.apply(a, e);
                    });
            }
        }, function (a, b) {
            U.prototype[b] = function (b, c, e) {
                for (var f, g = 0, h = this.length; g < h; g++)
                    y(f) ? (f = a(this[g], b, c, e), x(f) && (f = B(f))) : Nc(f, a(this[g], b, c, e));
                return x(f) ? f : this;
            };
            U.prototype.bind = U.prototype.on;
            U.prototype.unbind = U.prototype.off;
        });
        Ra.prototype = {
            put: function (a, b) {
                this[Fa(a, this.nextUid)] = b;
            },
            get: function (a) {
                return this[Fa(a, this.nextUid)];
            },
            remove: function (a) {
                var b = this[a = Fa(a, this.nextUid)];
                delete this[a];
                return b;
            }
        };
        var Gf = [function () {
                    this.$get = [function () {
                            return Ra;
                        }];
                }], Uf = /^([^\(]+?)=>/, Vf = /^[^\(]*\(\s*([^\)]*)\)/m, Bg = /,/, Cg = /^\s*(_?)(\S+?)\1\s*$/, Tf = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm, Ga = O('$injector');
        bb.$$annotate = function (a, b, d) {
            var c;
            if ('function' === typeof a) {
                if (!(c = a.$inject)) {
                    c = [];
                    if (a.length) {
                        if (b)
                            throw F(d) && d || (d = a.name || Wf(a)), Ga('strictdi', d);
                        b = Tc(a);
                        q(b[1].split(Bg), function (a) {
                            a.replace(Cg, function (a, b, d) {
                                c.push(d);
                            });
                        });
                    }
                    a.$inject = c;
                }
            } else
                K(a) ? (b = a.length - 1, Pa(a[b], 'fn'), c = a.slice(0, b)) : Pa(a, 'fn', !0);
            return c;
        };
        var Qd = O('$animate'), Ze = function () {
                this.$get = C;
            }, $e = function () {
                var a = new Ra(), b = [];
                this.$get = [
                    '$$AnimateRunner',
                    '$rootScope',
                    function (d, c) {
                        function e(a, b, c) {
                            var d = !1;
                            b && (b = F(b) ? b.split(' ') : K(b) ? b : [], q(b, function (b) {
                                b && (d = !0, a[b] = c);
                            }));
                            return d;
                        }
                        function f() {
                            q(b, function (b) {
                                var c = a.get(b);
                                if (c) {
                                    var d = Xf(b.attr('class')), e = '', f = '';
                                    q(c, function (a, b) {
                                        a !== !!d[b] && (a ? e += (e.length ? ' ' : '') + b : f += (f.length ? ' ' : '') + b);
                                    });
                                    q(b, function (a) {
                                        e && zb(a, e);
                                        f && yb(a, f);
                                    });
                                    a.remove(b);
                                }
                            });
                            b.length = 0;
                        }
                        return {
                            enabled: C,
                            on: C,
                            off: C,
                            pin: C,
                            push: function (g, h, k, l) {
                                l && l();
                                k = k || {};
                                k.from && g.css(k.from);
                                k.to && g.css(k.to);
                                if (k.addClass || k.removeClass)
                                    if (h = k.addClass, l = k.removeClass, k = a.get(g) || {}, h = e(k, h, !0), l = e(k, l, !1), h || l)
                                        a.put(g, k), b.push(g), 1 === b.length && c.$$postDigest(f);
                                g = new d();
                                g.complete();
                                return g;
                            }
                        };
                    }
                ];
            }, Xe = [
                '$provide',
                function (a) {
                    var b = this;
                    this.$$registeredAnimations = Object.create(null);
                    this.register = function (d, c) {
                        if (d && '.' !== d.charAt(0))
                            throw Qd('notcsel', d);
                        var e = d + '-animation';
                        b.$$registeredAnimations[d.substr(1)] = e;
                        a.factory(e, c);
                    };
                    this.classNameFilter = function (a) {
                        if (1 === arguments.length && (this.$$classNameFilter = a instanceof RegExp ? a : null) && /(\s+|\/)ng-animate(\s+|\/)/.test(this.$$classNameFilter.toString()))
                            throw Qd('nongcls', 'ng-animate');
                        return this.$$classNameFilter;
                    };
                    this.$get = [
                        '$$animateQueue',
                        function (a) {
                            function b(a, c, d) {
                                if (d) {
                                    var h;
                                    a: {
                                        for (h = 0; h < d.length; h++) {
                                            var k = d[h];
                                            if (1 === k.nodeType) {
                                                h = k;
                                                break a;
                                            }
                                        }
                                        h = void 0;
                                    }
                                    !h || h.parentNode || h.previousElementSibling || (d = null);
                                }
                                d ? d.after(a) : c.prepend(a);
                            }
                            return {
                                on: a.on,
                                off: a.off,
                                pin: a.pin,
                                enabled: a.enabled,
                                cancel: function (a) {
                                    a.end && a.end();
                                },
                                enter: function (e, f, g, h) {
                                    f = f && B(f);
                                    g = g && B(g);
                                    f = f || g.parent();
                                    b(e, f, g);
                                    return a.push(e, 'enter', Ha(h));
                                },
                                move: function (e, f, g, h) {
                                    f = f && B(f);
                                    g = g && B(g);
                                    f = f || g.parent();
                                    b(e, f, g);
                                    return a.push(e, 'move', Ha(h));
                                },
                                leave: function (b, c) {
                                    return a.push(b, 'leave', Ha(c), function () {
                                        b.remove();
                                    });
                                },
                                addClass: function (b, c, g) {
                                    g = Ha(g);
                                    g.addClass = fb(g.addclass, c);
                                    return a.push(b, 'addClass', g);
                                },
                                removeClass: function (b, c, g) {
                                    g = Ha(g);
                                    g.removeClass = fb(g.removeClass, c);
                                    return a.push(b, 'removeClass', g);
                                },
                                setClass: function (b, c, g, h) {
                                    h = Ha(h);
                                    h.addClass = fb(h.addClass, c);
                                    h.removeClass = fb(h.removeClass, g);
                                    return a.push(b, 'setClass', h);
                                },
                                animate: function (b, c, g, h, k) {
                                    k = Ha(k);
                                    k.from = k.from ? R(k.from, c) : c;
                                    k.to = k.to ? R(k.to, g) : g;
                                    k.tempClasses = fb(k.tempClasses, h || 'ng-inline-animate');
                                    return a.push(b, 'animate', k);
                                }
                            };
                        }
                    ];
                }
            ], bf = function () {
                this.$get = [
                    '$$rAF',
                    function (a) {
                        function b(b) {
                            d.push(b);
                            1 < d.length || a(function () {
                                for (var a = 0; a < d.length; a++)
                                    d[a]();
                                d = [];
                            });
                        }
                        var d = [];
                        return function () {
                            var a = !1;
                            b(function () {
                                a = !0;
                            });
                            return function (d) {
                                a ? d() : b(d);
                            };
                        };
                    }
                ];
            }, af = function () {
                this.$get = [
                    '$q',
                    '$sniffer',
                    '$$animateAsyncRun',
                    '$document',
                    '$timeout',
                    function (a, b, d, c, e) {
                        function f(a) {
                            this.setHost(a);
                            var b = d();
                            this._doneCallbacks = [];
                            this._tick = function (a) {
                                var d = c[0];
                                d && d.hidden ? e(a, 0, !1) : b(a);
                            };
                            this._state = 0;
                        }
                        f.chain = function (a, b) {
                            function c() {
                                if (d === a.length)
                                    b(!0);
                                else
                                    a[d](function (a) {
                                        !1 === a ? b(!1) : (d++, c());
                                    });
                            }
                            var d = 0;
                            c();
                        };
                        f.all = function (a, b) {
                            function c(f) {
                                e = e && f;
                                ++d === a.length && b(e);
                            }
                            var d = 0, e = !0;
                            q(a, function (a) {
                                a.done(c);
                            });
                        };
                        f.prototype = {
                            setHost: function (a) {
                                this.host = a || {};
                            },
                            done: function (a) {
                                2 === this._state ? a() : this._doneCallbacks.push(a);
                            },
                            progress: C,
                            getPromise: function () {
                                if (!this.promise) {
                                    var b = this;
                                    this.promise = a(function (a, c) {
                                        b.done(function (b) {
                                            !1 === b ? c() : a();
                                        });
                                    });
                                }
                                return this.promise;
                            },
                            then: function (a, b) {
                                return this.getPromise().then(a, b);
                            },
                            'catch': function (a) {
                                return this.getPromise()['catch'](a);
                            },
                            'finally': function (a) {
                                return this.getPromise()['finally'](a);
                            },
                            pause: function () {
                                this.host.pause && this.host.pause();
                            },
                            resume: function () {
                                this.host.resume && this.host.resume();
                            },
                            end: function () {
                                this.host.end && this.host.end();
                                this._resolve(!0);
                            },
                            cancel: function () {
                                this.host.cancel && this.host.cancel();
                                this._resolve(!1);
                            },
                            complete: function (a) {
                                var b = this;
                                0 === b._state && (b._state = 1, b._tick(function () {
                                    b._resolve(a);
                                }));
                            },
                            _resolve: function (a) {
                                2 !== this._state && (q(this._doneCallbacks, function (b) {
                                    b(a);
                                }), this._doneCallbacks.length = 0, this._state = 2);
                            }
                        };
                        return f;
                    }
                ];
            }, Ye = function () {
                this.$get = [
                    '$$rAF',
                    '$q',
                    '$$AnimateRunner',
                    function (a, b, d) {
                        return function (b, e) {
                            function f() {
                                a(function () {
                                    g.addClass && (b.addClass(g.addClass), g.addClass = null);
                                    g.removeClass && (b.removeClass(g.removeClass), g.removeClass = null);
                                    g.to && (b.css(g.to), g.to = null);
                                    h || k.complete();
                                    h = !0;
                                });
                                return k;
                            }
                            var g = e || {};
                            g.$$prepared || (g = qa(g));
                            g.cleanupStyles && (g.from = g.to = null);
                            g.from && (b.css(g.from), g.from = null);
                            var h, k = new d();
                            return {
                                start: f,
                                end: f
                            };
                        };
                    }
                ];
            }, ga = O('$compile'), Zb = new function () {
            }();
        Cc.$inject = [
            '$provide',
            '$$sanitizeUriProvider'
        ];
        Db.prototype.isFirstChange = function () {
            return this.previousValue === Zb;
        };
        var Vc = /^((?:x|data)[\:\-_])/i, $f = O('$controller'), bd = /^(\S+)(\s+as\s+([\w$]+))?$/, hf = function () {
                this.$get = [
                    '$document',
                    function (a) {
                        return function (b) {
                            b ? !b.nodeType && b instanceof B && (b = b[0]) : b = a[0].body;
                            return b.offsetWidth + 1;
                        };
                    }
                ];
            }, cd = 'application/json', bc = { 'Content-Type': cd + ';charset=utf-8' }, bg = /^\[|^\{(?!\{)/, cg = {
                '[': /]$/,
                '{': /}$/
            }, ag = /^\)\]\}',?\n/, Dg = O('$http'), gd = function (a) {
                return function () {
                    throw Dg('legacy', a);
                };
            }, Ja = ea.$interpolateMinErr = O('$interpolate');
        Ja.throwNoconcat = function (a) {
            throw Ja('noconcat', a);
        };
        Ja.interr = function (a, b) {
            return Ja('interr', a, b.toString());
        };
        var Eg = /^([^\?#]*)(\?([^#]*))?(#(.*))?$/, eg = {
                http: 80,
                https: 443,
                ftp: 21
            }, Eb = O('$location'), Fg = {
                $$html5: !1,
                $$replace: !1,
                absUrl: Fb('$$absUrl'),
                url: function (a) {
                    if (y(a))
                        return this.$$url;
                    var b = Eg.exec(a);
                    (b[1] || '' === a) && this.path(decodeURIComponent(b[1]));
                    (b[2] || b[1] || '' === a) && this.search(b[3] || '');
                    this.hash(b[5] || '');
                    return this;
                },
                protocol: Fb('$$protocol'),
                host: Fb('$$host'),
                port: Fb('$$port'),
                path: ld('$$path', function (a) {
                    a = null !== a ? a.toString() : '';
                    return '/' == a.charAt(0) ? a : '/' + a;
                }),
                search: function (a, b) {
                    switch (arguments.length) {
                    case 0:
                        return this.$$search;
                    case 1:
                        if (F(a) || Q(a))
                            a = a.toString(), this.$$search = xc(a);
                        else if (G(a))
                            a = qa(a, {}), q(a, function (b, c) {
                                null == b && delete a[c];
                            }), this.$$search = a;
                        else
                            throw Eb('isrcharg');
                        break;
                    default:
                        y(b) || null === b ? delete this.$$search[a] : this.$$search[a] = b;
                    }
                    this.$$compose();
                    return this;
                },
                hash: ld('$$hash', function (a) {
                    return null !== a ? a.toString() : '';
                }),
                replace: function () {
                    this.$$replace = !0;
                    return this;
                }
            };
        q([
            kd,
            ec,
            dc
        ], function (a) {
            a.prototype = Object.create(Fg);
            a.prototype.state = function (b) {
                if (!arguments.length)
                    return this.$$state;
                if (a !== dc || !this.$$html5)
                    throw Eb('nostate');
                this.$$state = y(b) ? null : b;
                return this;
            };
        });
        var ca = O('$parse'), gg = Function.prototype.call, hg = Function.prototype.apply, ig = Function.prototype.bind, Mb = T();
        q('+ - * / % === !== == != < > <= >= && || ! = |'.split(' '), function (a) {
            Mb[a] = !0;
        });
        var Gg = {
                n: '\n',
                f: '\f',
                r: '\r',
                t: '\t',
                v: '\x0B',
                '\'': '\'',
                '"': '"'
            }, gc = function (a) {
                this.options = a;
            };
        gc.prototype = {
            constructor: gc,
            lex: function (a) {
                this.text = a;
                this.index = 0;
                for (this.tokens = []; this.index < this.text.length;)
                    if (a = this.text.charAt(this.index), '"' === a || '\'' === a)
                        this.readString(a);
                    else if (this.isNumber(a) || '.' === a && this.isNumber(this.peek()))
                        this.readNumber();
                    else if (this.isIdentifierStart(this.peekMultichar()))
                        this.readIdent();
                    else if (this.is(a, '(){}[].,;:?'))
                        this.tokens.push({
                            index: this.index,
                            text: a
                        }), this.index++;
                    else if (this.isWhitespace(a))
                        this.index++;
                    else {
                        var b = a + this.peek(), d = b + this.peek(2), c = Mb[b], e = Mb[d];
                        Mb[a] || c || e ? (a = e ? d : c ? b : a, this.tokens.push({
                            index: this.index,
                            text: a,
                            operator: !0
                        }), this.index += a.length) : this.throwError('Unexpected next character ', this.index, this.index + 1);
                    }
                return this.tokens;
            },
            is: function (a, b) {
                return -1 !== b.indexOf(a);
            },
            peek: function (a) {
                a = a || 1;
                return this.index + a < this.text.length ? this.text.charAt(this.index + a) : !1;
            },
            isNumber: function (a) {
                return '0' <= a && '9' >= a && 'string' === typeof a;
            },
            isWhitespace: function (a) {
                return ' ' === a || '\r' === a || '\t' === a || '\n' === a || '\x0B' === a || '\xA0' === a;
            },
            isIdentifierStart: function (a) {
                return this.options.isIdentifierStart ? this.options.isIdentifierStart(a, this.codePointAt(a)) : this.isValidIdentifierStart(a);
            },
            isValidIdentifierStart: function (a) {
                return 'a' <= a && 'z' >= a || 'A' <= a && 'Z' >= a || '_' === a || '$' === a;
            },
            isIdentifierContinue: function (a) {
                return this.options.isIdentifierContinue ? this.options.isIdentifierContinue(a, this.codePointAt(a)) : this.isValidIdentifierContinue(a);
            },
            isValidIdentifierContinue: function (a, b) {
                return this.isValidIdentifierStart(a, b) || this.isNumber(a);
            },
            codePointAt: function (a) {
                return 1 === a.length ? a.charCodeAt(0) : (a.charCodeAt(0) << 10) + a.charCodeAt(1) - 56613888;
            },
            peekMultichar: function () {
                var a = this.text.charAt(this.index), b = this.peek();
                if (!b)
                    return a;
                var d = a.charCodeAt(0), c = b.charCodeAt(0);
                return 55296 <= d && 56319 >= d && 56320 <= c && 57343 >= c ? a + b : a;
            },
            isExpOperator: function (a) {
                return '-' === a || '+' === a || this.isNumber(a);
            },
            throwError: function (a, b, d) {
                d = d || this.index;
                b = x(b) ? 's ' + b + '-' + this.index + ' [' + this.text.substring(b, d) + ']' : ' ' + d;
                throw ca('lexerr', a, b, this.text);
            },
            readNumber: function () {
                for (var a = '', b = this.index; this.index < this.text.length;) {
                    var d = P(this.text.charAt(this.index));
                    if ('.' == d || this.isNumber(d))
                        a += d;
                    else {
                        var c = this.peek();
                        if ('e' == d && this.isExpOperator(c))
                            a += d;
                        else if (this.isExpOperator(d) && c && this.isNumber(c) && 'e' == a.charAt(a.length - 1))
                            a += d;
                        else if (!this.isExpOperator(d) || c && this.isNumber(c) || 'e' != a.charAt(a.length - 1))
                            break;
                        else
                            this.throwError('Invalid exponent');
                    }
                    this.index++;
                }
                this.tokens.push({
                    index: b,
                    text: a,
                    constant: !0,
                    value: Number(a)
                });
            },
            readIdent: function () {
                var a = this.index;
                for (this.index += this.peekMultichar().length; this.index < this.text.length;) {
                    var b = this.peekMultichar();
                    if (!this.isIdentifierContinue(b))
                        break;
                    this.index += b.length;
                }
                this.tokens.push({
                    index: a,
                    text: this.text.slice(a, this.index),
                    identifier: !0
                });
            },
            readString: function (a) {
                var b = this.index;
                this.index++;
                for (var d = '', c = a, e = !1; this.index < this.text.length;) {
                    var f = this.text.charAt(this.index), c = c + f;
                    if (e)
                        'u' === f ? (e = this.text.substring(this.index + 1, this.index + 5), e.match(/[\da-f]{4}/i) || this.throwError('Invalid unicode escape [\\u' + e + ']'), this.index += 4, d += String.fromCharCode(parseInt(e, 16))) : d += Gg[f] || f, e = !1;
                    else if ('\\' === f)
                        e = !0;
                    else {
                        if (f === a) {
                            this.index++;
                            this.tokens.push({
                                index: b,
                                text: c,
                                constant: !0,
                                value: d
                            });
                            return;
                        }
                        d += f;
                    }
                    this.index++;
                }
                this.throwError('Unterminated quote', b);
            }
        };
        var s = function (a, b) {
            this.lexer = a;
            this.options = b;
        };
        s.Program = 'Program';
        s.ExpressionStatement = 'ExpressionStatement';
        s.AssignmentExpression = 'AssignmentExpression';
        s.ConditionalExpression = 'ConditionalExpression';
        s.LogicalExpression = 'LogicalExpression';
        s.BinaryExpression = 'BinaryExpression';
        s.UnaryExpression = 'UnaryExpression';
        s.CallExpression = 'CallExpression';
        s.MemberExpression = 'MemberExpression';
        s.Identifier = 'Identifier';
        s.Literal = 'Literal';
        s.ArrayExpression = 'ArrayExpression';
        s.Property = 'Property';
        s.ObjectExpression = 'ObjectExpression';
        s.ThisExpression = 'ThisExpression';
        s.LocalsExpression = 'LocalsExpression';
        s.NGValueParameter = 'NGValueParameter';
        s.prototype = {
            ast: function (a) {
                this.text = a;
                this.tokens = this.lexer.lex(a);
                a = this.program();
                0 !== this.tokens.length && this.throwError('is an unexpected token', this.tokens[0]);
                return a;
            },
            program: function () {
                for (var a = [];;)
                    if (0 < this.tokens.length && !this.peek('}', ')', ';', ']') && a.push(this.expressionStatement()), !this.expect(';'))
                        return {
                            type: s.Program,
                            body: a
                        };
            },
            expressionStatement: function () {
                return {
                    type: s.ExpressionStatement,
                    expression: this.filterChain()
                };
            },
            filterChain: function () {
                for (var a = this.expression(); this.expect('|');)
                    a = this.filter(a);
                return a;
            },
            expression: function () {
                return this.assignment();
            },
            assignment: function () {
                var a = this.ternary();
                this.expect('=') && (a = {
                    type: s.AssignmentExpression,
                    left: a,
                    right: this.assignment(),
                    operator: '='
                });
                return a;
            },
            ternary: function () {
                var a = this.logicalOR(), b, d;
                return this.expect('?') && (b = this.expression(), this.consume(':')) ? (d = this.expression(), {
                    type: s.ConditionalExpression,
                    test: a,
                    alternate: b,
                    consequent: d
                }) : a;
            },
            logicalOR: function () {
                for (var a = this.logicalAND(); this.expect('||');)
                    a = {
                        type: s.LogicalExpression,
                        operator: '||',
                        left: a,
                        right: this.logicalAND()
                    };
                return a;
            },
            logicalAND: function () {
                for (var a = this.equality(); this.expect('&&');)
                    a = {
                        type: s.LogicalExpression,
                        operator: '&&',
                        left: a,
                        right: this.equality()
                    };
                return a;
            },
            equality: function () {
                for (var a = this.relational(), b; b = this.expect('==', '!=', '===', '!==');)
                    a = {
                        type: s.BinaryExpression,
                        operator: b.text,
                        left: a,
                        right: this.relational()
                    };
                return a;
            },
            relational: function () {
                for (var a = this.additive(), b; b = this.expect('<', '>', '<=', '>=');)
                    a = {
                        type: s.BinaryExpression,
                        operator: b.text,
                        left: a,
                        right: this.additive()
                    };
                return a;
            },
            additive: function () {
                for (var a = this.multiplicative(), b; b = this.expect('+', '-');)
                    a = {
                        type: s.BinaryExpression,
                        operator: b.text,
                        left: a,
                        right: this.multiplicative()
                    };
                return a;
            },
            multiplicative: function () {
                for (var a = this.unary(), b; b = this.expect('*', '/', '%');)
                    a = {
                        type: s.BinaryExpression,
                        operator: b.text,
                        left: a,
                        right: this.unary()
                    };
                return a;
            },
            unary: function () {
                var a;
                return (a = this.expect('+', '-', '!')) ? {
                    type: s.UnaryExpression,
                    operator: a.text,
                    prefix: !0,
                    argument: this.unary()
                } : this.primary();
            },
            primary: function () {
                var a;
                this.expect('(') ? (a = this.filterChain(), this.consume(')')) : this.expect('[') ? a = this.arrayDeclaration() : this.expect('{') ? a = this.object() : this.selfReferential.hasOwnProperty(this.peek().text) ? a = qa(this.selfReferential[this.consume().text]) : this.options.literals.hasOwnProperty(this.peek().text) ? a = {
                    type: s.Literal,
                    value: this.options.literals[this.consume().text]
                } : this.peek().identifier ? a = this.identifier() : this.peek().constant ? a = this.constant() : this.throwError('not a primary expression', this.peek());
                for (var b; b = this.expect('(', '[', '.');)
                    '(' === b.text ? (a = {
                        type: s.CallExpression,
                        callee: a,
                        arguments: this.parseArguments()
                    }, this.consume(')')) : '[' === b.text ? (a = {
                        type: s.MemberExpression,
                        object: a,
                        property: this.expression(),
                        computed: !0
                    }, this.consume(']')) : '.' === b.text ? a = {
                        type: s.MemberExpression,
                        object: a,
                        property: this.identifier(),
                        computed: !1
                    } : this.throwError('IMPOSSIBLE');
                return a;
            },
            filter: function (a) {
                a = [a];
                for (var b = {
                        type: s.CallExpression,
                        callee: this.identifier(),
                        arguments: a,
                        filter: !0
                    }; this.expect(':');)
                    a.push(this.expression());
                return b;
            },
            parseArguments: function () {
                var a = [];
                if (')' !== this.peekToken().text) {
                    do
                        a.push(this.expression());
                    while (this.expect(','));
                }
                return a;
            },
            identifier: function () {
                var a = this.consume();
                a.identifier || this.throwError('is not a valid identifier', a);
                return {
                    type: s.Identifier,
                    name: a.text
                };
            },
            constant: function () {
                return {
                    type: s.Literal,
                    value: this.consume().value
                };
            },
            arrayDeclaration: function () {
                var a = [];
                if (']' !== this.peekToken().text) {
                    do {
                        if (this.peek(']'))
                            break;
                        a.push(this.expression());
                    } while (this.expect(','));
                }
                this.consume(']');
                return {
                    type: s.ArrayExpression,
                    elements: a
                };
            },
            object: function () {
                var a = [], b;
                if ('}' !== this.peekToken().text) {
                    do {
                        if (this.peek('}'))
                            break;
                        b = {
                            type: s.Property,
                            kind: 'init'
                        };
                        this.peek().constant ? b.key = this.constant() : this.peek().identifier ? b.key = this.identifier() : this.throwError('invalid key', this.peek());
                        this.consume(':');
                        b.value = this.expression();
                        a.push(b);
                    } while (this.expect(','));
                }
                this.consume('}');
                return {
                    type: s.ObjectExpression,
                    properties: a
                };
            },
            throwError: function (a, b) {
                throw ca('syntax', b.text, a, b.index + 1, this.text, this.text.substring(b.index));
            },
            consume: function (a) {
                if (0 === this.tokens.length)
                    throw ca('ueoe', this.text);
                var b = this.expect(a);
                b || this.throwError('is unexpected, expecting [' + a + ']', this.peek());
                return b;
            },
            peekToken: function () {
                if (0 === this.tokens.length)
                    throw ca('ueoe', this.text);
                return this.tokens[0];
            },
            peek: function (a, b, d, c) {
                return this.peekAhead(0, a, b, d, c);
            },
            peekAhead: function (a, b, d, c, e) {
                if (this.tokens.length > a) {
                    a = this.tokens[a];
                    var f = a.text;
                    if (f === b || f === d || f === c || f === e || !(b || d || c || e))
                        return a;
                }
                return !1;
            },
            expect: function (a, b, d, c) {
                return (a = this.peek(a, b, d, c)) ? (this.tokens.shift(), a) : !1;
            },
            selfReferential: {
                'this': { type: s.ThisExpression },
                $locals: { type: s.LocalsExpression }
            }
        };
        sd.prototype = {
            compile: function (a, b) {
                var d = this, c = this.astBuilder.ast(a);
                this.state = {
                    nextId: 0,
                    filters: {},
                    expensiveChecks: b,
                    fn: {
                        vars: [],
                        body: [],
                        own: {}
                    },
                    assign: {
                        vars: [],
                        body: [],
                        own: {}
                    },
                    inputs: []
                };
                aa(c, d.$filter);
                var e = '', f;
                this.stage = 'assign';
                if (f = qd(c))
                    this.state.computing = 'assign', e = this.nextId(), this.recurse(f, e), this.return_(e), e = 'fn.assign=' + this.generateFunction('assign', 's,v,l');
                f = od(c.body);
                d.stage = 'inputs';
                q(f, function (a, b) {
                    var c = 'fn' + b;
                    d.state[c] = {
                        vars: [],
                        body: [],
                        own: {}
                    };
                    d.state.computing = c;
                    var e = d.nextId();
                    d.recurse(a, e);
                    d.return_(e);
                    d.state.inputs.push(c);
                    a.watchId = b;
                });
                this.state.computing = 'fn';
                this.stage = 'main';
                this.recurse(c);
                e = '"' + this.USE + ' ' + this.STRICT + '";\n' + this.filterPrefix() + 'var fn=' + this.generateFunction('fn', 's,l,a,i') + e + this.watchFns() + 'return fn;';
                e = new Function('$filter', 'ensureSafeMemberName', 'ensureSafeObject', 'ensureSafeFunction', 'getStringValue', 'ensureSafeAssignContext', 'ifDefined', 'plus', 'text', e)(this.$filter, Ta, sa, md, fg, Gb, jg, nd, a);
                this.state = this.stage = void 0;
                e.literal = rd(c);
                e.constant = c.constant;
                return e;
            },
            USE: 'use',
            STRICT: 'strict',
            watchFns: function () {
                var a = [], b = this.state.inputs, d = this;
                q(b, function (b) {
                    a.push('var ' + b + '=' + d.generateFunction(b, 's'));
                });
                b.length && a.push('fn.inputs=[' + b.join(',') + '];');
                return a.join('');
            },
            generateFunction: function (a, b) {
                return 'function(' + b + '){' + this.varsPrefix(a) + this.body(a) + '};';
            },
            filterPrefix: function () {
                var a = [], b = this;
                q(this.state.filters, function (d, c) {
                    a.push(d + '=$filter(' + b.escape(c) + ')');
                });
                return a.length ? 'var ' + a.join(',') + ';' : '';
            },
            varsPrefix: function (a) {
                return this.state[a].vars.length ? 'var ' + this.state[a].vars.join(',') + ';' : '';
            },
            body: function (a) {
                return this.state[a].body.join('');
            },
            recurse: function (a, b, d, c, e, f) {
                var g, h, k = this, l, n;
                c = c || C;
                if (!f && x(a.watchId))
                    b = b || this.nextId(), this.if_('i', this.lazyAssign(b, this.computedMember('i', a.watchId)), this.lazyRecurse(a, b, d, c, e, !0));
                else
                    switch (a.type) {
                    case s.Program:
                        q(a.body, function (b, c) {
                            k.recurse(b.expression, void 0, void 0, function (a) {
                                h = a;
                            });
                            c !== a.body.length - 1 ? k.current().body.push(h, ';') : k.return_(h);
                        });
                        break;
                    case s.Literal:
                        n = this.escape(a.value);
                        this.assign(b, n);
                        c(n);
                        break;
                    case s.UnaryExpression:
                        this.recurse(a.argument, void 0, void 0, function (a) {
                            h = a;
                        });
                        n = a.operator + '(' + this.ifDefined(h, 0) + ')';
                        this.assign(b, n);
                        c(n);
                        break;
                    case s.BinaryExpression:
                        this.recurse(a.left, void 0, void 0, function (a) {
                            g = a;
                        });
                        this.recurse(a.right, void 0, void 0, function (a) {
                            h = a;
                        });
                        n = '+' === a.operator ? this.plus(g, h) : '-' === a.operator ? this.ifDefined(g, 0) + a.operator + this.ifDefined(h, 0) : '(' + g + ')' + a.operator + '(' + h + ')';
                        this.assign(b, n);
                        c(n);
                        break;
                    case s.LogicalExpression:
                        b = b || this.nextId();
                        k.recurse(a.left, b);
                        k.if_('&&' === a.operator ? b : k.not(b), k.lazyRecurse(a.right, b));
                        c(b);
                        break;
                    case s.ConditionalExpression:
                        b = b || this.nextId();
                        k.recurse(a.test, b);
                        k.if_(b, k.lazyRecurse(a.alternate, b), k.lazyRecurse(a.consequent, b));
                        c(b);
                        break;
                    case s.Identifier:
                        b = b || this.nextId();
                        d && (d.context = 'inputs' === k.stage ? 's' : this.assign(this.nextId(), this.getHasOwnProperty('l', a.name) + '?l:s'), d.computed = !1, d.name = a.name);
                        Ta(a.name);
                        k.if_('inputs' === k.stage || k.not(k.getHasOwnProperty('l', a.name)), function () {
                            k.if_('inputs' === k.stage || 's', function () {
                                e && 1 !== e && k.if_(k.not(k.nonComputedMember('s', a.name)), k.lazyAssign(k.nonComputedMember('s', a.name), '{}'));
                                k.assign(b, k.nonComputedMember('s', a.name));
                            });
                        }, b && k.lazyAssign(b, k.nonComputedMember('l', a.name)));
                        (k.state.expensiveChecks || Hb(a.name)) && k.addEnsureSafeObject(b);
                        c(b);
                        break;
                    case s.MemberExpression:
                        g = d && (d.context = this.nextId()) || this.nextId();
                        b = b || this.nextId();
                        k.recurse(a.object, g, void 0, function () {
                            k.if_(k.notNull(g), function () {
                                e && 1 !== e && k.addEnsureSafeAssignContext(g);
                                if (a.computed)
                                    h = k.nextId(), k.recurse(a.property, h), k.getStringValue(h), k.addEnsureSafeMemberName(h), e && 1 !== e && k.if_(k.not(k.computedMember(g, h)), k.lazyAssign(k.computedMember(g, h), '{}')), n = k.ensureSafeObject(k.computedMember(g, h)), k.assign(b, n), d && (d.computed = !0, d.name = h);
                                else {
                                    Ta(a.property.name);
                                    e && 1 !== e && k.if_(k.not(k.nonComputedMember(g, a.property.name)), k.lazyAssign(k.nonComputedMember(g, a.property.name), '{}'));
                                    n = k.nonComputedMember(g, a.property.name);
                                    if (k.state.expensiveChecks || Hb(a.property.name))
                                        n = k.ensureSafeObject(n);
                                    k.assign(b, n);
                                    d && (d.computed = !1, d.name = a.property.name);
                                }
                            }, function () {
                                k.assign(b, 'undefined');
                            });
                            c(b);
                        }, !!e);
                        break;
                    case s.CallExpression:
                        b = b || this.nextId();
                        a.filter ? (h = k.filter(a.callee.name), l = [], q(a.arguments, function (a) {
                            var b = k.nextId();
                            k.recurse(a, b);
                            l.push(b);
                        }), n = h + '(' + l.join(',') + ')', k.assign(b, n), c(b)) : (h = k.nextId(), g = {}, l = [], k.recurse(a.callee, h, g, function () {
                            k.if_(k.notNull(h), function () {
                                k.addEnsureSafeFunction(h);
                                q(a.arguments, function (a) {
                                    k.recurse(a, k.nextId(), void 0, function (a) {
                                        l.push(k.ensureSafeObject(a));
                                    });
                                });
                                g.name ? (k.state.expensiveChecks || k.addEnsureSafeObject(g.context), n = k.member(g.context, g.name, g.computed) + '(' + l.join(',') + ')') : n = h + '(' + l.join(',') + ')';
                                n = k.ensureSafeObject(n);
                                k.assign(b, n);
                            }, function () {
                                k.assign(b, 'undefined');
                            });
                            c(b);
                        }));
                        break;
                    case s.AssignmentExpression:
                        h = this.nextId();
                        g = {};
                        if (!pd(a.left))
                            throw ca('lval');
                        this.recurse(a.left, void 0, g, function () {
                            k.if_(k.notNull(g.context), function () {
                                k.recurse(a.right, h);
                                k.addEnsureSafeObject(k.member(g.context, g.name, g.computed));
                                k.addEnsureSafeAssignContext(g.context);
                                n = k.member(g.context, g.name, g.computed) + a.operator + h;
                                k.assign(b, n);
                                c(b || n);
                            });
                        }, 1);
                        break;
                    case s.ArrayExpression:
                        l = [];
                        q(a.elements, function (a) {
                            k.recurse(a, k.nextId(), void 0, function (a) {
                                l.push(a);
                            });
                        });
                        n = '[' + l.join(',') + ']';
                        this.assign(b, n);
                        c(n);
                        break;
                    case s.ObjectExpression:
                        l = [];
                        q(a.properties, function (a) {
                            k.recurse(a.value, k.nextId(), void 0, function (b) {
                                l.push(k.escape(a.key.type === s.Identifier ? a.key.name : '' + a.key.value) + ':' + b);
                            });
                        });
                        n = '{' + l.join(',') + '}';
                        this.assign(b, n);
                        c(n);
                        break;
                    case s.ThisExpression:
                        this.assign(b, 's');
                        c('s');
                        break;
                    case s.LocalsExpression:
                        this.assign(b, 'l');
                        c('l');
                        break;
                    case s.NGValueParameter:
                        this.assign(b, 'v'), c('v');
                    }
            },
            getHasOwnProperty: function (a, b) {
                var d = a + '.' + b, c = this.current().own;
                c.hasOwnProperty(d) || (c[d] = this.nextId(!1, a + '&&(' + this.escape(b) + ' in ' + a + ')'));
                return c[d];
            },
            assign: function (a, b) {
                if (a)
                    return this.current().body.push(a, '=', b, ';'), a;
            },
            filter: function (a) {
                this.state.filters.hasOwnProperty(a) || (this.state.filters[a] = this.nextId(!0));
                return this.state.filters[a];
            },
            ifDefined: function (a, b) {
                return 'ifDefined(' + a + ',' + this.escape(b) + ')';
            },
            plus: function (a, b) {
                return 'plus(' + a + ',' + b + ')';
            },
            return_: function (a) {
                this.current().body.push('return ', a, ';');
            },
            if_: function (a, b, d) {
                if (!0 === a)
                    b();
                else {
                    var c = this.current().body;
                    c.push('if(', a, '){');
                    b();
                    c.push('}');
                    d && (c.push('else{'), d(), c.push('}'));
                }
            },
            not: function (a) {
                return '!(' + a + ')';
            },
            notNull: function (a) {
                return a + '!=null';
            },
            nonComputedMember: function (a, b) {
                var d = /[^$_a-zA-Z0-9]/g;
                return /[$_a-zA-Z][$_a-zA-Z0-9]*/.test(b) ? a + '.' + b : a + '["' + b.replace(d, this.stringEscapeFn) + '"]';
            },
            computedMember: function (a, b) {
                return a + '[' + b + ']';
            },
            member: function (a, b, d) {
                return d ? this.computedMember(a, b) : this.nonComputedMember(a, b);
            },
            addEnsureSafeObject: function (a) {
                this.current().body.push(this.ensureSafeObject(a), ';');
            },
            addEnsureSafeMemberName: function (a) {
                this.current().body.push(this.ensureSafeMemberName(a), ';');
            },
            addEnsureSafeFunction: function (a) {
                this.current().body.push(this.ensureSafeFunction(a), ';');
            },
            addEnsureSafeAssignContext: function (a) {
                this.current().body.push(this.ensureSafeAssignContext(a), ';');
            },
            ensureSafeObject: function (a) {
                return 'ensureSafeObject(' + a + ',text)';
            },
            ensureSafeMemberName: function (a) {
                return 'ensureSafeMemberName(' + a + ',text)';
            },
            ensureSafeFunction: function (a) {
                return 'ensureSafeFunction(' + a + ',text)';
            },
            getStringValue: function (a) {
                this.assign(a, 'getStringValue(' + a + ')');
            },
            ensureSafeAssignContext: function (a) {
                return 'ensureSafeAssignContext(' + a + ',text)';
            },
            lazyRecurse: function (a, b, d, c, e, f) {
                var g = this;
                return function () {
                    g.recurse(a, b, d, c, e, f);
                };
            },
            lazyAssign: function (a, b) {
                var d = this;
                return function () {
                    d.assign(a, b);
                };
            },
            stringEscapeRegex: /[^ a-zA-Z0-9]/g,
            stringEscapeFn: function (a) {
                return '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
            },
            escape: function (a) {
                if (F(a))
                    return '\'' + a.replace(this.stringEscapeRegex, this.stringEscapeFn) + '\'';
                if (Q(a))
                    return a.toString();
                if (!0 === a)
                    return 'true';
                if (!1 === a)
                    return 'false';
                if (null === a)
                    return 'null';
                if ('undefined' === typeof a)
                    return 'undefined';
                throw ca('esc');
            },
            nextId: function (a, b) {
                var d = 'v' + this.state.nextId++;
                a || this.current().vars.push(d + (b ? '=' + b : ''));
                return d;
            },
            current: function () {
                return this.state[this.state.computing];
            }
        };
        td.prototype = {
            compile: function (a, b) {
                var d = this, c = this.astBuilder.ast(a);
                this.expression = a;
                this.expensiveChecks = b;
                aa(c, d.$filter);
                var e, f;
                if (e = qd(c))
                    f = this.recurse(e);
                e = od(c.body);
                var g;
                e && (g = [], q(e, function (a, b) {
                    var c = d.recurse(a);
                    a.input = c;
                    g.push(c);
                    a.watchId = b;
                }));
                var h = [];
                q(c.body, function (a) {
                    h.push(d.recurse(a.expression));
                });
                e = 0 === c.body.length ? C : 1 === c.body.length ? h[0] : function (a, b) {
                    var c;
                    q(h, function (d) {
                        c = d(a, b);
                    });
                    return c;
                };
                f && (e.assign = function (a, b, c) {
                    return f(a, c, b);
                });
                g && (e.inputs = g);
                e.literal = rd(c);
                e.constant = c.constant;
                return e;
            },
            recurse: function (a, b, d) {
                var c, e, f = this, g;
                if (a.input)
                    return this.inputs(a.input, a.watchId);
                switch (a.type) {
                case s.Literal:
                    return this.value(a.value, b);
                case s.UnaryExpression:
                    return e = this.recurse(a.argument), this['unary' + a.operator](e, b);
                case s.BinaryExpression:
                    return c = this.recurse(a.left), e = this.recurse(a.right), this['binary' + a.operator](c, e, b);
                case s.LogicalExpression:
                    return c = this.recurse(a.left), e = this.recurse(a.right), this['binary' + a.operator](c, e, b);
                case s.ConditionalExpression:
                    return this['ternary?:'](this.recurse(a.test), this.recurse(a.alternate), this.recurse(a.consequent), b);
                case s.Identifier:
                    return Ta(a.name, f.expression), f.identifier(a.name, f.expensiveChecks || Hb(a.name), b, d, f.expression);
                case s.MemberExpression:
                    return c = this.recurse(a.object, !1, !!d), a.computed || (Ta(a.property.name, f.expression), e = a.property.name), a.computed && (e = this.recurse(a.property)), a.computed ? this.computedMember(c, e, b, d, f.expression) : this.nonComputedMember(c, e, f.expensiveChecks, b, d, f.expression);
                case s.CallExpression:
                    return g = [], q(a.arguments, function (a) {
                        g.push(f.recurse(a));
                    }), a.filter && (e = this.$filter(a.callee.name)), a.filter || (e = this.recurse(a.callee, !0)), a.filter ? function (a, c, d, f) {
                        for (var m = [], r = 0; r < g.length; ++r)
                            m.push(g[r](a, c, d, f));
                        a = e.apply(void 0, m, f);
                        return b ? {
                            context: void 0,
                            name: void 0,
                            value: a
                        } : a;
                    } : function (a, c, d, n) {
                        var m = e(a, c, d, n), r;
                        if (null != m.value) {
                            sa(m.context, f.expression);
                            md(m.value, f.expression);
                            r = [];
                            for (var q = 0; q < g.length; ++q)
                                r.push(sa(g[q](a, c, d, n), f.expression));
                            r = sa(m.value.apply(m.context, r), f.expression);
                        }
                        return b ? { value: r } : r;
                    };
                case s.AssignmentExpression:
                    return c = this.recurse(a.left, !0, 1), e = this.recurse(a.right), function (a, d, g, n) {
                        var m = c(a, d, g, n);
                        a = e(a, d, g, n);
                        sa(m.value, f.expression);
                        Gb(m.context);
                        m.context[m.name] = a;
                        return b ? { value: a } : a;
                    };
                case s.ArrayExpression:
                    return g = [], q(a.elements, function (a) {
                        g.push(f.recurse(a));
                    }), function (a, c, d, e) {
                        for (var f = [], r = 0; r < g.length; ++r)
                            f.push(g[r](a, c, d, e));
                        return b ? { value: f } : f;
                    };
                case s.ObjectExpression:
                    return g = [], q(a.properties, function (a) {
                        g.push({
                            key: a.key.type === s.Identifier ? a.key.name : '' + a.key.value,
                            value: f.recurse(a.value)
                        });
                    }), function (a, c, d, e) {
                        for (var f = {}, r = 0; r < g.length; ++r)
                            f[g[r].key] = g[r].value(a, c, d, e);
                        return b ? { value: f } : f;
                    };
                case s.ThisExpression:
                    return function (a) {
                        return b ? { value: a } : a;
                    };
                case s.LocalsExpression:
                    return function (a, c) {
                        return b ? { value: c } : c;
                    };
                case s.NGValueParameter:
                    return function (a, c, d) {
                        return b ? { value: d } : d;
                    };
                }
            },
            'unary+': function (a, b) {
                return function (d, c, e, f) {
                    d = a(d, c, e, f);
                    d = x(d) ? +d : 0;
                    return b ? { value: d } : d;
                };
            },
            'unary-': function (a, b) {
                return function (d, c, e, f) {
                    d = a(d, c, e, f);
                    d = x(d) ? -d : 0;
                    return b ? { value: d } : d;
                };
            },
            'unary!': function (a, b) {
                return function (d, c, e, f) {
                    d = !a(d, c, e, f);
                    return b ? { value: d } : d;
                };
            },
            'binary+': function (a, b, d) {
                return function (c, e, f, g) {
                    var h = a(c, e, f, g);
                    c = b(c, e, f, g);
                    h = nd(h, c);
                    return d ? { value: h } : h;
                };
            },
            'binary-': function (a, b, d) {
                return function (c, e, f, g) {
                    var h = a(c, e, f, g);
                    c = b(c, e, f, g);
                    h = (x(h) ? h : 0) - (x(c) ? c : 0);
                    return d ? { value: h } : h;
                };
            },
            'binary*': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) * b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary/': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) / b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary%': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) % b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary===': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) === b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary!==': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) !== b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary==': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) == b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary!=': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) != b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary<': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) < b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary>': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) > b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary<=': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) <= b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary>=': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) >= b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary&&': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) && b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'binary||': function (a, b, d) {
                return function (c, e, f, g) {
                    c = a(c, e, f, g) || b(c, e, f, g);
                    return d ? { value: c } : c;
                };
            },
            'ternary?:': function (a, b, d, c) {
                return function (e, f, g, h) {
                    e = a(e, f, g, h) ? b(e, f, g, h) : d(e, f, g, h);
                    return c ? { value: e } : e;
                };
            },
            value: function (a, b) {
                return function () {
                    return b ? {
                        context: void 0,
                        name: void 0,
                        value: a
                    } : a;
                };
            },
            identifier: function (a, b, d, c, e) {
                return function (f, g, h, k) {
                    f = g && a in g ? g : f;
                    c && 1 !== c && f && !f[a] && (f[a] = {});
                    g = f ? f[a] : void 0;
                    b && sa(g, e);
                    return d ? {
                        context: f,
                        name: a,
                        value: g
                    } : g;
                };
            },
            computedMember: function (a, b, d, c, e) {
                return function (f, g, h, k) {
                    var l = a(f, g, h, k), n, m;
                    null != l && (n = b(f, g, h, k), n += '', Ta(n, e), c && 1 !== c && (Gb(l), l && !l[n] && (l[n] = {})), m = l[n], sa(m, e));
                    return d ? {
                        context: l,
                        name: n,
                        value: m
                    } : m;
                };
            },
            nonComputedMember: function (a, b, d, c, e, f) {
                return function (g, h, k, l) {
                    g = a(g, h, k, l);
                    e && 1 !== e && (Gb(g), g && !g[b] && (g[b] = {}));
                    h = null != g ? g[b] : void 0;
                    (d || Hb(b)) && sa(h, f);
                    return c ? {
                        context: g,
                        name: b,
                        value: h
                    } : h;
                };
            },
            inputs: function (a, b) {
                return function (d, c, e, f) {
                    return f ? f[b] : a(d, c, e);
                };
            }
        };
        var hc = function (a, b, d) {
            this.lexer = a;
            this.$filter = b;
            this.options = d;
            this.ast = new s(a, d);
            this.astCompiler = d.csp ? new td(this.ast, b) : new sd(this.ast, b);
        };
        hc.prototype = {
            constructor: hc,
            parse: function (a) {
                return this.astCompiler.compile(a, this.options.expensiveChecks);
            }
        };
        var kg = Object.prototype.valueOf, ta = O('$sce'), oa = {
                HTML: 'html',
                CSS: 'css',
                URL: 'url',
                RESOURCE_URL: 'resourceUrl',
                JS: 'js'
            }, mg = O('$compile'), Y = v.document.createElement('a'), xd = ra(v.location.href);
        yd.$inject = ['$document'];
        Jc.$inject = ['$provide'];
        var Fd = 22, Ed = '.', jc = '0';
        zd.$inject = ['$locale'];
        Bd.$inject = ['$locale'];
        var xg = {
                yyyy: W('FullYear', 4, 0, !1, !0),
                yy: W('FullYear', 2, 0, !0, !0),
                y: W('FullYear', 1, 0, !1, !0),
                MMMM: ib('Month'),
                MMM: ib('Month', !0),
                MM: W('Month', 2, 1),
                M: W('Month', 1, 1),
                LLLL: ib('Month', !1, !0),
                dd: W('Date', 2),
                d: W('Date', 1),
                HH: W('Hours', 2),
                H: W('Hours', 1),
                hh: W('Hours', 2, -12),
                h: W('Hours', 1, -12),
                mm: W('Minutes', 2),
                m: W('Minutes', 1),
                ss: W('Seconds', 2),
                s: W('Seconds', 1),
                sss: W('Milliseconds', 3),
                EEEE: ib('Day'),
                EEE: ib('Day', !0),
                a: function (a, b) {
                    return 12 > a.getHours() ? b.AMPMS[0] : b.AMPMS[1];
                },
                Z: function (a, b, d) {
                    a = -1 * d;
                    return a = (0 <= a ? '+' : '') + (Ib(Math[0 < a ? 'floor' : 'ceil'](a / 60), 2) + Ib(Math.abs(a % 60), 2));
                },
                ww: Hd(2),
                w: Hd(1),
                G: kc,
                GG: kc,
                GGG: kc,
                GGGG: function (a, b) {
                    return 0 >= a.getFullYear() ? b.ERANAMES[0] : b.ERANAMES[1];
                }
            }, wg = /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/, vg = /^\-?\d+$/;
        Ad.$inject = ['$locale'];
        var qg = da(P), rg = da(sb);
        Cd.$inject = ['$parse'];
        var ne = da({
                restrict: 'E',
                compile: function (a, b) {
                    if (!b.href && !b.xlinkHref)
                        return function (a, b) {
                            if ('a' === b[0].nodeName.toLowerCase()) {
                                var e = '[object SVGAnimatedString]' === ma.call(b.prop('href')) ? 'xlink:href' : 'href';
                                b.on('click', function (a) {
                                    b.attr(e) || a.preventDefault();
                                });
                            }
                        };
                }
            }), tb = {};
        q(Cb, function (a, b) {
            function d(a, d, e) {
                a.$watch(e[c], function (a) {
                    e.$set(b, !!a);
                });
            }
            if ('multiple' != a) {
                var c = xa('ng-' + b), e = d;
                'checked' === a && (e = function (a, b, e) {
                    e.ngModel !== e[c] && d(a, b, e);
                });
                tb[c] = function () {
                    return {
                        restrict: 'A',
                        priority: 100,
                        link: e
                    };
                };
            }
        });
        q(ad, function (a, b) {
            tb[b] = function () {
                return {
                    priority: 100,
                    link: function (a, c, e) {
                        if ('ngPattern' === b && '/' == e.ngPattern.charAt(0) && (c = e.ngPattern.match(zg))) {
                            e.$set('ngPattern', new RegExp(c[1], c[2]));
                            return;
                        }
                        a.$watch(e[b], function (a) {
                            e.$set(b, a);
                        });
                    }
                };
            };
        });
        q([
            'src',
            'srcset',
            'href'
        ], function (a) {
            var b = xa('ng-' + a);
            tb[b] = function () {
                return {
                    priority: 99,
                    link: function (d, c, e) {
                        var f = a, g = a;
                        'href' === a && '[object SVGAnimatedString]' === ma.call(c.prop('href')) && (g = 'xlinkHref', e.$attr[g] = 'xlink:href', f = null);
                        e.$observe(b, function (b) {
                            b ? (e.$set(g, b), Ca && f && c.prop(f, e[g])) : 'href' === a && e.$set(g, null);
                        });
                    }
                };
            };
        });
        var Jb = {
            $addControl: C,
            $$renameControl: function (a, b) {
                a.$name = b;
            },
            $removeControl: C,
            $setValidity: C,
            $setDirty: C,
            $setPristine: C,
            $setSubmitted: C
        };
        Id.$inject = [
            '$element',
            '$attrs',
            '$scope',
            '$animate',
            '$interpolate'
        ];
        var Rd = function (a) {
                return [
                    '$timeout',
                    '$parse',
                    function (b, d) {
                        function c(a) {
                            return '' === a ? d('this[""]').assign : d(a).assign || C;
                        }
                        return {
                            name: 'form',
                            restrict: a ? 'EAC' : 'E',
                            require: [
                                'form',
                                '^^?form'
                            ],
                            controller: Id,
                            compile: function (d, f) {
                                d.addClass(Ua).addClass(mb);
                                var g = f.name ? 'name' : a && f.ngForm ? 'ngForm' : !1;
                                return {
                                    pre: function (a, d, e, f) {
                                        var m = f[0];
                                        if (!('action' in e)) {
                                            var r = function (b) {
                                                a.$apply(function () {
                                                    m.$commitViewValue();
                                                    m.$setSubmitted();
                                                });
                                                b.preventDefault();
                                            };
                                            d[0].addEventListener('submit', r, !1);
                                            d.on('$destroy', function () {
                                                b(function () {
                                                    d[0].removeEventListener('submit', r, !1);
                                                }, 0, !1);
                                            });
                                        }
                                        (f[1] || m.$$parentForm).$addControl(m);
                                        var q = g ? c(m.$name) : C;
                                        g && (q(a, m), e.$observe(g, function (b) {
                                            m.$name !== b && (q(a, void 0), m.$$parentForm.$$renameControl(m, b), q = c(m.$name), q(a, m));
                                        }));
                                        d.on('$destroy', function () {
                                            m.$$parentForm.$removeControl(m);
                                            q(a, void 0);
                                            R(m, Jb);
                                        });
                                    }
                                };
                            }
                        };
                    }
                ];
            }, oe = Rd(), Be = Rd(!0), yg = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/, Hg = /^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:\/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i, Ig = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i, Jg = /^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/, Sd = /^(\d{4,})-(\d{2})-(\d{2})$/, Td = /^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/, nc = /^(\d{4,})-W(\d\d)$/, Ud = /^(\d{4,})-(\d\d)$/, Vd = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/, Kd = T();
        q([
            'date',
            'datetime-local',
            'month',
            'time',
            'week'
        ], function (a) {
            Kd[a] = !0;
        });
        var Wd = {
                text: function (a, b, d, c, e, f) {
                    jb(a, b, d, c, e, f);
                    lc(c);
                },
                date: kb('date', Sd, Lb(Sd, [
                    'yyyy',
                    'MM',
                    'dd'
                ]), 'yyyy-MM-dd'),
                'datetime-local': kb('datetimelocal', Td, Lb(Td, 'yyyy MM dd HH mm ss sss'.split(' ')), 'yyyy-MM-ddTHH:mm:ss.sss'),
                time: kb('time', Vd, Lb(Vd, [
                    'HH',
                    'mm',
                    'ss',
                    'sss'
                ]), 'HH:mm:ss.sss'),
                week: kb('week', nc, function (a, b) {
                    if (fa(a))
                        return a;
                    if (F(a)) {
                        nc.lastIndex = 0;
                        var d = nc.exec(a);
                        if (d) {
                            var c = +d[1], e = +d[2], f = d = 0, g = 0, h = 0, k = Gd(c), e = 7 * (e - 1);
                            b && (d = b.getHours(), f = b.getMinutes(), g = b.getSeconds(), h = b.getMilliseconds());
                            return new Date(c, 0, k.getDate() + e, d, f, g, h);
                        }
                    }
                    return NaN;
                }, 'yyyy-Www'),
                month: kb('month', Ud, Lb(Ud, [
                    'yyyy',
                    'MM'
                ]), 'yyyy-MM'),
                number: function (a, b, d, c, e, f) {
                    Ld(a, b, d, c);
                    jb(a, b, d, c, e, f);
                    c.$$parserName = 'number';
                    c.$parsers.push(function (a) {
                        if (c.$isEmpty(a))
                            return null;
                        if (Jg.test(a))
                            return parseFloat(a);
                    });
                    c.$formatters.push(function (a) {
                        if (!c.$isEmpty(a)) {
                            if (!Q(a))
                                throw lb('numfmt', a);
                            a = a.toString();
                        }
                        return a;
                    });
                    if (x(d.min) || d.ngMin) {
                        var g;
                        c.$validators.min = function (a) {
                            return c.$isEmpty(a) || y(g) || a >= g;
                        };
                        d.$observe('min', function (a) {
                            x(a) && !Q(a) && (a = parseFloat(a, 10));
                            g = Q(a) && !isNaN(a) ? a : void 0;
                            c.$validate();
                        });
                    }
                    if (x(d.max) || d.ngMax) {
                        var h;
                        c.$validators.max = function (a) {
                            return c.$isEmpty(a) || y(h) || a <= h;
                        };
                        d.$observe('max', function (a) {
                            x(a) && !Q(a) && (a = parseFloat(a, 10));
                            h = Q(a) && !isNaN(a) ? a : void 0;
                            c.$validate();
                        });
                    }
                },
                url: function (a, b, d, c, e, f) {
                    jb(a, b, d, c, e, f);
                    lc(c);
                    c.$$parserName = 'url';
                    c.$validators.url = function (a, b) {
                        var d = a || b;
                        return c.$isEmpty(d) || Hg.test(d);
                    };
                },
                email: function (a, b, d, c, e, f) {
                    jb(a, b, d, c, e, f);
                    lc(c);
                    c.$$parserName = 'email';
                    c.$validators.email = function (a, b) {
                        var d = a || b;
                        return c.$isEmpty(d) || Ig.test(d);
                    };
                },
                radio: function (a, b, d, c) {
                    y(d.name) && b.attr('name', ++nb);
                    b.on('click', function (a) {
                        b[0].checked && c.$setViewValue(d.value, a && a.type);
                    });
                    c.$render = function () {
                        b[0].checked = d.value == c.$viewValue;
                    };
                    d.$observe('value', c.$render);
                },
                checkbox: function (a, b, d, c, e, f, g, h) {
                    var k = Md(h, a, 'ngTrueValue', d.ngTrueValue, !0), l = Md(h, a, 'ngFalseValue', d.ngFalseValue, !1);
                    b.on('click', function (a) {
                        c.$setViewValue(b[0].checked, a && a.type);
                    });
                    c.$render = function () {
                        b[0].checked = c.$viewValue;
                    };
                    c.$isEmpty = function (a) {
                        return !1 === a;
                    };
                    c.$formatters.push(function (a) {
                        return pa(a, k);
                    });
                    c.$parsers.push(function (a) {
                        return a ? k : l;
                    });
                },
                hidden: C,
                button: C,
                submit: C,
                reset: C,
                file: C
            }, Dc = [
                '$browser',
                '$sniffer',
                '$filter',
                '$parse',
                function (a, b, d, c) {
                    return {
                        restrict: 'E',
                        require: ['?ngModel'],
                        link: {
                            pre: function (e, f, g, h) {
                                h[0] && (Wd[P(g.type)] || Wd.text)(e, f, g, h[0], b, a, d, c);
                            }
                        }
                    };
                }
            ], Kg = /^(true|false|\d+)$/, Te = function () {
                return {
                    restrict: 'A',
                    priority: 100,
                    compile: function (a, b) {
                        return Kg.test(b.ngValue) ? function (a, b, e) {
                            e.$set('value', a.$eval(e.ngValue));
                        } : function (a, b, e) {
                            a.$watch(e.ngValue, function (a) {
                                e.$set('value', a);
                            });
                        };
                    }
                };
            }, te = [
                '$compile',
                function (a) {
                    return {
                        restrict: 'AC',
                        compile: function (b) {
                            a.$$addBindingClass(b);
                            return function (b, c, e) {
                                a.$$addBindingInfo(c, e.ngBind);
                                c = c[0];
                                b.$watch(e.ngBind, function (a) {
                                    c.textContent = y(a) ? '' : a;
                                });
                            };
                        }
                    };
                }
            ], ve = [
                '$interpolate',
                '$compile',
                function (a, b) {
                    return {
                        compile: function (d) {
                            b.$$addBindingClass(d);
                            return function (c, d, f) {
                                c = a(d.attr(f.$attr.ngBindTemplate));
                                b.$$addBindingInfo(d, c.expressions);
                                d = d[0];
                                f.$observe('ngBindTemplate', function (a) {
                                    d.textContent = y(a) ? '' : a;
                                });
                            };
                        }
                    };
                }
            ], ue = [
                '$sce',
                '$parse',
                '$compile',
                function (a, b, d) {
                    return {
                        restrict: 'A',
                        compile: function (c, e) {
                            var f = b(e.ngBindHtml), g = b(e.ngBindHtml, function (a) {
                                    return (a || '').toString();
                                });
                            d.$$addBindingClass(c);
                            return function (b, c, e) {
                                d.$$addBindingInfo(c, e.ngBindHtml);
                                b.$watch(g, function () {
                                    c.html(a.getTrustedHtml(f(b)) || '');
                                });
                            };
                        }
                    };
                }
            ], Se = da({
                restrict: 'A',
                require: 'ngModel',
                link: function (a, b, d, c) {
                    c.$viewChangeListeners.push(function () {
                        a.$eval(d.ngChange);
                    });
                }
            }), we = mc('', !0), ye = mc('Odd', 0), xe = mc('Even', 1), ze = La({
                compile: function (a, b) {
                    b.$set('ngCloak', void 0);
                    a.removeClass('ng-cloak');
                }
            }), Ae = [function () {
                    return {
                        restrict: 'A',
                        scope: !0,
                        controller: '@',
                        priority: 500
                    };
                }], Ic = {}, Lg = {
                blur: !0,
                focus: !0
            };
        q('click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '), function (a) {
            var b = xa('ng-' + a);
            Ic[b] = [
                '$parse',
                '$rootScope',
                function (d, c) {
                    return {
                        restrict: 'A',
                        compile: function (e, f) {
                            var g = d(f[b], null, !0);
                            return function (b, d) {
                                d.on(a, function (d) {
                                    var e = function () {
                                        g(b, { $event: d });
                                    };
                                    Lg[a] && c.$$phase ? b.$evalAsync(e) : b.$apply(e);
                                });
                            };
                        }
                    };
                }
            ];
        });
        var De = [
                '$animate',
                '$compile',
                function (a, b) {
                    return {
                        multiElement: !0,
                        transclude: 'element',
                        priority: 600,
                        terminal: !0,
                        restrict: 'A',
                        $$tlb: !0,
                        link: function (d, c, e, f, g) {
                            var h, k, l;
                            d.$watch(e.ngIf, function (d) {
                                d ? k || g(function (d, f) {
                                    k = f;
                                    d[d.length++] = b.$$createComment('end ngIf', e.ngIf);
                                    h = { clone: d };
                                    a.enter(d, c.parent(), c);
                                }) : (l && (l.remove(), l = null), k && (k.$destroy(), k = null), h && (l = rb(h.clone), a.leave(l).then(function () {
                                    l = null;
                                }), h = null));
                            });
                        }
                    };
                }
            ], Ee = [
                '$templateRequest',
                '$anchorScroll',
                '$animate',
                function (a, b, d) {
                    return {
                        restrict: 'ECA',
                        priority: 400,
                        terminal: !0,
                        transclude: 'element',
                        controller: ea.noop,
                        compile: function (c, e) {
                            var f = e.ngInclude || e.src, g = e.onload || '', h = e.autoscroll;
                            return function (c, e, n, m, r) {
                                var q = 0, s, w, p, y = function () {
                                        w && (w.remove(), w = null);
                                        s && (s.$destroy(), s = null);
                                        p && (d.leave(p).then(function () {
                                            w = null;
                                        }), w = p, p = null);
                                    };
                                c.$watch(f, function (f) {
                                    var n = function () {
                                            !x(h) || h && !c.$eval(h) || b();
                                        }, u = ++q;
                                    f ? (a(f, !0).then(function (a) {
                                        if (!c.$$destroyed && u === q) {
                                            var b = c.$new();
                                            m.template = a;
                                            a = r(b, function (a) {
                                                y();
                                                d.enter(a, null, e).then(n);
                                            });
                                            s = b;
                                            p = a;
                                            s.$emit('$includeContentLoaded', f);
                                            c.$eval(g);
                                        }
                                    }, function () {
                                        c.$$destroyed || u !== q || (y(), c.$emit('$includeContentError', f));
                                    }), c.$emit('$includeContentRequested', f)) : (y(), m.template = null);
                                });
                            };
                        }
                    };
                }
            ], Ve = [
                '$compile',
                function (a) {
                    return {
                        restrict: 'ECA',
                        priority: -400,
                        require: 'ngInclude',
                        link: function (b, d, c, e) {
                            ma.call(d[0]).match(/SVG/) ? (d.empty(), a(Lc(e.template, v.document).childNodes)(b, function (a) {
                                d.append(a);
                            }, { futureParentElement: d })) : (d.html(e.template), a(d.contents())(b));
                        }
                    };
                }
            ], Fe = La({
                priority: 450,
                compile: function () {
                    return {
                        pre: function (a, b, d) {
                            a.$eval(d.ngInit);
                        }
                    };
                }
            }), Re = function () {
                return {
                    restrict: 'A',
                    priority: 100,
                    require: 'ngModel',
                    link: function (a, b, d, c) {
                        var e = b.attr(d.$attr.ngList) || ', ', f = 'false' !== d.ngTrim, g = f ? V(e) : e;
                        c.$parsers.push(function (a) {
                            if (!y(a)) {
                                var b = [];
                                a && q(a.split(g), function (a) {
                                    a && b.push(f ? V(a) : a);
                                });
                                return b;
                            }
                        });
                        c.$formatters.push(function (a) {
                            if (K(a))
                                return a.join(e);
                        });
                        c.$isEmpty = function (a) {
                            return !a || !a.length;
                        };
                    }
                };
            }, mb = 'ng-valid', Nd = 'ng-invalid', Ua = 'ng-pristine', Kb = 'ng-dirty', Pd = 'ng-pending', lb = O('ngModel'), Mg = [
                '$scope',
                '$exceptionHandler',
                '$attrs',
                '$element',
                '$parse',
                '$animate',
                '$timeout',
                '$rootScope',
                '$q',
                '$interpolate',
                function (a, b, d, c, e, f, g, h, k, l) {
                    this.$modelValue = this.$viewValue = Number.NaN;
                    this.$$rawModelValue = void 0;
                    this.$validators = {};
                    this.$asyncValidators = {};
                    this.$parsers = [];
                    this.$formatters = [];
                    this.$viewChangeListeners = [];
                    this.$untouched = !0;
                    this.$touched = !1;
                    this.$pristine = !0;
                    this.$dirty = !1;
                    this.$valid = !0;
                    this.$invalid = !1;
                    this.$error = {};
                    this.$$success = {};
                    this.$pending = void 0;
                    this.$name = l(d.name || '', !1)(a);
                    this.$$parentForm = Jb;
                    var n = e(d.ngModel), m = n.assign, r = n, s = m, v = null, w, p = this;
                    this.$$setOptions = function (a) {
                        if ((p.$options = a) && a.getterSetter) {
                            var b = e(d.ngModel + '()'), f = e(d.ngModel + '($$$p)');
                            r = function (a) {
                                var c = n(a);
                                E(c) && (c = b(a));
                                return c;
                            };
                            s = function (a, b) {
                                E(n(a)) ? f(a, { $$$p: b }) : m(a, b);
                            };
                        } else if (!n.assign)
                            throw lb('nonassign', d.ngModel, wa(c));
                    };
                    this.$render = C;
                    this.$isEmpty = function (a) {
                        return y(a) || '' === a || null === a || a !== a;
                    };
                    this.$$updateEmptyClasses = function (a) {
                        p.$isEmpty(a) ? (f.removeClass(c, 'ng-not-empty'), f.addClass(c, 'ng-empty')) : (f.removeClass(c, 'ng-empty'), f.addClass(c, 'ng-not-empty'));
                    };
                    var H = 0;
                    Jd({
                        ctrl: this,
                        $element: c,
                        set: function (a, b) {
                            a[b] = !0;
                        },
                        unset: function (a, b) {
                            delete a[b];
                        },
                        $animate: f
                    });
                    this.$setPristine = function () {
                        p.$dirty = !1;
                        p.$pristine = !0;
                        f.removeClass(c, Kb);
                        f.addClass(c, Ua);
                    };
                    this.$setDirty = function () {
                        p.$dirty = !0;
                        p.$pristine = !1;
                        f.removeClass(c, Ua);
                        f.addClass(c, Kb);
                        p.$$parentForm.$setDirty();
                    };
                    this.$setUntouched = function () {
                        p.$touched = !1;
                        p.$untouched = !0;
                        f.setClass(c, 'ng-untouched', 'ng-touched');
                    };
                    this.$setTouched = function () {
                        p.$touched = !0;
                        p.$untouched = !1;
                        f.setClass(c, 'ng-touched', 'ng-untouched');
                    };
                    this.$rollbackViewValue = function () {
                        g.cancel(v);
                        p.$viewValue = p.$$lastCommittedViewValue;
                        p.$render();
                    };
                    this.$validate = function () {
                        if (!Q(p.$modelValue) || !isNaN(p.$modelValue)) {
                            var a = p.$$rawModelValue, b = p.$valid, c = p.$modelValue, d = p.$options && p.$options.allowInvalid;
                            p.$$runValidators(a, p.$$lastCommittedViewValue, function (e) {
                                d || b === e || (p.$modelValue = e ? a : void 0, p.$modelValue !== c && p.$$writeModelToScope());
                            });
                        }
                    };
                    this.$$runValidators = function (a, b, c) {
                        function d() {
                            var c = !0;
                            q(p.$validators, function (d, e) {
                                var g = d(a, b);
                                c = c && g;
                                f(e, g);
                            });
                            return c ? !0 : (q(p.$asyncValidators, function (a, b) {
                                f(b, null);
                            }), !1);
                        }
                        function e() {
                            var c = [], d = !0;
                            q(p.$asyncValidators, function (e, g) {
                                var h = e(a, b);
                                if (!h || !E(h.then))
                                    throw lb('nopromise', h);
                                f(g, void 0);
                                c.push(h.then(function () {
                                    f(g, !0);
                                }, function () {
                                    d = !1;
                                    f(g, !1);
                                }));
                            });
                            c.length ? k.all(c).then(function () {
                                g(d);
                            }, C) : g(!0);
                        }
                        function f(a, b) {
                            h === H && p.$setValidity(a, b);
                        }
                        function g(a) {
                            h === H && c(a);
                        }
                        H++;
                        var h = H;
                        (function () {
                            var a = p.$$parserName || 'parse';
                            if (y(w))
                                f(a, null);
                            else
                                return w || (q(p.$validators, function (a, b) {
                                    f(b, null);
                                }), q(p.$asyncValidators, function (a, b) {
                                    f(b, null);
                                })), f(a, w), w;
                            return !0;
                        }() ? d() ? e() : g(!1) : g(!1));
                    };
                    this.$commitViewValue = function () {
                        var a = p.$viewValue;
                        g.cancel(v);
                        if (p.$$lastCommittedViewValue !== a || '' === a && p.$$hasNativeValidators)
                            p.$$updateEmptyClasses(a), p.$$lastCommittedViewValue = a, p.$pristine && this.$setDirty(), this.$$parseAndValidate();
                    };
                    this.$$parseAndValidate = function () {
                        var b = p.$$lastCommittedViewValue;
                        if (w = y(b) ? void 0 : !0)
                            for (var c = 0; c < p.$parsers.length; c++)
                                if (b = p.$parsers[c](b), y(b)) {
                                    w = !1;
                                    break;
                                }
                        Q(p.$modelValue) && isNaN(p.$modelValue) && (p.$modelValue = r(a));
                        var d = p.$modelValue, e = p.$options && p.$options.allowInvalid;
                        p.$$rawModelValue = b;
                        e && (p.$modelValue = b, p.$modelValue !== d && p.$$writeModelToScope());
                        p.$$runValidators(b, p.$$lastCommittedViewValue, function (a) {
                            e || (p.$modelValue = a ? b : void 0, p.$modelValue !== d && p.$$writeModelToScope());
                        });
                    };
                    this.$$writeModelToScope = function () {
                        s(a, p.$modelValue);
                        q(p.$viewChangeListeners, function (a) {
                            try {
                                a();
                            } catch (c) {
                                b(c);
                            }
                        });
                    };
                    this.$setViewValue = function (a, b) {
                        p.$viewValue = a;
                        p.$options && !p.$options.updateOnDefault || p.$$debounceViewValueCommit(b);
                    };
                    this.$$debounceViewValueCommit = function (b) {
                        var c = 0, d = p.$options;
                        d && x(d.debounce) && (d = d.debounce, Q(d) ? c = d : Q(d[b]) ? c = d[b] : Q(d['default']) && (c = d['default']));
                        g.cancel(v);
                        c ? v = g(function () {
                            p.$commitViewValue();
                        }, c) : h.$$phase ? p.$commitViewValue() : a.$apply(function () {
                            p.$commitViewValue();
                        });
                    };
                    a.$watch(function () {
                        var b = r(a);
                        if (b !== p.$modelValue && (p.$modelValue === p.$modelValue || b === b)) {
                            p.$modelValue = p.$$rawModelValue = b;
                            w = void 0;
                            for (var c = p.$formatters, d = c.length, e = b; d--;)
                                e = c[d](e);
                            p.$viewValue !== e && (p.$$updateEmptyClasses(e), p.$viewValue = p.$$lastCommittedViewValue = e, p.$render(), p.$$runValidators(b, e, C));
                        }
                        return b;
                    });
                }
            ], Qe = [
                '$rootScope',
                function (a) {
                    return {
                        restrict: 'A',
                        require: [
                            'ngModel',
                            '^?form',
                            '^?ngModelOptions'
                        ],
                        controller: Mg,
                        priority: 1,
                        compile: function (b) {
                            b.addClass(Ua).addClass('ng-untouched').addClass(mb);
                            return {
                                pre: function (a, b, e, f) {
                                    var g = f[0];
                                    b = f[1] || g.$$parentForm;
                                    g.$$setOptions(f[2] && f[2].$options);
                                    b.$addControl(g);
                                    e.$observe('name', function (a) {
                                        g.$name !== a && g.$$parentForm.$$renameControl(g, a);
                                    });
                                    a.$on('$destroy', function () {
                                        g.$$parentForm.$removeControl(g);
                                    });
                                },
                                post: function (b, c, e, f) {
                                    var g = f[0];
                                    if (g.$options && g.$options.updateOn)
                                        c.on(g.$options.updateOn, function (a) {
                                            g.$$debounceViewValueCommit(a && a.type);
                                        });
                                    c.on('blur', function () {
                                        g.$touched || (a.$$phase ? b.$evalAsync(g.$setTouched) : b.$apply(g.$setTouched));
                                    });
                                }
                            };
                        }
                    };
                }
            ], Ng = /(\s+|^)default(\s+|$)/, Ue = function () {
                return {
                    restrict: 'A',
                    controller: [
                        '$scope',
                        '$attrs',
                        function (a, b) {
                            var d = this;
                            this.$options = qa(a.$eval(b.ngModelOptions));
                            x(this.$options.updateOn) ? (this.$options.updateOnDefault = !1, this.$options.updateOn = V(this.$options.updateOn.replace(Ng, function () {
                                d.$options.updateOnDefault = !0;
                                return ' ';
                            }))) : this.$options.updateOnDefault = !0;
                        }
                    ]
                };
            }, Ge = La({
                terminal: !0,
                priority: 1000
            }), Og = O('ngOptions'), Pg = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/, Oe = [
                '$compile',
                '$document',
                '$parse',
                function (a, b, d) {
                    function c(a, b, c) {
                        function e(a, b, c, d, f) {
                            this.selectValue = a;
                            this.viewValue = b;
                            this.label = c;
                            this.group = d;
                            this.disabled = f;
                        }
                        function f(a) {
                            var b;
                            if (!q && ya(a))
                                b = a;
                            else {
                                b = [];
                                for (var c in a)
                                    a.hasOwnProperty(c) && '$' !== c.charAt(0) && b.push(c);
                            }
                            return b;
                        }
                        var m = a.match(Pg);
                        if (!m)
                            throw Og('iexp', a, wa(b));
                        var r = m[5] || m[7], q = m[6];
                        a = / as /.test(m[0]) && m[1];
                        var s = m[9];
                        b = d(m[2] ? m[1] : r);
                        var w = a && d(a) || b, p = s && d(s), v = s ? function (a, b) {
                                return p(c, b);
                            } : function (a) {
                                return Fa(a);
                            }, t = function (a, b) {
                                return v(a, L(a, b));
                            }, z = d(m[2] || m[1]), u = d(m[3] || ''), y = d(m[4] || ''), x = d(m[8]), D = {}, L = q ? function (a, b) {
                                D[q] = b;
                                D[r] = a;
                                return D;
                            } : function (a) {
                                D[r] = a;
                                return D;
                            };
                        return {
                            trackBy: s,
                            getTrackByValue: t,
                            getWatchables: d(x, function (a) {
                                var b = [];
                                a = a || [];
                                for (var d = f(a), e = d.length, g = 0; g < e; g++) {
                                    var h = a === d ? g : d[g], l = a[h], h = L(l, h), l = v(l, h);
                                    b.push(l);
                                    if (m[2] || m[1])
                                        l = z(c, h), b.push(l);
                                    m[4] && (h = y(c, h), b.push(h));
                                }
                                return b;
                            }),
                            getOptions: function () {
                                for (var a = [], b = {}, d = x(c) || [], g = f(d), h = g.length, m = 0; m < h; m++) {
                                    var p = d === g ? m : g[m], q = L(d[p], p), r = w(c, q), p = v(r, q), D = z(c, q), N = u(c, q), q = y(c, q), r = new e(p, r, D, N, q);
                                    a.push(r);
                                    b[p] = r;
                                }
                                return {
                                    items: a,
                                    selectValueMap: b,
                                    getOptionFromViewValue: function (a) {
                                        return b[t(a)];
                                    },
                                    getViewValueFromOption: function (a) {
                                        return s ? ea.copy(a.viewValue) : a.viewValue;
                                    }
                                };
                            }
                        };
                    }
                    var e = v.document.createElement('option'), f = v.document.createElement('optgroup');
                    return {
                        restrict: 'A',
                        terminal: !0,
                        require: [
                            'select',
                            'ngModel'
                        ],
                        link: {
                            pre: function (a, b, c, d) {
                                d[0].registerOption = C;
                            },
                            post: function (d, h, k, l) {
                                function n(a, b) {
                                    a.element = b;
                                    b.disabled = a.disabled;
                                    a.label !== b.label && (b.label = a.label, b.textContent = a.label);
                                    a.value !== b.value && (b.value = a.selectValue);
                                }
                                function m() {
                                    var a = u && r.readValue();
                                    if (u)
                                        for (var b = u.items.length - 1; 0 <= b; b--) {
                                            var c = u.items[b];
                                            c.group ? Bb(c.element.parentNode) : Bb(c.element);
                                        }
                                    u = I.getOptions();
                                    var d = {};
                                    t && h.prepend(w);
                                    u.items.forEach(function (a) {
                                        var b;
                                        if (x(a.group)) {
                                            b = d[a.group];
                                            b || (b = f.cloneNode(!1), E.appendChild(b), b.label = a.group, d[a.group] = b);
                                            var c = e.cloneNode(!1);
                                        } else
                                            b = E, c = e.cloneNode(!1);
                                        b.appendChild(c);
                                        n(a, c);
                                    });
                                    h[0].appendChild(E);
                                    s.$render();
                                    s.$isEmpty(a) || (b = r.readValue(), (I.trackBy || v ? pa(a, b) : a === b) || (s.$setViewValue(b), s.$render()));
                                }
                                var r = l[0], s = l[1], v = k.multiple, w;
                                l = 0;
                                for (var p = h.children(), y = p.length; l < y; l++)
                                    if ('' === p[l].value) {
                                        w = p.eq(l);
                                        break;
                                    }
                                var t = !!w, z = B(e.cloneNode(!1));
                                z.val('?');
                                var u, I = c(k.ngOptions, h, d), E = b[0].createDocumentFragment();
                                v ? (s.$isEmpty = function (a) {
                                    return !a || 0 === a.length;
                                }, r.writeValue = function (a) {
                                    u.items.forEach(function (a) {
                                        a.element.selected = !1;
                                    });
                                    a && a.forEach(function (a) {
                                        if (a = u.getOptionFromViewValue(a))
                                            a.element.selected = !0;
                                    });
                                }, r.readValue = function () {
                                    var a = h.val() || [], b = [];
                                    q(a, function (a) {
                                        (a = u.selectValueMap[a]) && !a.disabled && b.push(u.getViewValueFromOption(a));
                                    });
                                    return b;
                                }, I.trackBy && d.$watchCollection(function () {
                                    if (K(s.$viewValue))
                                        return s.$viewValue.map(function (a) {
                                            return I.getTrackByValue(a);
                                        });
                                }, function () {
                                    s.$render();
                                })) : (r.writeValue = function (a) {
                                    var b = u.getOptionFromViewValue(a);
                                    b ? (h[0].value !== b.selectValue && (z.remove(), t || w.remove(), h[0].value = b.selectValue, b.element.selected = !0), b.element.setAttribute('selected', 'selected')) : null === a || t ? (z.remove(), t || h.prepend(w), h.val(''), w.prop('selected', !0), w.attr('selected', !0)) : (t || w.remove(), h.prepend(z), h.val('?'), z.prop('selected', !0), z.attr('selected', !0));
                                }, r.readValue = function () {
                                    var a = u.selectValueMap[h.val()];
                                    return a && !a.disabled ? (t || w.remove(), z.remove(), u.getViewValueFromOption(a)) : null;
                                }, I.trackBy && d.$watch(function () {
                                    return I.getTrackByValue(s.$viewValue);
                                }, function () {
                                    s.$render();
                                }));
                                t ? (w.remove(), a(w)(d), w.removeClass('ng-scope')) : w = B(e.cloneNode(!1));
                                h.empty();
                                m();
                                d.$watchCollection(I.getWatchables, m);
                            }
                        }
                    };
                }
            ], He = [
                '$locale',
                '$interpolate',
                '$log',
                function (a, b, d) {
                    var c = /{}/g, e = /^when(Minus)?(.+)$/;
                    return {
                        link: function (f, g, h) {
                            function k(a) {
                                g.text(a || '');
                            }
                            var l = h.count, n = h.$attr.when && g.attr(h.$attr.when), m = h.offset || 0, r = f.$eval(n) || {}, s = {}, v = b.startSymbol(), w = b.endSymbol(), p = v + l + '-' + m + w, x = ea.noop, t;
                            q(h, function (a, b) {
                                var c = e.exec(b);
                                c && (c = (c[1] ? '-' : '') + P(c[2]), r[c] = g.attr(h.$attr[b]));
                            });
                            q(r, function (a, d) {
                                s[d] = b(a.replace(c, p));
                            });
                            f.$watch(l, function (b) {
                                var c = parseFloat(b), e = isNaN(c);
                                e || c in r || (c = a.pluralCat(c - m));
                                c === t || e && Q(t) && isNaN(t) || (x(), e = s[c], y(e) ? (null != b && d.debug('ngPluralize: no rule defined for \'' + c + '\' in ' + n), x = C, k()) : x = f.$watch(e, k), t = c);
                            });
                        }
                    };
                }
            ], Ie = [
                '$parse',
                '$animate',
                '$compile',
                function (a, b, d) {
                    var c = O('ngRepeat'), e = function (a, b, c, d, e, n, m) {
                            a[c] = d;
                            e && (a[e] = n);
                            a.$index = b;
                            a.$first = 0 === b;
                            a.$last = b === m - 1;
                            a.$middle = !(a.$first || a.$last);
                            a.$odd = !(a.$even = 0 === (b & 1));
                        };
                    return {
                        restrict: 'A',
                        multiElement: !0,
                        transclude: 'element',
                        priority: 1000,
                        terminal: !0,
                        $$tlb: !0,
                        compile: function (f, g) {
                            var h = g.ngRepeat, k = d.$$createComment('end ngRepeat', h), l = h.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);
                            if (!l)
                                throw c('iexp', h);
                            var n = l[1], m = l[2], r = l[3], s = l[4], l = n.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);
                            if (!l)
                                throw c('iidexp', n);
                            var v = l[3] || l[1], w = l[2];
                            if (r && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(r) || /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(r)))
                                throw c('badident', r);
                            var p, y, t, z, u = { $id: Fa };
                            s ? p = a(s) : (t = function (a, b) {
                                return Fa(b);
                            }, z = function (a) {
                                return a;
                            });
                            return function (a, d, f, g, l) {
                                p && (y = function (b, c, d) {
                                    w && (u[w] = b);
                                    u[v] = c;
                                    u.$index = d;
                                    return p(a, u);
                                });
                                var n = T();
                                a.$watchCollection(m, function (f) {
                                    var g, m, p = d[0], s, u = T(), x, D, E, C, F, B, G;
                                    r && (a[r] = f);
                                    if (ya(f))
                                        F = f, m = y || t;
                                    else
                                        for (G in m = y || z, F = [], f)
                                            ua.call(f, G) && '$' !== G.charAt(0) && F.push(G);
                                    x = F.length;
                                    G = Array(x);
                                    for (g = 0; g < x; g++)
                                        if (D = f === F ? g : F[g], E = f[D], C = m(D, E, g), n[C])
                                            B = n[C], delete n[C], u[C] = B, G[g] = B;
                                        else {
                                            if (u[C])
                                                throw q(G, function (a) {
                                                    a && a.scope && (n[a.id] = a);
                                                }), c('dupes', h, C, E);
                                            G[g] = {
                                                id: C,
                                                scope: void 0,
                                                clone: void 0
                                            };
                                            u[C] = !0;
                                        }
                                    for (s in n) {
                                        B = n[s];
                                        C = rb(B.clone);
                                        b.leave(C);
                                        if (C[0].parentNode)
                                            for (g = 0, m = C.length; g < m; g++)
                                                C[g].$$NG_REMOVED = !0;
                                        B.scope.$destroy();
                                    }
                                    for (g = 0; g < x; g++)
                                        if (D = f === F ? g : F[g], E = f[D], B = G[g], B.scope) {
                                            s = p;
                                            do
                                                s = s.nextSibling;
                                            while (s && s.$$NG_REMOVED);
                                            B.clone[0] != s && b.move(rb(B.clone), null, p);
                                            p = B.clone[B.clone.length - 1];
                                            e(B.scope, g, v, E, w, D, x);
                                        } else
                                            l(function (a, c) {
                                                B.scope = c;
                                                var d = k.cloneNode(!1);
                                                a[a.length++] = d;
                                                b.enter(a, null, p);
                                                p = d;
                                                B.clone = a;
                                                u[B.id] = B;
                                                e(B.scope, g, v, E, w, D, x);
                                            });
                                    n = u;
                                });
                            };
                        }
                    };
                }
            ], Je = [
                '$animate',
                function (a) {
                    return {
                        restrict: 'A',
                        multiElement: !0,
                        link: function (b, d, c) {
                            b.$watch(c.ngShow, function (b) {
                                a[b ? 'removeClass' : 'addClass'](d, 'ng-hide', { tempClasses: 'ng-hide-animate' });
                            });
                        }
                    };
                }
            ], Ce = [
                '$animate',
                function (a) {
                    return {
                        restrict: 'A',
                        multiElement: !0,
                        link: function (b, d, c) {
                            b.$watch(c.ngHide, function (b) {
                                a[b ? 'addClass' : 'removeClass'](d, 'ng-hide', { tempClasses: 'ng-hide-animate' });
                            });
                        }
                    };
                }
            ], Ke = La(function (a, b, d) {
                a.$watch(d.ngStyle, function (a, d) {
                    d && a !== d && q(d, function (a, c) {
                        b.css(c, '');
                    });
                    a && b.css(a);
                }, !0);
            }), Le = [
                '$animate',
                '$compile',
                function (a, b) {
                    return {
                        require: 'ngSwitch',
                        controller: [
                            '$scope',
                            function () {
                                this.cases = {};
                            }
                        ],
                        link: function (d, c, e, f) {
                            var g = [], h = [], k = [], l = [], n = function (a, b) {
                                    return function () {
                                        a.splice(b, 1);
                                    };
                                };
                            d.$watch(e.ngSwitch || e.on, function (c) {
                                var d, e;
                                d = 0;
                                for (e = k.length; d < e; ++d)
                                    a.cancel(k[d]);
                                d = k.length = 0;
                                for (e = l.length; d < e; ++d) {
                                    var s = rb(h[d].clone);
                                    l[d].$destroy();
                                    (k[d] = a.leave(s)).then(n(k, d));
                                }
                                h.length = 0;
                                l.length = 0;
                                (g = f.cases['!' + c] || f.cases['?']) && q(g, function (c) {
                                    c.transclude(function (d, e) {
                                        l.push(e);
                                        var f = c.element;
                                        d[d.length++] = b.$$createComment('end ngSwitchWhen');
                                        h.push({ clone: d });
                                        a.enter(d, f.parent(), f);
                                    });
                                });
                            });
                        }
                    };
                }
            ], Me = La({
                transclude: 'element',
                priority: 1200,
                require: '^ngSwitch',
                multiElement: !0,
                link: function (a, b, d, c, e) {
                    c.cases['!' + d.ngSwitchWhen] = c.cases['!' + d.ngSwitchWhen] || [];
                    c.cases['!' + d.ngSwitchWhen].push({
                        transclude: e,
                        element: b
                    });
                }
            }), Ne = La({
                transclude: 'element',
                priority: 1200,
                require: '^ngSwitch',
                multiElement: !0,
                link: function (a, b, d, c, e) {
                    c.cases['?'] = c.cases['?'] || [];
                    c.cases['?'].push({
                        transclude: e,
                        element: b
                    });
                }
            }), Qg = O('ngTransclude'), Pe = La({
                restrict: 'EAC',
                link: function (a, b, d, c, e) {
                    d.ngTransclude === d.$attr.ngTransclude && (d.ngTransclude = '');
                    if (!e)
                        throw Qg('orphan', wa(b));
                    e(function (a) {
                        a.length && (b.empty(), b.append(a));
                    }, null, d.ngTransclude || d.ngTranscludeSlot);
                }
            }), pe = [
                '$templateCache',
                function (a) {
                    return {
                        restrict: 'E',
                        terminal: !0,
                        compile: function (b, d) {
                            'text/ng-template' == d.type && a.put(d.id, b[0].text);
                        }
                    };
                }
            ], Rg = {
                $setViewValue: C,
                $render: C
            }, Sg = [
                '$element',
                '$scope',
                function (a, b) {
                    var d = this, c = new Ra();
                    d.ngModelCtrl = Rg;
                    d.unknownOption = B(v.document.createElement('option'));
                    d.renderUnknownOption = function (b) {
                        b = '? ' + Fa(b) + ' ?';
                        d.unknownOption.val(b);
                        a.prepend(d.unknownOption);
                        a.val(b);
                    };
                    b.$on('$destroy', function () {
                        d.renderUnknownOption = C;
                    });
                    d.removeUnknownOption = function () {
                        d.unknownOption.parent() && d.unknownOption.remove();
                    };
                    d.readValue = function () {
                        d.removeUnknownOption();
                        return a.val();
                    };
                    d.writeValue = function (b) {
                        d.hasOption(b) ? (d.removeUnknownOption(), a.val(b), '' === b && d.emptyOption.prop('selected', !0)) : null == b && d.emptyOption ? (d.removeUnknownOption(), a.val('')) : d.renderUnknownOption(b);
                    };
                    d.addOption = function (a, b) {
                        if (8 !== b[0].nodeType) {
                            Qa(a, '"option value"');
                            '' === a && (d.emptyOption = b);
                            var g = c.get(a) || 0;
                            c.put(a, g + 1);
                            d.ngModelCtrl.$render();
                            b[0].hasAttribute('selected') && (b[0].selected = !0);
                        }
                    };
                    d.removeOption = function (a) {
                        var b = c.get(a);
                        b && (1 === b ? (c.remove(a), '' === a && (d.emptyOption = void 0)) : c.put(a, b - 1));
                    };
                    d.hasOption = function (a) {
                        return !!c.get(a);
                    };
                    d.registerOption = function (a, b, c, h, k) {
                        if (h) {
                            var l;
                            c.$observe('value', function (a) {
                                x(l) && d.removeOption(l);
                                l = a;
                                d.addOption(a, b);
                            });
                        } else
                            k ? a.$watch(k, function (a, e) {
                                c.$set('value', a);
                                e !== a && d.removeOption(e);
                                d.addOption(a, b);
                            }) : d.addOption(c.value, b);
                        b.on('$destroy', function () {
                            d.removeOption(c.value);
                            d.ngModelCtrl.$render();
                        });
                    };
                }
            ], qe = function () {
                return {
                    restrict: 'E',
                    require: [
                        'select',
                        '?ngModel'
                    ],
                    controller: Sg,
                    priority: 1,
                    link: {
                        pre: function (a, b, d, c) {
                            var e = c[1];
                            if (e) {
                                var f = c[0];
                                f.ngModelCtrl = e;
                                b.on('change', function () {
                                    a.$apply(function () {
                                        e.$setViewValue(f.readValue());
                                    });
                                });
                                if (d.multiple) {
                                    f.readValue = function () {
                                        var a = [];
                                        q(b.find('option'), function (b) {
                                            b.selected && a.push(b.value);
                                        });
                                        return a;
                                    };
                                    f.writeValue = function (a) {
                                        var c = new Ra(a);
                                        q(b.find('option'), function (a) {
                                            a.selected = x(c.get(a.value));
                                        });
                                    };
                                    var g, h = NaN;
                                    a.$watch(function () {
                                        h !== e.$viewValue || pa(g, e.$viewValue) || (g = ha(e.$viewValue), e.$render());
                                        h = e.$viewValue;
                                    });
                                    e.$isEmpty = function (a) {
                                        return !a || 0 === a.length;
                                    };
                                }
                            }
                        },
                        post: function (a, b, d, c) {
                            var e = c[1];
                            if (e) {
                                var f = c[0];
                                e.$render = function () {
                                    f.writeValue(e.$viewValue);
                                };
                            }
                        }
                    }
                };
            }, se = [
                '$interpolate',
                function (a) {
                    return {
                        restrict: 'E',
                        priority: 100,
                        compile: function (b, d) {
                            if (x(d.value))
                                var c = a(d.value, !0);
                            else {
                                var e = a(b.text(), !0);
                                e || d.$set('value', b.text());
                            }
                            return function (a, b, d) {
                                var k = b.parent();
                                (k = k.data('$selectController') || k.parent().data('$selectController')) && k.registerOption(a, b, d, c, e);
                            };
                        }
                    };
                }
            ], re = da({
                restrict: 'E',
                terminal: !1
            }), Fc = function () {
                return {
                    restrict: 'A',
                    require: '?ngModel',
                    link: function (a, b, d, c) {
                        c && (d.required = !0, c.$validators.required = function (a, b) {
                            return !d.required || !c.$isEmpty(b);
                        }, d.$observe('required', function () {
                            c.$validate();
                        }));
                    }
                };
            }, Ec = function () {
                return {
                    restrict: 'A',
                    require: '?ngModel',
                    link: function (a, b, d, c) {
                        if (c) {
                            var e, f = d.ngPattern || d.pattern;
                            d.$observe('pattern', function (a) {
                                F(a) && 0 < a.length && (a = new RegExp('^' + a + '$'));
                                if (a && !a.test)
                                    throw O('ngPattern')('noregexp', f, a, wa(b));
                                e = a || void 0;
                                c.$validate();
                            });
                            c.$validators.pattern = function (a, b) {
                                return c.$isEmpty(b) || y(e) || e.test(b);
                            };
                        }
                    }
                };
            }, Hc = function () {
                return {
                    restrict: 'A',
                    require: '?ngModel',
                    link: function (a, b, d, c) {
                        if (c) {
                            var e = -1;
                            d.$observe('maxlength', function (a) {
                                a = X(a);
                                e = isNaN(a) ? -1 : a;
                                c.$validate();
                            });
                            c.$validators.maxlength = function (a, b) {
                                return 0 > e || c.$isEmpty(b) || b.length <= e;
                            };
                        }
                    }
                };
            }, Gc = function () {
                return {
                    restrict: 'A',
                    require: '?ngModel',
                    link: function (a, b, d, c) {
                        if (c) {
                            var e = 0;
                            d.$observe('minlength', function (a) {
                                e = X(a) || 0;
                                c.$validate();
                            });
                            c.$validators.minlength = function (a, b) {
                                return c.$isEmpty(b) || b.length >= e;
                            };
                        }
                    }
                };
            };
        v.angular.bootstrap ? v.console && console.log('WARNING: Tried to load angular more than once.') : (ie(), ke(ea), ea.module('ngLocale', [], [
            '$provide',
            function (a) {
                function b(a) {
                    a += '';
                    var b = a.indexOf('.');
                    return -1 == b ? 0 : a.length - b - 1;
                }
                a.value('$locale', {
                    DATETIME_FORMATS: {
                        AMPMS: [
                            'AM',
                            'PM'
                        ],
                        DAY: 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday'.split(' '),
                        ERANAMES: [
                            'Before Christ',
                            'Anno Domini'
                        ],
                        ERAS: [
                            'BC',
                            'AD'
                        ],
                        FIRSTDAYOFWEEK: 6,
                        MONTH: 'January February March April May June July August September October November December'.split(' '),
                        SHORTDAY: 'Sun Mon Tue Wed Thu Fri Sat'.split(' '),
                        SHORTMONTH: 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' '),
                        STANDALONEMONTH: 'January February March April May June July August September October November December'.split(' '),
                        WEEKENDRANGE: [
                            5,
                            6
                        ],
                        fullDate: 'EEEE, MMMM d, y',
                        longDate: 'MMMM d, y',
                        medium: 'MMM d, y h:mm:ss a',
                        mediumDate: 'MMM d, y',
                        mediumTime: 'h:mm:ss a',
                        'short': 'M/d/yy h:mm a',
                        shortDate: 'M/d/yy',
                        shortTime: 'h:mm a'
                    },
                    NUMBER_FORMATS: {
                        CURRENCY_SYM: '$',
                        DECIMAL_SEP: '.',
                        GROUP_SEP: ',',
                        PATTERNS: [
                            {
                                gSize: 3,
                                lgSize: 3,
                                maxFrac: 3,
                                minFrac: 0,
                                minInt: 1,
                                negPre: '-',
                                negSuf: '',
                                posPre: '',
                                posSuf: ''
                            },
                            {
                                gSize: 3,
                                lgSize: 3,
                                maxFrac: 2,
                                minFrac: 2,
                                minInt: 1,
                                negPre: '-\xA4',
                                negSuf: '',
                                posPre: '\xA4',
                                posSuf: ''
                            }
                        ]
                    },
                    id: 'en-us',
                    localeID: 'en_US',
                    pluralCat: function (a, c) {
                        var e = a | 0, f = c;
                        void 0 === f && (f = Math.min(b(a), 3));
                        Math.pow(10, f);
                        return 1 == e && 0 == f ? 'one' : 'other';
                    }
                });
            }
        ]), B(v.document).ready(function () {
            ee(v.document, yc);
        }));
    }(window));
    !window.angular.$$csp().noInlineStyle && window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
    return angular;
});
define('ocLazyLoad', ['angular'], function () {
    (function (angular, window) {
        'use strict';
        var regModules = [
                'ng',
                'oc.lazyLoad'
            ], regInvokes = {}, regConfigs = [], modulesToLoad = [], realModules = [], recordDeclarations = [], broadcast = angular.noop, runBlocks = {}, justLoaded = [];
        var ocLazyLoad = angular.module('oc.lazyLoad', ['ng']);
        ocLazyLoad.provider('$ocLazyLoad', [
            '$controllerProvider',
            '$provide',
            '$compileProvider',
            '$filterProvider',
            '$injector',
            '$animateProvider',
            function ($controllerProvider, $provide, $compileProvider, $filterProvider, $injector, $animateProvider) {
                var modules = {}, providers = {
                        $controllerProvider: $controllerProvider,
                        $compileProvider: $compileProvider,
                        $filterProvider: $filterProvider,
                        $provide: $provide,
                        $injector: $injector,
                        $animateProvider: $animateProvider
                    }, debug = false, events = false, moduleCache = [], modulePromises = {};
                moduleCache.push = function (value) {
                    if (this.indexOf(value) === -1) {
                        Array.prototype.push.apply(this, arguments);
                    }
                };
                this.config = function (config) {
                    if (angular.isDefined(config.modules)) {
                        if (angular.isArray(config.modules)) {
                            angular.forEach(config.modules, function (moduleConfig) {
                                modules[moduleConfig.name] = moduleConfig;
                            });
                        } else {
                            modules[config.modules.name] = config.modules;
                        }
                    }
                    if (angular.isDefined(config.debug)) {
                        debug = config.debug;
                    }
                    if (angular.isDefined(config.events)) {
                        events = config.events;
                    }
                };
                this._init = function _init(element) {
                    if (modulesToLoad.length === 0) {
                        var elements = [element], names = [
                                'ng:app',
                                'ng-app',
                                'x-ng-app',
                                'data-ng-app'
                            ], NG_APP_CLASS_REGEXP = /\sng[:\-]app(:\s*([\w\d_]+);?)?\s/, append = function append(elm) {
                                return elm && elements.push(elm);
                            };
                        angular.forEach(names, function (name) {
                            names[name] = true;
                            append(document.getElementById(name));
                            name = name.replace(':', '\\:');
                            if (typeof element[0] !== 'undefined' && element[0].querySelectorAll) {
                                angular.forEach(element[0].querySelectorAll('.' + name), append);
                                angular.forEach(element[0].querySelectorAll('.' + name + '\\:'), append);
                                angular.forEach(element[0].querySelectorAll('[' + name + ']'), append);
                            }
                        });
                        angular.forEach(elements, function (elm) {
                            if (modulesToLoad.length === 0) {
                                var className = ' ' + element.className + ' ';
                                var match = NG_APP_CLASS_REGEXP.exec(className);
                                if (match) {
                                    modulesToLoad.push((match[2] || '').replace(/\s+/g, ','));
                                } else {
                                    angular.forEach(elm.attributes, function (attr) {
                                        if (modulesToLoad.length === 0 && names[attr.name]) {
                                            modulesToLoad.push(attr.value);
                                        }
                                    });
                                }
                            }
                        });
                    }
                    if (modulesToLoad.length === 0 && !((window.jasmine || window.mocha) && angular.isDefined(angular.mock))) {
                        console.error('No module found during bootstrap, unable to init ocLazyLoad. You should always use the ng-app directive or angular.boostrap when you use ocLazyLoad.');
                    }
                    var addReg = function addReg(moduleName) {
                        if (regModules.indexOf(moduleName) === -1) {
                            regModules.push(moduleName);
                            var mainModule = angular.module(moduleName);
                            _invokeQueue(null, mainModule._invokeQueue, moduleName);
                            _invokeQueue(null, mainModule._configBlocks, moduleName);
                            angular.forEach(mainModule.requires, addReg);
                        }
                    };
                    angular.forEach(modulesToLoad, function (moduleName) {
                        addReg(moduleName);
                    });
                    modulesToLoad = [];
                    recordDeclarations.pop();
                };
                var stringify = function stringify(obj) {
                    try {
                        return JSON.stringify(obj);
                    } catch (e) {
                        var cache = [];
                        return JSON.stringify(obj, function (key, value) {
                            if (angular.isObject(value) && value !== null) {
                                if (cache.indexOf(value) !== -1) {
                                    return;
                                }
                                cache.push(value);
                            }
                            return value;
                        });
                    }
                };
                var hashCode = function hashCode(str) {
                    var hash = 0, i, chr, len;
                    if (str.length == 0) {
                        return hash;
                    }
                    for (i = 0, len = str.length; i < len; i++) {
                        chr = str.charCodeAt(i);
                        hash = (hash << 5) - hash + chr;
                        hash |= 0;
                    }
                    return hash;
                };
                function _register(providers, registerModules, params) {
                    if (registerModules) {
                        var k, moduleName, moduleFn, tempRunBlocks = [];
                        for (k = registerModules.length - 1; k >= 0; k--) {
                            moduleName = registerModules[k];
                            if (!angular.isString(moduleName)) {
                                moduleName = getModuleName(moduleName);
                            }
                            if (!moduleName || justLoaded.indexOf(moduleName) !== -1 || modules[moduleName] && realModules.indexOf(moduleName) === -1) {
                                continue;
                            }
                            var newModule = regModules.indexOf(moduleName) === -1;
                            moduleFn = ngModuleFct(moduleName);
                            if (newModule) {
                                regModules.push(moduleName);
                                _register(providers, moduleFn.requires, params);
                            }
                            if (moduleFn._runBlocks.length > 0) {
                                runBlocks[moduleName] = [];
                                while (moduleFn._runBlocks.length > 0) {
                                    runBlocks[moduleName].push(moduleFn._runBlocks.shift());
                                }
                            }
                            if (angular.isDefined(runBlocks[moduleName]) && (newModule || params.rerun)) {
                                tempRunBlocks = tempRunBlocks.concat(runBlocks[moduleName]);
                            }
                            _invokeQueue(providers, moduleFn._invokeQueue, moduleName, params.reconfig);
                            _invokeQueue(providers, moduleFn._configBlocks, moduleName, params.reconfig);
                            broadcast(newModule ? 'ocLazyLoad.moduleLoaded' : 'ocLazyLoad.moduleReloaded', moduleName);
                            registerModules.pop();
                            justLoaded.push(moduleName);
                        }
                        var instanceInjector = providers.getInstanceInjector();
                        angular.forEach(tempRunBlocks, function (fn) {
                            instanceInjector.invoke(fn);
                        });
                    }
                }
                function _registerInvokeList(args, moduleName) {
                    var invokeList = args[2][0], type = args[1], newInvoke = false;
                    if (angular.isUndefined(regInvokes[moduleName])) {
                        regInvokes[moduleName] = {};
                    }
                    if (angular.isUndefined(regInvokes[moduleName][type])) {
                        regInvokes[moduleName][type] = {};
                    }
                    var onInvoke = function onInvoke(invokeName, invoke) {
                        if (!regInvokes[moduleName][type].hasOwnProperty(invokeName)) {
                            regInvokes[moduleName][type][invokeName] = [];
                        }
                        if (checkHashes(invoke, regInvokes[moduleName][type][invokeName])) {
                            newInvoke = true;
                            regInvokes[moduleName][type][invokeName].push(invoke);
                            broadcast('ocLazyLoad.componentLoaded', [
                                moduleName,
                                type,
                                invokeName
                            ]);
                        }
                    };
                    function checkHashes(potentialNew, invokes) {
                        var isNew = true, newHash;
                        if (invokes.length) {
                            newHash = signature(potentialNew);
                            angular.forEach(invokes, function (invoke) {
                                isNew = isNew && signature(invoke) !== newHash;
                            });
                        }
                        return isNew;
                    }
                    function signature(data) {
                        if (angular.isArray(data)) {
                            return hashCode(data.toString());
                        } else if (angular.isObject(data)) {
                            return hashCode(stringify(data));
                        } else {
                            if (angular.isDefined(data) && data !== null) {
                                return hashCode(data.toString());
                            } else {
                                return data;
                            }
                        }
                    }
                    if (angular.isString(invokeList)) {
                        onInvoke(invokeList, args[2][1]);
                    } else if (angular.isObject(invokeList)) {
                        angular.forEach(invokeList, function (invoke, key) {
                            if (angular.isString(invoke)) {
                                onInvoke(invoke, invokeList[1]);
                            } else {
                                onInvoke(key, invoke);
                            }
                        });
                    } else {
                        return false;
                    }
                    return newInvoke;
                }
                function _invokeQueue(providers, queue, moduleName, reconfig) {
                    if (!queue) {
                        return;
                    }
                    var i, len, args, provider;
                    for (i = 0, len = queue.length; i < len; i++) {
                        args = queue[i];
                        if (angular.isArray(args)) {
                            if (providers !== null) {
                                if (providers.hasOwnProperty(args[0])) {
                                    provider = providers[args[0]];
                                } else {
                                    throw new Error('unsupported provider ' + args[0]);
                                }
                            }
                            var isNew = _registerInvokeList(args, moduleName);
                            if (args[1] !== 'invoke') {
                                if (isNew && angular.isDefined(provider)) {
                                    provider[args[1]].apply(provider, args[2]);
                                }
                            } else {
                                var callInvoke = function callInvoke(fct) {
                                    var invoked = regConfigs.indexOf(moduleName + '-' + fct);
                                    if (invoked === -1 || reconfig) {
                                        if (invoked === -1) {
                                            regConfigs.push(moduleName + '-' + fct);
                                        }
                                        if (angular.isDefined(provider)) {
                                            provider[args[1]].apply(provider, args[2]);
                                        }
                                    }
                                };
                                if (angular.isFunction(args[2][0])) {
                                    callInvoke(args[2][0]);
                                } else if (angular.isArray(args[2][0])) {
                                    for (var j = 0, jlen = args[2][0].length; j < jlen; j++) {
                                        if (angular.isFunction(args[2][0][j])) {
                                            callInvoke(args[2][0][j]);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                function getModuleName(module) {
                    var moduleName = null;
                    if (angular.isString(module)) {
                        moduleName = module;
                    } else if (angular.isObject(module) && module.hasOwnProperty('name') && angular.isString(module.name)) {
                        moduleName = module.name;
                    }
                    return moduleName;
                }
                function moduleExists(moduleName) {
                    if (!angular.isString(moduleName)) {
                        return false;
                    }
                    try {
                        return ngModuleFct(moduleName);
                    } catch (e) {
                        if (/No module/.test(e) || e.message.indexOf('$injector:nomod') > -1) {
                            return false;
                        }
                    }
                }
                this.$get = [
                    '$log',
                    '$rootElement',
                    '$rootScope',
                    '$cacheFactory',
                    '$q',
                    function ($log, $rootElement, $rootScope, $cacheFactory, $q) {
                        var instanceInjector, filesCache = $cacheFactory('ocLazyLoad');
                        if (!debug) {
                            $log = {};
                            $log['error'] = angular.noop;
                            $log['warn'] = angular.noop;
                            $log['info'] = angular.noop;
                        }
                        providers.getInstanceInjector = function () {
                            return instanceInjector ? instanceInjector : instanceInjector = $rootElement.data('$injector') || angular.injector();
                        };
                        broadcast = function broadcast(eventName, params) {
                            if (events) {
                                $rootScope.$broadcast(eventName, params);
                            }
                            if (debug) {
                                $log.info(eventName, params);
                            }
                        };
                        function reject(e) {
                            var deferred = $q.defer();
                            $log.error(e.message);
                            deferred.reject(e);
                            return deferred.promise;
                        }
                        return {
                            _broadcast: broadcast,
                            _$log: $log,
                            _getFilesCache: function getFilesCache() {
                                return filesCache;
                            },
                            toggleWatch: function toggleWatch(watch) {
                                if (watch) {
                                    recordDeclarations.push(true);
                                } else {
                                    recordDeclarations.pop();
                                }
                            },
                            getModuleConfig: function getModuleConfig(moduleName) {
                                if (!angular.isString(moduleName)) {
                                    throw new Error('You need to give the name of the module to get');
                                }
                                if (!modules[moduleName]) {
                                    return null;
                                }
                                return angular.copy(modules[moduleName]);
                            },
                            setModuleConfig: function setModuleConfig(moduleConfig) {
                                if (!angular.isObject(moduleConfig)) {
                                    throw new Error('You need to give the module config object to set');
                                }
                                modules[moduleConfig.name] = moduleConfig;
                                return moduleConfig;
                            },
                            getModules: function getModules() {
                                return regModules;
                            },
                            isLoaded: function isLoaded(modulesNames) {
                                var moduleLoaded = function moduleLoaded(module) {
                                    var isLoaded = regModules.indexOf(module) > -1;
                                    if (!isLoaded) {
                                        isLoaded = !!moduleExists(module);
                                    }
                                    return isLoaded;
                                };
                                if (angular.isString(modulesNames)) {
                                    modulesNames = [modulesNames];
                                }
                                if (angular.isArray(modulesNames)) {
                                    var i, len;
                                    for (i = 0, len = modulesNames.length; i < len; i++) {
                                        if (!moduleLoaded(modulesNames[i])) {
                                            return false;
                                        }
                                    }
                                    return true;
                                } else {
                                    throw new Error('You need to define the module(s) name(s)');
                                }
                            },
                            _getModuleName: getModuleName,
                            _getModule: function getModule(moduleName) {
                                try {
                                    return ngModuleFct(moduleName);
                                } catch (e) {
                                    if (/No module/.test(e) || e.message.indexOf('$injector:nomod') > -1) {
                                        e.message = 'The module "' + stringify(moduleName) + '" that you are trying to load does not exist. ' + e.message;
                                    }
                                    throw e;
                                }
                            },
                            moduleExists: moduleExists,
                            _loadDependencies: function _loadDependencies(moduleName, localParams) {
                                var loadedModule, requires, diff, promisesList = [], self = this;
                                moduleName = self._getModuleName(moduleName);
                                if (moduleName === null) {
                                    return $q.when();
                                } else {
                                    try {
                                        loadedModule = self._getModule(moduleName);
                                    } catch (e) {
                                        return reject(e);
                                    }
                                    requires = self.getRequires(loadedModule);
                                }
                                angular.forEach(requires, function (requireEntry) {
                                    if (angular.isString(requireEntry)) {
                                        var config = self.getModuleConfig(requireEntry);
                                        if (config === null) {
                                            moduleCache.push(requireEntry);
                                            return;
                                        }
                                        requireEntry = config;
                                        config.name = undefined;
                                    }
                                    if (self.moduleExists(requireEntry.name)) {
                                        diff = requireEntry.files.filter(function (n) {
                                            return self.getModuleConfig(requireEntry.name).files.indexOf(n) < 0;
                                        });
                                        if (diff.length !== 0) {
                                            self._$log.warn('Module "', moduleName, '" attempted to redefine configuration for dependency. "', requireEntry.name, '"\n Additional Files Loaded:', diff);
                                        }
                                        if (angular.isDefined(self.filesLoader)) {
                                            promisesList.push(self.filesLoader(requireEntry, localParams).then(function () {
                                                return self._loadDependencies(requireEntry);
                                            }));
                                        } else {
                                            return reject(new Error('Error: New dependencies need to be loaded from external files (' + requireEntry.files + '), but no loader has been defined.'));
                                        }
                                        return;
                                    } else if (angular.isArray(requireEntry)) {
                                        var files = [];
                                        angular.forEach(requireEntry, function (entry) {
                                            var config = self.getModuleConfig(entry);
                                            if (config === null) {
                                                files.push(entry);
                                            } else if (config.files) {
                                                files = files.concat(config.files);
                                            }
                                        });
                                        if (files.length > 0) {
                                            requireEntry = { files: files };
                                        }
                                    } else if (angular.isObject(requireEntry)) {
                                        if (requireEntry.hasOwnProperty('name') && requireEntry['name']) {
                                            self.setModuleConfig(requireEntry);
                                            moduleCache.push(requireEntry['name']);
                                        }
                                    }
                                    if (angular.isDefined(requireEntry.files) && requireEntry.files.length !== 0) {
                                        if (angular.isDefined(self.filesLoader)) {
                                            promisesList.push(self.filesLoader(requireEntry, localParams).then(function () {
                                                return self._loadDependencies(requireEntry);
                                            }));
                                        } else {
                                            return reject(new Error('Error: the module "' + requireEntry.name + '" is defined in external files (' + requireEntry.files + '), but no loader has been defined.'));
                                        }
                                    }
                                });
                                return $q.all(promisesList);
                            },
                            inject: function inject(moduleName) {
                                var localParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
                                var real = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];
                                var self = this, deferred = $q.defer();
                                if (angular.isDefined(moduleName) && moduleName !== null) {
                                    if (angular.isArray(moduleName)) {
                                        var promisesList = [];
                                        angular.forEach(moduleName, function (module) {
                                            promisesList.push(self.inject(module, localParams, real));
                                        });
                                        return $q.all(promisesList);
                                    } else {
                                        self._addToLoadList(self._getModuleName(moduleName), true, real);
                                    }
                                }
                                if (modulesToLoad.length > 0) {
                                    var res = modulesToLoad.slice();
                                    var loadNext = function loadNext(moduleName) {
                                        moduleCache.push(moduleName);
                                        modulePromises[moduleName] = deferred.promise;
                                        self._loadDependencies(moduleName, localParams).then(function success() {
                                            try {
                                                justLoaded = [];
                                                _register(providers, moduleCache, localParams);
                                            } catch (e) {
                                                self._$log.error(e.message);
                                                deferred.reject(e);
                                                return;
                                            }
                                            if (modulesToLoad.length > 0) {
                                                loadNext(modulesToLoad.shift());
                                            } else {
                                                deferred.resolve(res);
                                            }
                                        }, function error(err) {
                                            deferred.reject(err);
                                        });
                                    };
                                    loadNext(modulesToLoad.shift());
                                } else if (localParams && localParams.name && modulePromises[localParams.name]) {
                                    return modulePromises[localParams.name];
                                } else {
                                    deferred.resolve();
                                }
                                return deferred.promise;
                            },
                            getRequires: function getRequires(module) {
                                var requires = [];
                                angular.forEach(module.requires, function (requireModule) {
                                    if (regModules.indexOf(requireModule) === -1) {
                                        requires.push(requireModule);
                                    }
                                });
                                return requires;
                            },
                            _invokeQueue: _invokeQueue,
                            _registerInvokeList: _registerInvokeList,
                            _register: _register,
                            _addToLoadList: _addToLoadList,
                            _unregister: function _unregister(modules) {
                                if (angular.isDefined(modules)) {
                                    if (angular.isArray(modules)) {
                                        angular.forEach(modules, function (module) {
                                            regInvokes[module] = undefined;
                                        });
                                    }
                                }
                            }
                        };
                    }
                ];
                this._init(angular.element(window.document));
            }
        ]);
        var bootstrapFct = angular.bootstrap;
        angular.bootstrap = function (element, modules, config) {
            angular.forEach(modules.slice(), function (module) {
                _addToLoadList(module, true, true);
            });
            return bootstrapFct(element, modules, config);
        };
        var _addToLoadList = function _addToLoadList(name, force, real) {
            if ((recordDeclarations.length > 0 || force) && angular.isString(name) && modulesToLoad.indexOf(name) === -1) {
                modulesToLoad.push(name);
                if (real) {
                    realModules.push(name);
                }
            }
        };
        var ngModuleFct = angular.module;
        angular.module = function (name, requires, configFn) {
            _addToLoadList(name, false, true);
            return ngModuleFct(name, requires, configFn);
        };
        if (typeof module !== 'undefined' && typeof exports !== 'undefined' && module.exports === exports) {
            module.exports = 'oc.lazyLoad';
        }
    }(angular, window));
    (function (angular) {
        'use strict';
        angular.module('oc.lazyLoad').directive('ocLazyLoad', [
            '$ocLazyLoad',
            '$compile',
            '$animate',
            '$parse',
            '$timeout',
            function ($ocLazyLoad, $compile, $animate, $parse, $timeout) {
                return {
                    restrict: 'A',
                    terminal: true,
                    priority: 1000,
                    compile: function compile(element, attrs) {
                        var content = element[0].innerHTML;
                        element.html('');
                        return function ($scope, $element, $attr) {
                            var model = $parse($attr.ocLazyLoad);
                            $scope.$watch(function () {
                                return model($scope) || $attr.ocLazyLoad;
                            }, function (moduleName) {
                                if (angular.isDefined(moduleName)) {
                                    $ocLazyLoad.load(moduleName).then(function () {
                                        $animate.enter(content, $element);
                                        $compile($element.contents())($scope);
                                    });
                                }
                            }, true);
                        };
                    }
                };
            }
        ]);
    }(angular));
    (function (angular) {
        'use strict';
        angular.module('oc.lazyLoad').config([
            '$provide',
            function ($provide) {
                $provide.decorator('$ocLazyLoad', [
                    '$delegate',
                    '$q',
                    '$window',
                    '$interval',
                    function ($delegate, $q, $window, $interval) {
                        var uaCssChecked = false, useCssLoadPatch = false, anchor = $window.document.getElementsByTagName('head')[0] || $window.document.getElementsByTagName('body')[0];
                        $delegate.buildElement = function buildElement(type, path, params) {
                            var deferred = $q.defer(), el, loaded, filesCache = $delegate._getFilesCache(), cacheBuster = function cacheBuster(url) {
                                    var dc = new Date().getTime();
                                    if (url.indexOf('?') >= 0) {
                                        if (url.substring(0, url.length - 1) === '&') {
                                            return url + '_dc=' + dc;
                                        }
                                        return url + '&_dc=' + dc;
                                    } else {
                                        return url + '?_dc=' + dc;
                                    }
                                };
                            if (angular.isUndefined(filesCache.get(path))) {
                                filesCache.put(path, deferred.promise);
                            }
                            switch (type) {
                            case 'css':
                                el = $window.document.createElement('link');
                                el.type = 'text/css';
                                el.rel = 'stylesheet';
                                el.href = params.cache === false ? cacheBuster(path) : path;
                                break;
                            case 'js':
                                el = $window.document.createElement('script');
                                el.src = params.cache === false ? cacheBuster(path) : path;
                                break;
                            default:
                                filesCache.remove(path);
                                deferred.reject(new Error('Requested type "' + type + '" is not known. Could not inject "' + path + '"'));
                                break;
                            }
                            el.onload = el['onreadystatechange'] = function (e) {
                                if (el['readyState'] && !/^c|loade/.test(el['readyState']) || loaded)
                                    return;
                                el.onload = el['onreadystatechange'] = null;
                                loaded = 1;
                                $delegate._broadcast('ocLazyLoad.fileLoaded', path);
                                deferred.resolve();
                            };
                            el.onerror = function () {
                                filesCache.remove(path);
                                deferred.reject(new Error('Unable to load ' + path));
                            };
                            el.async = params.serie ? 0 : 1;
                            var insertBeforeElem = anchor.lastChild;
                            if (params.insertBefore) {
                                var element = angular.element(angular.isDefined(window.jQuery) ? params.insertBefore : document.querySelector(params.insertBefore));
                                if (element && element.length > 0) {
                                    insertBeforeElem = element[0];
                                }
                            }
                            insertBeforeElem.parentNode.insertBefore(el, insertBeforeElem);
                            if (type == 'css') {
                                if (!uaCssChecked) {
                                    var ua = $window.navigator.userAgent.toLowerCase();
                                    if (/iP(hone|od|ad)/.test($window.navigator.platform)) {
                                        var v = $window.navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
                                        var iOSVersion = parseFloat([
                                            parseInt(v[1], 10),
                                            parseInt(v[2], 10),
                                            parseInt(v[3] || 0, 10)
                                        ].join('.'));
                                        useCssLoadPatch = iOSVersion < 6;
                                    } else if (ua.indexOf('android') > -1) {
                                        var androidVersion = parseFloat(ua.slice(ua.indexOf('android') + 8));
                                        useCssLoadPatch = androidVersion < 4.4;
                                    } else if (ua.indexOf('safari') > -1) {
                                        var versionMatch = ua.match(/version\/([\.\d]+)/i);
                                        useCssLoadPatch = versionMatch && versionMatch[1] && parseFloat(versionMatch[1]) < 6;
                                    }
                                }
                                if (useCssLoadPatch) {
                                    var tries = 1000;
                                    var interval = $interval(function () {
                                        try {
                                            el.sheet.cssRules;
                                            $interval.cancel(interval);
                                            el.onload();
                                        } catch (e) {
                                            if (--tries <= 0) {
                                                el.onerror();
                                            }
                                        }
                                    }, 20);
                                }
                            }
                            return deferred.promise;
                        };
                        return $delegate;
                    }
                ]);
            }
        ]);
    }(angular));
    (function (angular) {
        'use strict';
        angular.module('oc.lazyLoad').config([
            '$provide',
            function ($provide) {
                $provide.decorator('$ocLazyLoad', [
                    '$delegate',
                    '$q',
                    function ($delegate, $q) {
                        $delegate.filesLoader = function filesLoader(config) {
                            var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
                            var cssFiles = [], templatesFiles = [], jsFiles = [], promises = [], cachePromise = null, filesCache = $delegate._getFilesCache();
                            $delegate.toggleWatch(true);
                            angular.extend(params, config);
                            var pushFile = function pushFile(path) {
                                var file_type = null, m;
                                if (angular.isObject(path)) {
                                    file_type = path.type;
                                    path = path.path;
                                }
                                cachePromise = filesCache.get(path);
                                if (angular.isUndefined(cachePromise) || params.cache === false) {
                                    if ((m = /^(css|less|html|htm|js)?(?=!)/.exec(path)) !== null) {
                                        file_type = m[1];
                                        path = path.substr(m[1].length + 1, path.length);
                                    }
                                    if (!file_type) {
                                        if ((m = /[.](css|less|html|htm|js)?((\?|#).*)?$/.exec(path)) !== null) {
                                            file_type = m[1];
                                        } else if (!$delegate.jsLoader.hasOwnProperty('ocLazyLoadLoader') && $delegate.jsLoader.hasOwnProperty('requirejs')) {
                                            file_type = 'js';
                                        } else {
                                            $delegate._$log.error('File type could not be determined. ' + path);
                                            return;
                                        }
                                    }
                                    if ((file_type === 'css' || file_type === 'less') && cssFiles.indexOf(path) === -1) {
                                        cssFiles.push(path);
                                    } else if ((file_type === 'html' || file_type === 'htm') && templatesFiles.indexOf(path) === -1) {
                                        templatesFiles.push(path);
                                    } else if (file_type === 'js' || jsFiles.indexOf(path) === -1) {
                                        jsFiles.push(path);
                                    } else {
                                        $delegate._$log.error('File type is not valid. ' + path);
                                    }
                                } else if (cachePromise) {
                                    promises.push(cachePromise);
                                }
                            };
                            if (params.serie) {
                                pushFile(params.files.shift());
                            } else {
                                angular.forEach(params.files, function (path) {
                                    pushFile(path);
                                });
                            }
                            if (cssFiles.length > 0) {
                                var cssDeferred = $q.defer();
                                $delegate.cssLoader(cssFiles, function (err) {
                                    if (angular.isDefined(err) && $delegate.cssLoader.hasOwnProperty('ocLazyLoadLoader')) {
                                        $delegate._$log.error(err);
                                        cssDeferred.reject(err);
                                    } else {
                                        cssDeferred.resolve();
                                    }
                                }, params);
                                promises.push(cssDeferred.promise);
                            }
                            if (templatesFiles.length > 0) {
                                var templatesDeferred = $q.defer();
                                $delegate.templatesLoader(templatesFiles, function (err) {
                                    if (angular.isDefined(err) && $delegate.templatesLoader.hasOwnProperty('ocLazyLoadLoader')) {
                                        $delegate._$log.error(err);
                                        templatesDeferred.reject(err);
                                    } else {
                                        templatesDeferred.resolve();
                                    }
                                }, params);
                                promises.push(templatesDeferred.promise);
                            }
                            if (jsFiles.length > 0) {
                                var jsDeferred = $q.defer();
                                $delegate.jsLoader(jsFiles, function (err) {
                                    if (angular.isDefined(err) && ($delegate.jsLoader.hasOwnProperty('ocLazyLoadLoader') || $delegate.jsLoader.hasOwnProperty('requirejs'))) {
                                        $delegate._$log.error(err);
                                        jsDeferred.reject(err);
                                    } else {
                                        jsDeferred.resolve();
                                    }
                                }, params);
                                promises.push(jsDeferred.promise);
                            }
                            if (promises.length === 0) {
                                var deferred = $q.defer(), err = 'Error: no file to load has been found, if you\'re trying to load an existing module you should use the \'inject\' method instead of \'load\'.';
                                $delegate._$log.error(err);
                                deferred.reject(err);
                                return deferred.promise;
                            } else if (params.serie && params.files.length > 0) {
                                return $q.all(promises).then(function () {
                                    return $delegate.filesLoader(config, params);
                                });
                            } else {
                                return $q.all(promises)['finally'](function (res) {
                                    $delegate.toggleWatch(false);
                                    return res;
                                });
                            }
                        };
                        $delegate.load = function (originalModule) {
                            var originalParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
                            var self = this, config = null, deferredList = [], deferred = $q.defer(), errText;
                            var module = angular.copy(originalModule);
                            var params = angular.copy(originalParams);
                            if (angular.isArray(module)) {
                                angular.forEach(module, function (m) {
                                    deferredList.push(self.load(m, params));
                                });
                                $q.all(deferredList).then(function (res) {
                                    deferred.resolve(res);
                                }, function (err) {
                                    deferred.reject(err);
                                });
                                return deferred.promise;
                            }
                            if (angular.isString(module)) {
                                config = self.getModuleConfig(module);
                                if (!config) {
                                    config = { files: [module] };
                                }
                            } else if (angular.isObject(module)) {
                                if (angular.isDefined(module.path) && angular.isDefined(module.type)) {
                                    config = { files: [module] };
                                } else {
                                    config = self.setModuleConfig(module);
                                }
                            }
                            if (config === null) {
                                var moduleName = self._getModuleName(module);
                                errText = 'Module "' + (moduleName || 'unknown') + '" is not configured, cannot load.';
                                $delegate._$log.error(errText);
                                deferred.reject(new Error(errText));
                                return deferred.promise;
                            } else {
                                if (angular.isDefined(config.template)) {
                                    if (angular.isUndefined(config.files)) {
                                        config.files = [];
                                    }
                                    if (angular.isString(config.template)) {
                                        config.files.push(config.template);
                                    } else if (angular.isArray(config.template)) {
                                        config.files.concat(config.template);
                                    }
                                }
                            }
                            var localParams = angular.extend({}, params, config);
                            if (angular.isUndefined(config.files) && angular.isDefined(config.name) && $delegate.moduleExists(config.name)) {
                                return $delegate.inject(config.name, localParams, true);
                            }
                            $delegate.filesLoader(config, localParams).then(function () {
                                $delegate.inject(null, localParams).then(function (res) {
                                    deferred.resolve(res);
                                }, function (err) {
                                    deferred.reject(err);
                                });
                            }, function (err) {
                                deferred.reject(err);
                            });
                            return deferred.promise;
                        };
                        return $delegate;
                    }
                ]);
            }
        ]);
    }(angular));
    (function (angular) {
        'use strict';
        angular.module('oc.lazyLoad').config([
            '$provide',
            function ($provide) {
                $provide.decorator('$ocLazyLoad', [
                    '$delegate',
                    '$q',
                    function ($delegate, $q) {
                        $delegate.cssLoader = function (paths, callback, params) {
                            var promises = [];
                            angular.forEach(paths, function (path) {
                                promises.push($delegate.buildElement('css', path, params));
                            });
                            $q.all(promises).then(function () {
                                callback();
                            }, function (err) {
                                callback(err);
                            });
                        };
                        $delegate.cssLoader.ocLazyLoadLoader = true;
                        return $delegate;
                    }
                ]);
            }
        ]);
    }(angular));
    (function (angular) {
        'use strict';
        angular.module('oc.lazyLoad').config([
            '$provide',
            function ($provide) {
                $provide.decorator('$ocLazyLoad', [
                    '$delegate',
                    '$q',
                    function ($delegate, $q) {
                        $delegate.jsLoader = function (paths, callback, params) {
                            require(paths, callback.bind(null, undefined), callback, params);
                        };
                        $delegate.jsLoader.requirejs = true;
                        return $delegate;
                    }
                ]);
            }
        ]);
    }(angular));
    (function (angular) {
        'use strict';
        angular.module('oc.lazyLoad').config([
            '$provide',
            function ($provide) {
                $provide.decorator('$ocLazyLoad', [
                    '$delegate',
                    '$templateCache',
                    '$q',
                    '$http',
                    function ($delegate, $templateCache, $q, $http) {
                        $delegate.templatesLoader = function (paths, callback, params) {
                            var promises = [], filesCache = $delegate._getFilesCache();
                            angular.forEach(paths, function (url) {
                                var deferred = $q.defer();
                                promises.push(deferred.promise);
                                $http.get(url, params).success(function (data) {
                                    if (angular.isString(data) && data.length > 0) {
                                        angular.forEach(angular.element(data), function (node) {
                                            if (node.nodeName === 'SCRIPT' && node.type === 'text/ng-template') {
                                                $templateCache.put(node.id, node.innerHTML);
                                            }
                                        });
                                    }
                                    if (angular.isUndefined(filesCache.get(url))) {
                                        filesCache.put(url, true);
                                    }
                                    deferred.resolve();
                                }).error(function (err) {
                                    deferred.reject(new Error('Unable to load template file "' + url + '": ' + err));
                                });
                            });
                            return $q.all(promises).then(function () {
                                callback();
                            }, function (err) {
                                callback(err);
                            });
                        };
                        $delegate.templatesLoader.ocLazyLoadLoader = true;
                        return $delegate;
                    }
                ]);
            }
        ]);
    }(angular));
    if (!Array.prototype.indexOf) {
        Array.prototype.indexOf = function (searchElement, fromIndex) {
            var k;
            if (this == null) {
                throw new TypeError('"this" is null or not defined');
            }
            var O = Object(this);
            var len = O.length >>> 0;
            if (len === 0) {
                return -1;
            }
            var n = +fromIndex || 0;
            if (Math.abs(n) === Infinity) {
                n = 0;
            }
            if (n >= len) {
                return -1;
            }
            k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);
            while (k < len) {
                if (k in O && O[k] === searchElement) {
                    return k;
                }
                k++;
            }
            return -1;
        };
    }
    return;
});
define('loadingBar', ['angular'], function () {
    (function () {
        'use strict';
        angular.module('angular-loading-bar', ['cfp.loadingBarInterceptor']);
        angular.module('chieffancypants.loadingBar', ['cfp.loadingBarInterceptor']);
        angular.module('cfp.loadingBarInterceptor', ['cfp.loadingBar']).config([
            '$httpProvider',
            function ($httpProvider) {
                var interceptor = [
                    '$q',
                    '$cacheFactory',
                    '$timeout',
                    '$rootScope',
                    '$log',
                    'cfpLoadingBar',
                    function ($q, $cacheFactory, $timeout, $rootScope, $log, cfpLoadingBar) {
                        var reqsTotal = 0;
                        var reqsCompleted = 0;
                        var latencyThreshold = cfpLoadingBar.latencyThreshold;
                        var startTimeout;
                        function setComplete() {
                            $timeout.cancel(startTimeout);
                            cfpLoadingBar.complete();
                            reqsCompleted = 0;
                            reqsTotal = 0;
                        }
                        function isCached(config) {
                            var cache;
                            var defaultCache = $cacheFactory.get('$http');
                            var defaults = $httpProvider.defaults;
                            if ((config.cache || defaults.cache) && config.cache !== false && (config.method === 'GET' || config.method === 'JSONP')) {
                                cache = angular.isObject(config.cache) ? config.cache : angular.isObject(defaults.cache) ? defaults.cache : defaultCache;
                            }
                            var cached = cache !== undefined ? cache.get(config.url) !== undefined : false;
                            if (config.cached !== undefined && cached !== config.cached) {
                                return config.cached;
                            }
                            config.cached = cached;
                            return cached;
                        }
                        return {
                            'request': function (config) {
                                if (!config.ignoreLoadingBar && !isCached(config)) {
                                    $rootScope.$broadcast('cfpLoadingBar:loading', { url: config.url });
                                    if (reqsTotal === 0) {
                                        startTimeout = $timeout(function () {
                                            cfpLoadingBar.start();
                                        }, latencyThreshold);
                                    }
                                    reqsTotal++;
                                    cfpLoadingBar.set(reqsCompleted / reqsTotal);
                                }
                                return config;
                            },
                            'response': function (response) {
                                if (!response || !response.config) {
                                    $log.error('Broken interceptor detected: Config object not supplied in response:\n https://github.com/chieffancypants/angular-loading-bar/pull/50');
                                    return response;
                                }
                                if (!response.config.ignoreLoadingBar && !isCached(response.config)) {
                                    reqsCompleted++;
                                    $rootScope.$broadcast('cfpLoadingBar:loaded', {
                                        url: response.config.url,
                                        result: response
                                    });
                                    if (reqsCompleted >= reqsTotal) {
                                        setComplete();
                                    } else {
                                        cfpLoadingBar.set(reqsCompleted / reqsTotal);
                                    }
                                }
                                return response;
                            },
                            'responseError': function (rejection) {
                                if (!rejection || !rejection.config) {
                                    $log.error('Broken interceptor detected: Config object not supplied in rejection:\n https://github.com/chieffancypants/angular-loading-bar/pull/50');
                                    return $q.reject(rejection);
                                }
                                if (!rejection.config.ignoreLoadingBar && !isCached(rejection.config)) {
                                    reqsCompleted++;
                                    $rootScope.$broadcast('cfpLoadingBar:loaded', {
                                        url: rejection.config.url,
                                        result: rejection
                                    });
                                    if (reqsCompleted >= reqsTotal) {
                                        setComplete();
                                    } else {
                                        cfpLoadingBar.set(reqsCompleted / reqsTotal);
                                    }
                                }
                                return $q.reject(rejection);
                            }
                        };
                    }
                ];
                $httpProvider.interceptors.push(interceptor);
            }
        ]);
        angular.module('cfp.loadingBar', []).provider('cfpLoadingBar', function () {
            this.autoIncrement = true;
            this.includeSpinner = true;
            this.includeBar = true;
            this.latencyThreshold = 100;
            this.startSize = 0.02;
            this.parentSelector = 'body';
            this.spinnerTemplate = '<div id="loading-bar-spinner"><div class="spinner-icon"></div></div>';
            this.loadingBarTemplate = '<div id="loading-bar"><div class="bar"><div class="peg"></div></div></div>';
            this.$get = [
                '$injector',
                '$document',
                '$timeout',
                '$rootScope',
                function ($injector, $document, $timeout, $rootScope) {
                    var $animate;
                    var $parentSelector = this.parentSelector, loadingBarContainer = angular.element(this.loadingBarTemplate), loadingBar = loadingBarContainer.find('div').eq(0), spinner = angular.element(this.spinnerTemplate);
                    var incTimeout, completeTimeout, started = false, status = 0;
                    var autoIncrement = this.autoIncrement;
                    var includeSpinner = this.includeSpinner;
                    var includeBar = this.includeBar;
                    var startSize = this.startSize;
                    function _start() {
                        if (!$animate) {
                            $animate = $injector.get('$animate');
                        }
                        $timeout.cancel(completeTimeout);
                        if (started) {
                            return;
                        }
                        var document = $document[0];
                        var parent = document.querySelector ? document.querySelector($parentSelector) : $document.find($parentSelector)[0];
                        if (!parent) {
                            parent = document.getElementsByTagName('body')[0];
                        }
                        var $parent = angular.element(parent);
                        var $after = parent.lastChild && angular.element(parent.lastChild);
                        $rootScope.$broadcast('cfpLoadingBar:started');
                        started = true;
                        if (includeBar) {
                            $animate.enter(loadingBarContainer, $parent, $after);
                        }
                        if (includeSpinner) {
                            $animate.enter(spinner, $parent, loadingBarContainer);
                        }
                        _set(startSize);
                    }
                    function _set(n) {
                        if (!started) {
                            return;
                        }
                        var pct = n * 100 + '%';
                        loadingBar.css('width', pct);
                        status = n;
                        if (autoIncrement) {
                            $timeout.cancel(incTimeout);
                            incTimeout = $timeout(function () {
                                _inc();
                            }, 250);
                        }
                    }
                    function _inc() {
                        if (_status() >= 1) {
                            return;
                        }
                        var rnd = 0;
                        var stat = _status();
                        if (stat >= 0 && stat < 0.25) {
                            rnd = (Math.random() * (5 - 3 + 1) + 3) / 100;
                        } else if (stat >= 0.25 && stat < 0.65) {
                            rnd = Math.random() * 3 / 100;
                        } else if (stat >= 0.65 && stat < 0.9) {
                            rnd = Math.random() * 2 / 100;
                        } else if (stat >= 0.9 && stat < 0.99) {
                            rnd = 0.005;
                        } else {
                            rnd = 0;
                        }
                        var pct = _status() + rnd;
                        _set(pct);
                    }
                    function _status() {
                        return status;
                    }
                    function _completeAnimation() {
                        status = 0;
                        started = false;
                    }
                    function _complete() {
                        if (!$animate) {
                            $animate = $injector.get('$animate');
                        }
                        $rootScope.$broadcast('cfpLoadingBar:completed');
                        _set(1);
                        $timeout.cancel(completeTimeout);
                        completeTimeout = $timeout(function () {
                            var promise = $animate.leave(loadingBarContainer, _completeAnimation);
                            if (promise && promise.then) {
                                promise.then(_completeAnimation);
                            }
                            $animate.leave(spinner);
                        }, 500);
                    }
                    return {
                        start: _start,
                        set: _set,
                        status: _status,
                        inc: _inc,
                        complete: _complete,
                        autoIncrement: this.autoIncrement,
                        includeSpinner: this.includeSpinner,
                        latencyThreshold: this.latencyThreshold,
                        parentSelector: this.parentSelector,
                        startSize: this.startSize
                    };
                }
            ];
        });
    }());
    return;
});
define('ngAnimate', ['angular'], function () {
    (function (S, q) {
        'use strict';
        function Aa(a, b, c) {
            if (!a)
                throw Ma('areq', b || '?', c || 'required');
            return a;
        }
        function Ba(a, b) {
            if (!a && !b)
                return '';
            if (!a)
                return b;
            if (!b)
                return a;
            ba(a) && (a = a.join(' '));
            ba(b) && (b = b.join(' '));
            return a + ' ' + b;
        }
        function Na(a) {
            var b = {};
            a && (a.to || a.from) && (b.to = a.to, b.from = a.from);
            return b;
        }
        function X(a, b, c) {
            var d = '';
            a = ba(a) ? a : a && P(a) && a.length ? a.split(/\s+/) : [];
            r(a, function (a, f) {
                a && 0 < a.length && (d += 0 < f ? ' ' : '', d += c ? b + a : a + b);
            });
            return d;
        }
        function Oa(a) {
            if (a instanceof G)
                switch (a.length) {
                case 0:
                    return [];
                case 1:
                    if (1 === a[0].nodeType)
                        return a;
                    break;
                default:
                    return G(ca(a));
                }
            if (1 === a.nodeType)
                return G(a);
        }
        function ca(a) {
            if (!a[0])
                return a;
            for (var b = 0; b < a.length; b++) {
                var c = a[b];
                if (1 == c.nodeType)
                    return c;
            }
        }
        function Pa(a, b, c) {
            r(b, function (b) {
                a.addClass(b, c);
            });
        }
        function Qa(a, b, c) {
            r(b, function (b) {
                a.removeClass(b, c);
            });
        }
        function U(a) {
            return function (b, c) {
                c.addClass && (Pa(a, b, c.addClass), c.addClass = null);
                c.removeClass && (Qa(a, b, c.removeClass), c.removeClass = null);
            };
        }
        function pa(a) {
            a = a || {};
            if (!a.$$prepared) {
                var b = a.domOperation || Q;
                a.domOperation = function () {
                    a.$$domOperationFired = !0;
                    b();
                    b = Q;
                };
                a.$$prepared = !0;
            }
            return a;
        }
        function ga(a, b) {
            Ca(a, b);
            Da(a, b);
        }
        function Ca(a, b) {
            b.from && (a.css(b.from), b.from = null);
        }
        function Da(a, b) {
            b.to && (a.css(b.to), b.to = null);
        }
        function V(a, b, c) {
            var d = b.options || {};
            c = c.options || {};
            var e = (d.addClass || '') + ' ' + (c.addClass || ''), f = (d.removeClass || '') + ' ' + (c.removeClass || '');
            a = Ra(a.attr('class'), e, f);
            c.preparationClasses && (d.preparationClasses = Y(c.preparationClasses, d.preparationClasses), delete c.preparationClasses);
            e = d.domOperation !== Q ? d.domOperation : null;
            Ea(d, c);
            e && (d.domOperation = e);
            d.addClass = a.addClass ? a.addClass : null;
            d.removeClass = a.removeClass ? a.removeClass : null;
            b.addClass = d.addClass;
            b.removeClass = d.removeClass;
            return d;
        }
        function Ra(a, b, c) {
            function d(a) {
                P(a) && (a = a.split(' '));
                var b = {};
                r(a, function (a) {
                    a.length && (b[a] = !0);
                });
                return b;
            }
            var e = {};
            a = d(a);
            b = d(b);
            r(b, function (a, b) {
                e[b] = 1;
            });
            c = d(c);
            r(c, function (a, b) {
                e[b] = 1 === e[b] ? null : -1;
            });
            var f = {
                addClass: '',
                removeClass: ''
            };
            r(e, function (b, c) {
                var d, e;
                1 === b ? (d = 'addClass', e = !a[c]) : -1 === b && (d = 'removeClass', e = a[c]);
                e && (f[d].length && (f[d] += ' '), f[d] += c);
            });
            return f;
        }
        function D(a) {
            return a instanceof q.element ? a[0] : a;
        }
        function Sa(a, b, c) {
            var d = '';
            b && (d = X(b, 'ng-', !0));
            c.addClass && (d = Y(d, X(c.addClass, '-add')));
            c.removeClass && (d = Y(d, X(c.removeClass, '-remove')));
            d.length && (c.preparationClasses = d, a.addClass(d));
        }
        function qa(a, b) {
            var c = b ? '-' + b + 's' : '';
            la(a, [
                ma,
                c
            ]);
            return [
                ma,
                c
            ];
        }
        function ta(a, b) {
            var c = b ? 'paused' : '', d = Z + 'PlayState';
            la(a, [
                d,
                c
            ]);
            return [
                d,
                c
            ];
        }
        function la(a, b) {
            a.style[b[0]] = b[1];
        }
        function Y(a, b) {
            return a ? b ? a + ' ' + b : a : b;
        }
        function Fa(a, b, c) {
            var d = Object.create(null), e = a.getComputedStyle(b) || {};
            r(c, function (a, b) {
                var c = e[a];
                if (c) {
                    var s = c.charAt(0);
                    if ('-' === s || '+' === s || 0 <= s)
                        c = Ta(c);
                    0 === c && (c = null);
                    d[b] = c;
                }
            });
            return d;
        }
        function Ta(a) {
            var b = 0;
            a = a.split(/\s*,\s*/);
            r(a, function (a) {
                's' == a.charAt(a.length - 1) && (a = a.substring(0, a.length - 1));
                a = parseFloat(a) || 0;
                b = b ? Math.max(a, b) : a;
            });
            return b;
        }
        function ua(a) {
            return 0 === a || null != a;
        }
        function Ga(a, b) {
            var c = T, d = a + 's';
            b ? c += 'Duration' : d += ' linear all';
            return [
                c,
                d
            ];
        }
        function Ha() {
            var a = Object.create(null);
            return {
                flush: function () {
                    a = Object.create(null);
                },
                count: function (b) {
                    return (b = a[b]) ? b.total : 0;
                },
                get: function (b) {
                    return (b = a[b]) && b.value;
                },
                put: function (b, c) {
                    a[b] ? a[b].total++ : a[b] = {
                        total: 1,
                        value: c
                    };
                }
            };
        }
        function Ia(a, b, c) {
            r(c, function (c) {
                a[c] = da(a[c]) ? a[c] : b.style.getPropertyValue(c);
            });
        }
        var Q = q.noop, Ja = q.copy, Ea = q.extend, G = q.element, r = q.forEach, ba = q.isArray, P = q.isString, va = q.isObject, C = q.isUndefined, da = q.isDefined, Ka = q.isFunction, wa = q.isElement, T, xa, Z, ya;
        C(S.ontransitionend) && da(S.onwebkittransitionend) ? (T = 'WebkitTransition', xa = 'webkitTransitionEnd transitionend') : (T = 'transition', xa = 'transitionend');
        C(S.onanimationend) && da(S.onwebkitanimationend) ? (Z = 'WebkitAnimation', ya = 'webkitAnimationEnd animationend') : (Z = 'animation', ya = 'animationend');
        var ra = Z + 'Delay', za = Z + 'Duration', ma = T + 'Delay', La = T + 'Duration', Ma = q.$$minErr('ng'), Ua = {
                transitionDuration: La,
                transitionDelay: ma,
                transitionProperty: T + 'Property',
                animationDuration: za,
                animationDelay: ra,
                animationIterationCount: Z + 'IterationCount'
            }, Va = {
                transitionDuration: La,
                transitionDelay: ma,
                animationDuration: za,
                animationDelay: ra
            };
        q.module('ngAnimate', []).directive('ngAnimateSwap', [
            '$animate',
            '$rootScope',
            function (a, b) {
                return {
                    restrict: 'A',
                    transclude: 'element',
                    terminal: !0,
                    priority: 600,
                    link: function (b, d, e, f, z) {
                        var B, s;
                        b.$watchCollection(e.ngAnimateSwap || e['for'], function (e) {
                            B && a.leave(B);
                            s && (s.$destroy(), s = null);
                            if (e || 0 === e)
                                s = b.$new(), z(s, function (b) {
                                    B = b;
                                    a.enter(b, null, d);
                                });
                        });
                    }
                };
            }
        ]).directive('ngAnimateChildren', [
            '$interpolate',
            function (a) {
                return {
                    link: function (b, c, d) {
                        function e(a) {
                            c.data('$$ngAnimateChildren', 'on' === a || 'true' === a);
                        }
                        var f = d.ngAnimateChildren;
                        q.isString(f) && 0 === f.length ? c.data('$$ngAnimateChildren', !0) : (e(a(f)(b)), d.$observe('ngAnimateChildren', e));
                    }
                };
            }
        ]).factory('$$rAFScheduler', [
            '$$rAF',
            function (a) {
                function b(a) {
                    d = d.concat(a);
                    c();
                }
                function c() {
                    if (d.length) {
                        for (var b = d.shift(), z = 0; z < b.length; z++)
                            b[z]();
                        e || a(function () {
                            e || c();
                        });
                    }
                }
                var d, e;
                d = b.queue = [];
                b.waitUntilQuiet = function (b) {
                    e && e();
                    e = a(function () {
                        e = null;
                        b();
                        c();
                    });
                };
                return b;
            }
        ]).provider('$$animateQueue', [
            '$animateProvider',
            function (a) {
                function b(a) {
                    if (!a)
                        return null;
                    a = a.split(' ');
                    var b = Object.create(null);
                    r(a, function (a) {
                        b[a] = !0;
                    });
                    return b;
                }
                function c(a, c) {
                    if (a && c) {
                        var d = b(c);
                        return a.split(' ').some(function (a) {
                            return d[a];
                        });
                    }
                }
                function d(a, b, c, d) {
                    return f[a].some(function (a) {
                        return a(b, c, d);
                    });
                }
                function e(a, b) {
                    var c = 0 < (a.addClass || '').length, d = 0 < (a.removeClass || '').length;
                    return b ? c && d : c || d;
                }
                var f = this.rules = {
                    skip: [],
                    cancel: [],
                    join: []
                };
                f.join.push(function (a, b, c) {
                    return !b.structural && e(b);
                });
                f.skip.push(function (a, b, c) {
                    return !b.structural && !e(b);
                });
                f.skip.push(function (a, b, c) {
                    return 'leave' == c.event && b.structural;
                });
                f.skip.push(function (a, b, c) {
                    return c.structural && 2 === c.state && !b.structural;
                });
                f.cancel.push(function (a, b, c) {
                    return c.structural && b.structural;
                });
                f.cancel.push(function (a, b, c) {
                    return 2 === c.state && b.structural;
                });
                f.cancel.push(function (a, b, d) {
                    if (d.structural)
                        return !1;
                    a = b.addClass;
                    b = b.removeClass;
                    var e = d.addClass;
                    d = d.removeClass;
                    return C(a) && C(b) || C(e) && C(d) ? !1 : c(a, d) || c(b, e);
                });
                this.$get = [
                    '$$rAF',
                    '$rootScope',
                    '$rootElement',
                    '$document',
                    '$$HashMap',
                    '$$animation',
                    '$$AnimateRunner',
                    '$templateRequest',
                    '$$jqLite',
                    '$$forceReflow',
                    function (b, c, f, v, I, Wa, u, sa, w, x) {
                        function R() {
                            var a = !1;
                            return function (b) {
                                a ? b() : c.$$postDigest(function () {
                                    a = !0;
                                    b();
                                });
                            };
                        }
                        function J(a, b, c) {
                            var g = D(b), d = D(a), k = [];
                            (a = h[c]) && r(a, function (a) {
                                ia.call(a.node, g) ? k.push(a.callback) : 'leave' === c && ia.call(a.node, d) && k.push(a.callback);
                            });
                            return k;
                        }
                        function k(a, b, c) {
                            var g = ca(b);
                            return a.filter(function (a) {
                                return !(a.node === g && (!c || a.callback === c));
                            });
                        }
                        function p(a, k, h) {
                            function l(c, g, d, h) {
                                f(function () {
                                    var c = J(oa, a, g);
                                    c.length ? b(function () {
                                        r(c, function (b) {
                                            b(a, d, h);
                                        });
                                        'close' !== d || a[0].parentNode || N.off(a);
                                    }) : 'close' !== d || a[0].parentNode || N.off(a);
                                });
                                c.progress(g, d, h);
                            }
                            function A(b) {
                                var c = a, g = m;
                                g.preparationClasses && (c.removeClass(g.preparationClasses), g.preparationClasses = null);
                                g.activeClasses && (c.removeClass(g.activeClasses), g.activeClasses = null);
                                F(a, m);
                                ga(a, m);
                                m.domOperation();
                                p.complete(!b);
                            }
                            var m = Ja(h), x, oa;
                            if (a = Oa(a))
                                x = D(a), oa = a.parent();
                            var m = pa(m), p = new u(), f = R();
                            ba(m.addClass) && (m.addClass = m.addClass.join(' '));
                            m.addClass && !P(m.addClass) && (m.addClass = null);
                            ba(m.removeClass) && (m.removeClass = m.removeClass.join(' '));
                            m.removeClass && !P(m.removeClass) && (m.removeClass = null);
                            m.from && !va(m.from) && (m.from = null);
                            m.to && !va(m.to) && (m.to = null);
                            if (!x)
                                return A(), p;
                            h = [
                                x.className,
                                m.addClass,
                                m.removeClass
                            ].join(' ');
                            if (!Xa(h))
                                return A(), p;
                            var s = 0 <= [
                                    'enter',
                                    'move',
                                    'leave'
                                ].indexOf(k), t = v[0].hidden, w = !g || t || H.get(x);
                            h = !w && y.get(x) || {};
                            var I = !!h.state;
                            w || I && 1 == h.state || (w = !K(a, oa, k));
                            if (w)
                                return t && l(p, k, 'start'), A(), t && l(p, k, 'close'), p;
                            s && L(a);
                            t = {
                                structural: s,
                                element: a,
                                event: k,
                                addClass: m.addClass,
                                removeClass: m.removeClass,
                                close: A,
                                options: m,
                                runner: p
                            };
                            if (I) {
                                if (d('skip', a, t, h)) {
                                    if (2 === h.state)
                                        return A(), p;
                                    V(a, h, t);
                                    return h.runner;
                                }
                                if (d('cancel', a, t, h))
                                    if (2 === h.state)
                                        h.runner.end();
                                    else if (h.structural)
                                        h.close();
                                    else
                                        return V(a, h, t), h.runner;
                                else if (d('join', a, t, h))
                                    if (2 === h.state)
                                        V(a, t, {});
                                    else
                                        return Sa(a, s ? k : null, m), k = t.event = h.event, m = V(a, h, t), h.runner;
                            } else
                                V(a, t, {});
                            (I = t.structural) || (I = 'animate' === t.event && 0 < Object.keys(t.options.to || {}).length || e(t));
                            if (!I)
                                return A(), O(a), p;
                            var ia = (h.counter || 0) + 1;
                            t.counter = ia;
                            M(a, 1, t);
                            c.$$postDigest(function () {
                                var b = y.get(x), c = !b, b = b || {}, g = 0 < (a.parent() || []).length && ('animate' === b.event || b.structural || e(b));
                                if (c || b.counter !== ia || !g) {
                                    c && (F(a, m), ga(a, m));
                                    if (c || s && b.event !== k)
                                        m.domOperation(), p.end();
                                    g || O(a);
                                } else
                                    k = !b.structural && e(b, !0) ? 'setClass' : b.event, M(a, 2), b = Wa(a, k, b.options), p.setHost(b), l(p, k, 'start', {}), b.done(function (b) {
                                        A(!b);
                                        (b = y.get(x)) && b.counter === ia && O(D(a));
                                        l(p, k, 'close', {});
                                    });
                            });
                            return p;
                        }
                        function L(a) {
                            a = D(a).querySelectorAll('[data-ng-animate]');
                            r(a, function (a) {
                                var b = parseInt(a.getAttribute('data-ng-animate')), c = y.get(a);
                                if (c)
                                    switch (b) {
                                    case 2:
                                        c.runner.end();
                                    case 1:
                                        y.remove(a);
                                    }
                            });
                        }
                        function O(a) {
                            a = D(a);
                            a.removeAttribute('data-ng-animate');
                            y.remove(a);
                        }
                        function l(a, b) {
                            return D(a) === D(b);
                        }
                        function K(a, b, c) {
                            c = G(v[0].body);
                            var g = l(a, c) || 'HTML' === a[0].nodeName, d = l(a, f), h = !1, k, e = H.get(D(a));
                            (a = G.data(a[0], '$ngAnimatePin')) && (b = a);
                            for (b = D(b); b;) {
                                d || (d = l(b, f));
                                if (1 !== b.nodeType)
                                    break;
                                a = y.get(b) || {};
                                if (!h) {
                                    var p = H.get(b);
                                    if (!0 === p && !1 !== e) {
                                        e = !0;
                                        break;
                                    } else
                                        !1 === p && (e = !1);
                                    h = a.structural;
                                }
                                if (C(k) || !0 === k)
                                    a = G.data(b, '$$ngAnimateChildren'), da(a) && (k = a);
                                if (h && !1 === k)
                                    break;
                                g || (g = l(b, c));
                                if (g && d)
                                    break;
                                if (!d && (a = G.data(b, '$ngAnimatePin'))) {
                                    b = D(a);
                                    continue;
                                }
                                b = b.parentNode;
                            }
                            return (!h || k) && !0 !== e && d && g;
                        }
                        function M(a, b, c) {
                            c = c || {};
                            c.state = b;
                            a = D(a);
                            a.setAttribute('data-ng-animate', b);
                            c = (b = y.get(a)) ? Ea(b, c) : c;
                            y.put(a, c);
                        }
                        var y = new I(), H = new I(), g = null, oa = c.$watch(function () {
                                return 0 === sa.totalPendingRequests;
                            }, function (a) {
                                a && (oa(), c.$$postDigest(function () {
                                    c.$$postDigest(function () {
                                        null === g && (g = !0);
                                    });
                                }));
                            }), h = {}, A = a.classNameFilter(), Xa = A ? function (a) {
                                return A.test(a);
                            } : function () {
                                return !0;
                            }, F = U(w), ia = S.Node.prototype.contains || function (a) {
                                return this === a || !!(this.compareDocumentPosition(a) & 16);
                            }, N = {
                                on: function (a, b, c) {
                                    var g = ca(b);
                                    h[a] = h[a] || [];
                                    h[a].push({
                                        node: g,
                                        callback: c
                                    });
                                    G(b).on('$destroy', function () {
                                        y.get(g) || N.off(a, b, c);
                                    });
                                },
                                off: function (a, b, c) {
                                    if (1 !== arguments.length || q.isString(arguments[0])) {
                                        var g = h[a];
                                        g && (h[a] = 1 === arguments.length ? null : k(g, b, c));
                                    } else
                                        for (g in b = arguments[0], h)
                                            h[g] = k(h[g], b);
                                },
                                pin: function (a, b) {
                                    Aa(wa(a), 'element', 'not an element');
                                    Aa(wa(b), 'parentElement', 'not an element');
                                    a.data('$ngAnimatePin', b);
                                },
                                push: function (a, b, c, g) {
                                    c = c || {};
                                    c.domOperation = g;
                                    return p(a, b, c);
                                },
                                enabled: function (a, b) {
                                    var c = arguments.length;
                                    if (0 === c)
                                        b = !!g;
                                    else if (wa(a)) {
                                        var d = D(a), h = H.get(d);
                                        1 === c ? b = !h : H.put(d, !b);
                                    } else
                                        b = g = !!a;
                                    return b;
                                }
                            };
                        return N;
                    }
                ];
            }
        ]).provider('$$animation', [
            '$animateProvider',
            function (a) {
                function b(a) {
                    return a.data('$$animationRunner');
                }
                var c = this.drivers = [];
                this.$get = [
                    '$$jqLite',
                    '$rootScope',
                    '$injector',
                    '$$AnimateRunner',
                    '$$HashMap',
                    '$$rAFScheduler',
                    function (a, e, f, z, B, s) {
                        function v(a) {
                            function b(a) {
                                if (a.processed)
                                    return a;
                                a.processed = !0;
                                var d = a.domNode, L = d.parentNode;
                                e.put(d, a);
                                for (var f; L;) {
                                    if (f = e.get(L)) {
                                        f.processed || (f = b(f));
                                        break;
                                    }
                                    L = L.parentNode;
                                }
                                (f || c).children.push(a);
                                return a;
                            }
                            var c = { children: [] }, d, e = new B();
                            for (d = 0; d < a.length; d++) {
                                var f = a[d];
                                e.put(f.domNode, a[d] = {
                                    domNode: f.domNode,
                                    fn: f.fn,
                                    children: []
                                });
                            }
                            for (d = 0; d < a.length; d++)
                                b(a[d]);
                            return function (a) {
                                var b = [], c = [], d;
                                for (d = 0; d < a.children.length; d++)
                                    c.push(a.children[d]);
                                a = c.length;
                                var e = 0, f = [];
                                for (d = 0; d < c.length; d++) {
                                    var x = c[d];
                                    0 >= a && (a = e, e = 0, b.push(f), f = []);
                                    f.push(x.fn);
                                    x.children.forEach(function (a) {
                                        e++;
                                        c.push(a);
                                    });
                                    a--;
                                }
                                f.length && b.push(f);
                                return b;
                            }(c);
                        }
                        var I = [], q = U(a);
                        return function (u, B, w) {
                            function x(a) {
                                a = a.hasAttribute('ng-animate-ref') ? [a] : a.querySelectorAll('[ng-animate-ref]');
                                var b = [];
                                r(a, function (a) {
                                    var c = a.getAttribute('ng-animate-ref');
                                    c && c.length && b.push(a);
                                });
                                return b;
                            }
                            function R(a) {
                                var b = [], c = {};
                                r(a, function (a, g) {
                                    var d = D(a.element), e = 0 <= [
                                            'enter',
                                            'move'
                                        ].indexOf(a.event), d = a.structural ? x(d) : [];
                                    if (d.length) {
                                        var k = e ? 'to' : 'from';
                                        r(d, function (a) {
                                            var b = a.getAttribute('ng-animate-ref');
                                            c[b] = c[b] || {};
                                            c[b][k] = {
                                                animationID: g,
                                                element: G(a)
                                            };
                                        });
                                    } else
                                        b.push(a);
                                });
                                var d = {}, e = {};
                                r(c, function (c, h) {
                                    var k = c.from, f = c.to;
                                    if (k && f) {
                                        var p = a[k.animationID], y = a[f.animationID], l = k.animationID.toString();
                                        if (!e[l]) {
                                            var x = e[l] = {
                                                structural: !0,
                                                beforeStart: function () {
                                                    p.beforeStart();
                                                    y.beforeStart();
                                                },
                                                close: function () {
                                                    p.close();
                                                    y.close();
                                                },
                                                classes: J(p.classes, y.classes),
                                                from: p,
                                                to: y,
                                                anchors: []
                                            };
                                            x.classes.length ? b.push(x) : (b.push(p), b.push(y));
                                        }
                                        e[l].anchors.push({
                                            out: k.element,
                                            'in': f.element
                                        });
                                    } else
                                        k = k ? k.animationID : f.animationID, f = k.toString(), d[f] || (d[f] = !0, b.push(a[k]));
                                });
                                return b;
                            }
                            function J(a, b) {
                                a = a.split(' ');
                                b = b.split(' ');
                                for (var c = [], d = 0; d < a.length; d++) {
                                    var k = a[d];
                                    if ('ng-' !== k.substring(0, 3))
                                        for (var e = 0; e < b.length; e++)
                                            if (k === b[e]) {
                                                c.push(k);
                                                break;
                                            }
                                }
                                return c.join(' ');
                            }
                            function k(a) {
                                for (var b = c.length - 1; 0 <= b; b--) {
                                    var d = c[b];
                                    if (f.has(d) && (d = f.get(d)(a)))
                                        return d;
                                }
                            }
                            function p(a, c) {
                                a.from && a.to ? (b(a.from.element).setHost(c), b(a.to.element).setHost(c)) : b(a.element).setHost(c);
                            }
                            function L() {
                                var a = b(u);
                                !a || 'leave' === B && w.$$domOperationFired || a.end();
                            }
                            function O(b) {
                                u.off('$destroy', L);
                                u.removeData('$$animationRunner');
                                q(u, w);
                                ga(u, w);
                                w.domOperation();
                                y && a.removeClass(u, y);
                                u.removeClass('ng-animate');
                                K.complete(!b);
                            }
                            w = pa(w);
                            var l = 0 <= [
                                    'enter',
                                    'move',
                                    'leave'
                                ].indexOf(B), K = new z({
                                    end: function () {
                                        O();
                                    },
                                    cancel: function () {
                                        O(!0);
                                    }
                                });
                            if (!c.length)
                                return O(), K;
                            u.data('$$animationRunner', K);
                            var M = Ba(u.attr('class'), Ba(w.addClass, w.removeClass)), y = w.tempClasses;
                            y && (M += ' ' + y, w.tempClasses = null);
                            var H;
                            l && (H = 'ng-' + B + '-prepare', a.addClass(u, H));
                            I.push({
                                element: u,
                                classes: M,
                                event: B,
                                structural: l,
                                options: w,
                                beforeStart: function () {
                                    u.addClass('ng-animate');
                                    y && a.addClass(u, y);
                                    H && (a.removeClass(u, H), H = null);
                                },
                                close: O
                            });
                            u.on('$destroy', L);
                            if (1 < I.length)
                                return K;
                            e.$$postDigest(function () {
                                var a = [];
                                r(I, function (c) {
                                    b(c.element) ? a.push(c) : c.close();
                                });
                                I.length = 0;
                                var c = R(a), d = [];
                                r(c, function (a) {
                                    d.push({
                                        domNode: D(a.from ? a.from.element : a.element),
                                        fn: function () {
                                            a.beforeStart();
                                            var c, d = a.close;
                                            if (b(a.anchors ? a.from.element || a.to.element : a.element)) {
                                                var g = k(a);
                                                g && (c = g.start);
                                            }
                                            c ? (c = c(), c.done(function (a) {
                                                d(!a);
                                            }), p(a, c)) : d();
                                        }
                                    });
                                });
                                s(v(d));
                            });
                            return K;
                        };
                    }
                ];
            }
        ]).provider('$animateCss', [
            '$animateProvider',
            function (a) {
                var b = Ha(), c = Ha();
                this.$get = [
                    '$window',
                    '$$jqLite',
                    '$$AnimateRunner',
                    '$timeout',
                    '$$forceReflow',
                    '$sniffer',
                    '$$rAFScheduler',
                    '$$animateQueue',
                    function (a, e, f, z, B, s, v, I) {
                        function q(a, b) {
                            var c = a.parentNode;
                            return (c.$$ngAnimateParentKey || (c.$$ngAnimateParentKey = ++R)) + '-' + a.getAttribute('class') + '-' + b;
                        }
                        function u(k, f, x, s) {
                            var l;
                            0 < b.count(x) && (l = c.get(x), l || (f = X(f, '-stagger'), e.addClass(k, f), l = Fa(a, k, s), l.animationDuration = Math.max(l.animationDuration, 0), l.transitionDuration = Math.max(l.transitionDuration, 0), e.removeClass(k, f), c.put(x, l)));
                            return l || {};
                        }
                        function sa(a) {
                            J.push(a);
                            v.waitUntilQuiet(function () {
                                b.flush();
                                c.flush();
                                for (var a = B(), d = 0; d < J.length; d++)
                                    J[d](a);
                                J.length = 0;
                            });
                        }
                        function w(c, e, f) {
                            e = b.get(f);
                            e || (e = Fa(a, c, Ua), 'infinite' === e.animationIterationCount && (e.animationIterationCount = 1));
                            b.put(f, e);
                            c = e;
                            f = c.animationDelay;
                            e = c.transitionDelay;
                            c.maxDelay = f && e ? Math.max(f, e) : f || e;
                            c.maxDuration = Math.max(c.animationDuration * c.animationIterationCount, c.transitionDuration);
                            return c;
                        }
                        var x = U(e), R = 0, J = [];
                        return function (a, c) {
                            function d() {
                                l();
                            }
                            function v() {
                                l(!0);
                            }
                            function l(b) {
                                if (!(R || G && N)) {
                                    R = !0;
                                    N = !1;
                                    g.$$skipPreparationClasses || e.removeClass(a, fa);
                                    e.removeClass(a, da);
                                    ta(h, !1);
                                    qa(h, !1);
                                    r(A, function (a) {
                                        h.style[a[0]] = '';
                                    });
                                    x(a, g);
                                    ga(a, g);
                                    Object.keys(J).length && r(J, function (a, b) {
                                        a ? h.style.setProperty(b, a) : h.style.removeProperty(b);
                                    });
                                    if (g.onDone)
                                        g.onDone();
                                    ea && ea.length && a.off(ea.join(' '), y);
                                    var c = a.data('$$animateCss');
                                    c && (z.cancel(c[0].timer), a.removeData('$$animateCss'));
                                    C && C.complete(!b);
                                }
                            }
                            function K(a) {
                                n.blockTransition && qa(h, a);
                                n.blockKeyframeAnimation && ta(h, !!a);
                            }
                            function M() {
                                C = new f({
                                    end: d,
                                    cancel: v
                                });
                                sa(Q);
                                l();
                                return {
                                    $$willAnimate: !1,
                                    start: function () {
                                        return C;
                                    },
                                    end: d
                                };
                            }
                            function y(a) {
                                a.stopPropagation();
                                var b = a.originalEvent || a;
                                a = b.$manualTimeStamp || Date.now();
                                b = parseFloat(b.elapsedTime.toFixed(3));
                                Math.max(a - V, 0) >= S && b >= m && (G = !0, l());
                            }
                            function H() {
                                function b() {
                                    if (!R) {
                                        K(!1);
                                        r(A, function (a) {
                                            h.style[a[0]] = a[1];
                                        });
                                        x(a, g);
                                        e.addClass(a, da);
                                        if (n.recalculateTimingStyles) {
                                            na = h.className + ' ' + fa;
                                            ja = q(h, na);
                                            E = w(h, na, ja);
                                            $ = E.maxDelay;
                                            ha = Math.max($, 0);
                                            m = E.maxDuration;
                                            if (0 === m) {
                                                l();
                                                return;
                                            }
                                            n.hasTransitions = 0 < E.transitionDuration;
                                            n.hasAnimations = 0 < E.animationDuration;
                                        }
                                        n.applyAnimationDelay && ($ = 'boolean' !== typeof g.delay && ua(g.delay) ? parseFloat(g.delay) : $, ha = Math.max($, 0), E.animationDelay = $, aa = [
                                            ra,
                                            $ + 's'
                                        ], A.push(aa), h.style[aa[0]] = aa[1]);
                                        S = 1000 * ha;
                                        U = 1000 * m;
                                        if (g.easing) {
                                            var d, f = g.easing;
                                            n.hasTransitions && (d = T + 'TimingFunction', A.push([
                                                d,
                                                f
                                            ]), h.style[d] = f);
                                            n.hasAnimations && (d = Z + 'TimingFunction', A.push([
                                                d,
                                                f
                                            ]), h.style[d] = f);
                                        }
                                        E.transitionDuration && ea.push(xa);
                                        E.animationDuration && ea.push(ya);
                                        V = Date.now();
                                        var H = S + 1.5 * U;
                                        d = V + H;
                                        var f = a.data('$$animateCss') || [], s = !0;
                                        if (f.length) {
                                            var p = f[0];
                                            (s = d > p.expectedEndTime) ? z.cancel(p.timer) : f.push(l);
                                        }
                                        s && (H = z(c, H, !1), f[0] = {
                                            timer: H,
                                            expectedEndTime: d
                                        }, f.push(l), a.data('$$animateCss', f));
                                        if (ea.length)
                                            a.on(ea.join(' '), y);
                                        g.to && (g.cleanupStyles && Ia(J, h, Object.keys(g.to)), Da(a, g));
                                    }
                                }
                                function c() {
                                    var b = a.data('$$animateCss');
                                    if (b) {
                                        for (var d = 1; d < b.length; d++)
                                            b[d]();
                                        a.removeData('$$animateCss');
                                    }
                                }
                                if (!R)
                                    if (h.parentNode) {
                                        var d = function (a) {
                                                if (G)
                                                    N && a && (N = !1, l());
                                                else if (N = !a, E.animationDuration)
                                                    if (a = ta(h, N), N)
                                                        A.push(a);
                                                    else {
                                                        var b = A, c = b.indexOf(a);
                                                        0 <= a && b.splice(c, 1);
                                                    }
                                            }, f = 0 < ca && (E.transitionDuration && 0 === W.transitionDuration || E.animationDuration && 0 === W.animationDuration) && Math.max(W.animationDelay, W.transitionDelay);
                                        f ? z(b, Math.floor(f * ca * 1000), !1) : b();
                                        P.resume = function () {
                                            d(!0);
                                        };
                                        P.pause = function () {
                                            d(!1);
                                        };
                                    } else
                                        l();
                            }
                            var g = c || {};
                            g.$$prepared || (g = pa(Ja(g)));
                            var J = {}, h = D(a);
                            if (!h || !h.parentNode || !I.enabled())
                                return M();
                            var A = [], B = a.attr('class'), F = Na(g), R, N, G, C, P, ha, S, m, U, V, ea = [];
                            if (0 === g.duration || !s.animations && !s.transitions)
                                return M();
                            var ka = g.event && ba(g.event) ? g.event.join(' ') : g.event, Y = '', t = '';
                            ka && g.structural ? Y = X(ka, 'ng-', !0) : ka && (Y = ka);
                            g.addClass && (t += X(g.addClass, '-add'));
                            g.removeClass && (t.length && (t += ' '), t += X(g.removeClass, '-remove'));
                            g.applyClassesEarly && t.length && x(a, g);
                            var fa = [
                                    Y,
                                    t
                                ].join(' ').trim(), na = B + ' ' + fa, da = X(fa, '-active'), B = F.to && 0 < Object.keys(F.to).length;
                            if (!(0 < (g.keyframeStyle || '').length || B || fa))
                                return M();
                            var ja, W;
                            0 < g.stagger ? (F = parseFloat(g.stagger), W = {
                                transitionDelay: F,
                                animationDelay: F,
                                transitionDuration: 0,
                                animationDuration: 0
                            }) : (ja = q(h, na), W = u(h, fa, ja, Va));
                            g.$$skipPreparationClasses || e.addClass(a, fa);
                            g.transitionStyle && (F = [
                                T,
                                g.transitionStyle
                            ], la(h, F), A.push(F));
                            0 <= g.duration && (F = 0 < h.style[T].length, F = Ga(g.duration, F), la(h, F), A.push(F));
                            g.keyframeStyle && (F = [
                                Z,
                                g.keyframeStyle
                            ], la(h, F), A.push(F));
                            var ca = W ? 0 <= g.staggerIndex ? g.staggerIndex : b.count(ja) : 0;
                            (ka = 0 === ca) && !g.skipBlocking && qa(h, 9999);
                            var E = w(h, na, ja), $ = E.maxDelay;
                            ha = Math.max($, 0);
                            m = E.maxDuration;
                            var n = {};
                            n.hasTransitions = 0 < E.transitionDuration;
                            n.hasAnimations = 0 < E.animationDuration;
                            n.hasTransitionAll = n.hasTransitions && 'all' == E.transitionProperty;
                            n.applyTransitionDuration = B && (n.hasTransitions && !n.hasTransitionAll || n.hasAnimations && !n.hasTransitions);
                            n.applyAnimationDuration = g.duration && n.hasAnimations;
                            n.applyTransitionDelay = ua(g.delay) && (n.applyTransitionDuration || n.hasTransitions);
                            n.applyAnimationDelay = ua(g.delay) && n.hasAnimations;
                            n.recalculateTimingStyles = 0 < t.length;
                            if (n.applyTransitionDuration || n.applyAnimationDuration)
                                m = g.duration ? parseFloat(g.duration) : m, n.applyTransitionDuration && (n.hasTransitions = !0, E.transitionDuration = m, F = 0 < h.style[T + 'Property'].length, A.push(Ga(m, F))), n.applyAnimationDuration && (n.hasAnimations = !0, E.animationDuration = m, A.push([
                                    za,
                                    m + 's'
                                ]));
                            if (0 === m && !n.recalculateTimingStyles)
                                return M();
                            if (null != g.delay) {
                                var aa;
                                'boolean' !== typeof g.delay && (aa = parseFloat(g.delay), ha = Math.max(aa, 0));
                                n.applyTransitionDelay && A.push([
                                    ma,
                                    aa + 's'
                                ]);
                                n.applyAnimationDelay && A.push([
                                    ra,
                                    aa + 's'
                                ]);
                            }
                            null == g.duration && 0 < E.transitionDuration && (n.recalculateTimingStyles = n.recalculateTimingStyles || ka);
                            S = 1000 * ha;
                            U = 1000 * m;
                            g.skipBlocking || (n.blockTransition = 0 < E.transitionDuration, n.blockKeyframeAnimation = 0 < E.animationDuration && 0 < W.animationDelay && 0 === W.animationDuration);
                            g.from && (g.cleanupStyles && Ia(J, h, Object.keys(g.from)), Ca(a, g));
                            n.blockTransition || n.blockKeyframeAnimation ? K(m) : g.skipBlocking || qa(h, !1);
                            return {
                                $$willAnimate: !0,
                                end: d,
                                start: function () {
                                    if (!R)
                                        return P = {
                                            end: d,
                                            cancel: v,
                                            resume: null,
                                            pause: null
                                        }, C = new f(P), sa(H), C;
                                }
                            };
                        };
                    }
                ];
            }
        ]).provider('$$animateCssDriver', [
            '$$animationProvider',
            function (a) {
                a.drivers.push('$$animateCssDriver');
                this.$get = [
                    '$animateCss',
                    '$rootScope',
                    '$$AnimateRunner',
                    '$rootElement',
                    '$sniffer',
                    '$$jqLite',
                    '$document',
                    function (a, c, d, e, f, z, B) {
                        function s(a) {
                            return a.replace(/\bng-\S+\b/g, '');
                        }
                        function v(a, b) {
                            P(a) && (a = a.split(' '));
                            P(b) && (b = b.split(' '));
                            return a.filter(function (a) {
                                return -1 === b.indexOf(a);
                            }).join(' ');
                        }
                        function I(c, e, f) {
                            function k(a) {
                                var b = {}, c = D(a).getBoundingClientRect();
                                r([
                                    'width',
                                    'height',
                                    'top',
                                    'left'
                                ], function (a) {
                                    var d = c[a];
                                    switch (a) {
                                    case 'top':
                                        d += C.scrollTop;
                                        break;
                                    case 'left':
                                        d += C.scrollLeft;
                                    }
                                    b[a] = Math.floor(d) + 'px';
                                });
                                return b;
                            }
                            function p() {
                                var c = s(f.attr('class') || ''), d = v(c, l), c = v(l, c), d = a(z, {
                                        to: k(f),
                                        addClass: 'ng-anchor-in ' + d,
                                        removeClass: 'ng-anchor-out ' + c,
                                        delay: !0
                                    });
                                return d.$$willAnimate ? d : null;
                            }
                            function B() {
                                z.remove();
                                e.removeClass('ng-animate-shim');
                                f.removeClass('ng-animate-shim');
                            }
                            var z = G(D(e).cloneNode(!0)), l = s(z.attr('class') || '');
                            e.addClass('ng-animate-shim');
                            f.addClass('ng-animate-shim');
                            z.addClass('ng-anchor');
                            w.append(z);
                            var K;
                            c = function () {
                                var c = a(z, {
                                    addClass: 'ng-anchor-out',
                                    delay: !0,
                                    from: k(e)
                                });
                                return c.$$willAnimate ? c : null;
                            }();
                            if (!c && (K = p(), !K))
                                return B();
                            var M = c || K;
                            return {
                                start: function () {
                                    function a() {
                                        c && c.end();
                                    }
                                    var b, c = M.start();
                                    c.done(function () {
                                        c = null;
                                        if (!K && (K = p()))
                                            return c = K.start(), c.done(function () {
                                                c = null;
                                                B();
                                                b.complete();
                                            }), c;
                                        B();
                                        b.complete();
                                    });
                                    return b = new d({
                                        end: a,
                                        cancel: a
                                    });
                                }
                            };
                        }
                        function q(a, b, c, e) {
                            var f = u(a, Q), s = u(b, Q), z = [];
                            r(e, function (a) {
                                (a = I(c, a.out, a['in'])) && z.push(a);
                            });
                            if (f || s || 0 !== z.length)
                                return {
                                    start: function () {
                                        function a() {
                                            r(b, function (a) {
                                                a.end();
                                            });
                                        }
                                        var b = [];
                                        f && b.push(f.start());
                                        s && b.push(s.start());
                                        r(z, function (a) {
                                            b.push(a.start());
                                        });
                                        var c = new d({
                                            end: a,
                                            cancel: a
                                        });
                                        d.all(b, function (a) {
                                            c.complete(a);
                                        });
                                        return c;
                                    }
                                };
                        }
                        function u(c) {
                            var d = c.element, e = c.options || {};
                            c.structural && (e.event = c.event, e.structural = !0, e.applyClassesEarly = !0, 'leave' === c.event && (e.onDone = e.domOperation));
                            e.preparationClasses && (e.event = Y(e.event, e.preparationClasses));
                            c = a(d, e);
                            return c.$$willAnimate ? c : null;
                        }
                        if (!f.animations && !f.transitions)
                            return Q;
                        var C = B[0].body;
                        c = D(e);
                        var w = G(c.parentNode && 11 === c.parentNode.nodeType || C.contains(c) ? c : C);
                        U(z);
                        return function (a) {
                            return a.from && a.to ? q(a.from, a.to, a.classes, a.anchors) : u(a);
                        };
                    }
                ];
            }
        ]).provider('$$animateJs', [
            '$animateProvider',
            function (a) {
                this.$get = [
                    '$injector',
                    '$$AnimateRunner',
                    '$$jqLite',
                    function (b, c, d) {
                        function e(c) {
                            c = ba(c) ? c : c.split(' ');
                            for (var d = [], e = {}, f = 0; f < c.length; f++) {
                                var r = c[f], q = a.$$registeredAnimations[r];
                                q && !e[r] && (d.push(b.get(q)), e[r] = !0);
                            }
                            return d;
                        }
                        var f = U(d);
                        return function (a, b, d, v) {
                            function q() {
                                v.domOperation();
                                f(a, v);
                            }
                            function D(a, b, d, e, g) {
                                switch (d) {
                                case 'animate':
                                    b = [
                                        b,
                                        e.from,
                                        e.to,
                                        g
                                    ];
                                    break;
                                case 'setClass':
                                    b = [
                                        b,
                                        x,
                                        G,
                                        g
                                    ];
                                    break;
                                case 'addClass':
                                    b = [
                                        b,
                                        x,
                                        g
                                    ];
                                    break;
                                case 'removeClass':
                                    b = [
                                        b,
                                        G,
                                        g
                                    ];
                                    break;
                                default:
                                    b = [
                                        b,
                                        g
                                    ];
                                }
                                b.push(e);
                                if (a = a.apply(a, b))
                                    if (Ka(a.start) && (a = a.start()), a instanceof c)
                                        a.done(g);
                                    else if (Ka(a))
                                        return a;
                                return Q;
                            }
                            function u(a, b, d, e, g) {
                                var f = [];
                                r(e, function (e) {
                                    var k = e[g];
                                    k && f.push(function () {
                                        var e, g, f = !1, h = function (a) {
                                                f || (f = !0, (g || Q)(a), e.complete(!a));
                                            };
                                        e = new c({
                                            end: function () {
                                                h();
                                            },
                                            cancel: function () {
                                                h(!0);
                                            }
                                        });
                                        g = D(k, a, b, d, function (a) {
                                            h(!1 === a);
                                        });
                                        return e;
                                    });
                                });
                                return f;
                            }
                            function C(a, b, d, e, g) {
                                var f = u(a, b, d, e, g);
                                if (0 === f.length) {
                                    var h, k;
                                    'beforeSetClass' === g ? (h = u(a, 'removeClass', d, e, 'beforeRemoveClass'), k = u(a, 'addClass', d, e, 'beforeAddClass')) : 'setClass' === g && (h = u(a, 'removeClass', d, e, 'removeClass'), k = u(a, 'addClass', d, e, 'addClass'));
                                    h && (f = f.concat(h));
                                    k && (f = f.concat(k));
                                }
                                if (0 !== f.length)
                                    return function (a) {
                                        var b = [];
                                        f.length && r(f, function (a) {
                                            b.push(a());
                                        });
                                        b.length ? c.all(b, a) : a();
                                        return function (a) {
                                            r(b, function (b) {
                                                a ? b.cancel() : b.end();
                                            });
                                        };
                                    };
                            }
                            var w = !1;
                            3 === arguments.length && va(d) && (v = d, d = null);
                            v = pa(v);
                            d || (d = a.attr('class') || '', v.addClass && (d += ' ' + v.addClass), v.removeClass && (d += ' ' + v.removeClass));
                            var x = v.addClass, G = v.removeClass, J = e(d), k, p;
                            if (J.length) {
                                var L, O;
                                'leave' == b ? (O = 'leave', L = 'afterLeave') : (O = 'before' + b.charAt(0).toUpperCase() + b.substr(1), L = b);
                                'enter' !== b && 'move' !== b && (k = C(a, b, v, J, O));
                                p = C(a, b, v, J, L);
                            }
                            if (k || p) {
                                var l;
                                return {
                                    $$willAnimate: !0,
                                    end: function () {
                                        l ? l.end() : (w = !0, q(), ga(a, v), l = new c(), l.complete(!0));
                                        return l;
                                    },
                                    start: function () {
                                        function b(c) {
                                            w = !0;
                                            q();
                                            ga(a, v);
                                            l.complete(c);
                                        }
                                        if (l)
                                            return l;
                                        l = new c();
                                        var d, e = [];
                                        k && e.push(function (a) {
                                            d = k(a);
                                        });
                                        e.length ? e.push(function (a) {
                                            q();
                                            a(!0);
                                        }) : q();
                                        p && e.push(function (a) {
                                            d = p(a);
                                        });
                                        l.setHost({
                                            end: function () {
                                                w || ((d || Q)(void 0), b(void 0));
                                            },
                                            cancel: function () {
                                                w || ((d || Q)(!0), b(!0));
                                            }
                                        });
                                        c.chain(e, b);
                                        return l;
                                    }
                                };
                            }
                        };
                    }
                ];
            }
        ]).provider('$$animateJsDriver', [
            '$$animationProvider',
            function (a) {
                a.drivers.push('$$animateJsDriver');
                this.$get = [
                    '$$animateJs',
                    '$$AnimateRunner',
                    function (a, c) {
                        function d(c) {
                            return a(c.element, c.event, c.classes, c.options);
                        }
                        return function (a) {
                            if (a.from && a.to) {
                                var b = d(a.from), q = d(a.to);
                                if (b || q)
                                    return {
                                        start: function () {
                                            function a() {
                                                return function () {
                                                    r(d, function (a) {
                                                        a.end();
                                                    });
                                                };
                                            }
                                            var d = [];
                                            b && d.push(b.start());
                                            q && d.push(q.start());
                                            c.all(d, function (a) {
                                                e.complete(a);
                                            });
                                            var e = new c({
                                                end: a(),
                                                cancel: a()
                                            });
                                            return e;
                                        }
                                    };
                            } else
                                return d(a);
                        };
                    }
                ];
            }
        ]);
    }(window, window.angular));
    return;
});
define('uiRoute', [
    'angular',
    'ngAnimate'
], function () {
    if (typeof module !== 'undefined' && typeof exports !== 'undefined' && module.exports === exports) {
        module.exports = 'ui.router';
    }
    (function (window, angular, undefined) {
        'use strict';
        var isDefined = angular.isDefined, isFunction = angular.isFunction, isString = angular.isString, isObject = angular.isObject, isArray = angular.isArray, forEach = angular.forEach, extend = angular.extend, copy = angular.copy, toJson = angular.toJson;
        function inherit(parent, extra) {
            return extend(new (extend(function () {
            }, { prototype: parent }))(), extra);
        }
        function merge(dst) {
            forEach(arguments, function (obj) {
                if (obj !== dst) {
                    forEach(obj, function (value, key) {
                        if (!dst.hasOwnProperty(key))
                            dst[key] = value;
                    });
                }
            });
            return dst;
        }
        function ancestors(first, second) {
            var path = [];
            for (var n in first.path) {
                if (first.path[n] !== second.path[n])
                    break;
                path.push(first.path[n]);
            }
            return path;
        }
        function objectKeys(object) {
            if (Object.keys) {
                return Object.keys(object);
            }
            var result = [];
            forEach(object, function (val, key) {
                result.push(key);
            });
            return result;
        }
        function indexOf(array, value) {
            if (Array.prototype.indexOf) {
                return array.indexOf(value, Number(arguments[2]) || 0);
            }
            var len = array.length >>> 0, from = Number(arguments[2]) || 0;
            from = from < 0 ? Math.ceil(from) : Math.floor(from);
            if (from < 0)
                from += len;
            for (; from < len; from++) {
                if (from in array && array[from] === value)
                    return from;
            }
            return -1;
        }
        function inheritParams(currentParams, newParams, $current, $to) {
            var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];
            for (var i in parents) {
                if (!parents[i] || !parents[i].params)
                    continue;
                parentParams = objectKeys(parents[i].params);
                if (!parentParams.length)
                    continue;
                for (var j in parentParams) {
                    if (indexOf(inheritList, parentParams[j]) >= 0)
                        continue;
                    inheritList.push(parentParams[j]);
                    inherited[parentParams[j]] = currentParams[parentParams[j]];
                }
            }
            return extend({}, inherited, newParams);
        }
        function equalForKeys(a, b, keys) {
            if (!keys) {
                keys = [];
                for (var n in a)
                    keys.push(n);
            }
            for (var i = 0; i < keys.length; i++) {
                var k = keys[i];
                if (a[k] != b[k])
                    return false;
            }
            return true;
        }
        function filterByKeys(keys, values) {
            var filtered = {};
            forEach(keys, function (name) {
                filtered[name] = values[name];
            });
            return filtered;
        }
        function indexBy(array, propName) {
            var result = {};
            forEach(array, function (item) {
                result[item[propName]] = item;
            });
            return result;
        }
        function pick(obj) {
            var copy = {};
            var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
            forEach(keys, function (key) {
                if (key in obj)
                    copy[key] = obj[key];
            });
            return copy;
        }
        function omit(obj) {
            var copy = {};
            var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
            for (var key in obj) {
                if (indexOf(keys, key) == -1)
                    copy[key] = obj[key];
            }
            return copy;
        }
        function pluck(collection, key) {
            var result = isArray(collection) ? [] : {};
            forEach(collection, function (val, i) {
                result[i] = isFunction(key) ? key(val) : val[key];
            });
            return result;
        }
        function filter(collection, callback) {
            var array = isArray(collection);
            var result = array ? [] : {};
            forEach(collection, function (val, i) {
                if (callback(val, i)) {
                    result[array ? result.length : i] = val;
                }
            });
            return result;
        }
        function map(collection, callback) {
            var result = isArray(collection) ? [] : {};
            forEach(collection, function (val, i) {
                result[i] = callback(val, i);
            });
            return result;
        }
        angular.module('ui.router.util', ['ng']);
        angular.module('ui.router.router', ['ui.router.util']);
        angular.module('ui.router.state', [
            'ui.router.router',
            'ui.router.util'
        ]);
        angular.module('ui.router', ['ui.router.state']);
        angular.module('ui.router.compat', ['ui.router']);
        $Resolve.$inject = [
            '$q',
            '$injector'
        ];
        function $Resolve($q, $injector) {
            var VISIT_IN_PROGRESS = 1, VISIT_DONE = 2, NOTHING = {}, NO_DEPENDENCIES = [], NO_LOCALS = NOTHING, NO_PARENT = extend($q.when(NOTHING), {
                    $$promises: NOTHING,
                    $$values: NOTHING
                });
            this.study = function (invocables) {
                if (!isObject(invocables))
                    throw new Error('\'invocables\' must be an object');
                var invocableKeys = objectKeys(invocables || {});
                var plan = [], cycle = [], visited = {};
                function visit(value, key) {
                    if (visited[key] === VISIT_DONE)
                        return;
                    cycle.push(key);
                    if (visited[key] === VISIT_IN_PROGRESS) {
                        cycle.splice(0, indexOf(cycle, key));
                        throw new Error('Cyclic dependency: ' + cycle.join(' -> '));
                    }
                    visited[key] = VISIT_IN_PROGRESS;
                    if (isString(value)) {
                        plan.push(key, [function () {
                                return $injector.get(value);
                            }], NO_DEPENDENCIES);
                    } else {
                        var params = $injector.annotate(value);
                        forEach(params, function (param) {
                            if (param !== key && invocables.hasOwnProperty(param))
                                visit(invocables[param], param);
                        });
                        plan.push(key, value, params);
                    }
                    cycle.pop();
                    visited[key] = VISIT_DONE;
                }
                forEach(invocables, visit);
                invocables = cycle = visited = null;
                function isResolve(value) {
                    return isObject(value) && value.then && value.$$promises;
                }
                return function (locals, parent, self) {
                    if (isResolve(locals) && self === undefined) {
                        self = parent;
                        parent = locals;
                        locals = null;
                    }
                    if (!locals)
                        locals = NO_LOCALS;
                    else if (!isObject(locals)) {
                        throw new Error('\'locals\' must be an object');
                    }
                    if (!parent)
                        parent = NO_PARENT;
                    else if (!isResolve(parent)) {
                        throw new Error('\'parent\' must be a promise returned by $resolve.resolve()');
                    }
                    var resolution = $q.defer(), result = resolution.promise, promises = result.$$promises = {}, values = extend({}, locals), wait = 1 + plan.length / 3, merged = false;
                    function done() {
                        if (!--wait) {
                            if (!merged)
                                merge(values, parent.$$values);
                            result.$$values = values;
                            result.$$promises = result.$$promises || true;
                            delete result.$$inheritedValues;
                            resolution.resolve(values);
                        }
                    }
                    function fail(reason) {
                        result.$$failure = reason;
                        resolution.reject(reason);
                    }
                    if (isDefined(parent.$$failure)) {
                        fail(parent.$$failure);
                        return result;
                    }
                    if (parent.$$inheritedValues) {
                        merge(values, omit(parent.$$inheritedValues, invocableKeys));
                    }
                    extend(promises, parent.$$promises);
                    if (parent.$$values) {
                        merged = merge(values, omit(parent.$$values, invocableKeys));
                        result.$$inheritedValues = omit(parent.$$values, invocableKeys);
                        done();
                    } else {
                        if (parent.$$inheritedValues) {
                            result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);
                        }
                        parent.then(done, fail);
                    }
                    for (var i = 0, ii = plan.length; i < ii; i += 3) {
                        if (locals.hasOwnProperty(plan[i]))
                            done();
                        else
                            invoke(plan[i], plan[i + 1], plan[i + 2]);
                    }
                    function invoke(key, invocable, params) {
                        var invocation = $q.defer(), waitParams = 0;
                        function onfailure(reason) {
                            invocation.reject(reason);
                            fail(reason);
                        }
                        forEach(params, function (dep) {
                            if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {
                                waitParams++;
                                promises[dep].then(function (result) {
                                    values[dep] = result;
                                    if (!--waitParams)
                                        proceed();
                                }, onfailure);
                            }
                        });
                        if (!waitParams)
                            proceed();
                        function proceed() {
                            if (isDefined(result.$$failure))
                                return;
                            try {
                                invocation.resolve($injector.invoke(invocable, self, values));
                                invocation.promise.then(function (result) {
                                    values[key] = result;
                                    done();
                                }, onfailure);
                            } catch (e) {
                                onfailure(e);
                            }
                        }
                        promises[key] = invocation.promise;
                    }
                    return result;
                };
            };
            this.resolve = function (invocables, locals, parent, self) {
                return this.study(invocables)(locals, parent, self);
            };
        }
        angular.module('ui.router.util').service('$resolve', $Resolve);
        $TemplateFactory.$inject = [
            '$http',
            '$templateCache',
            '$injector'
        ];
        function $TemplateFactory($http, $templateCache, $injector) {
            this.fromConfig = function (config, params, locals) {
                return isDefined(config.template) ? this.fromString(config.template, params) : isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) : isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) : null;
            };
            this.fromString = function (template, params) {
                return isFunction(template) ? template(params) : template;
            };
            this.fromUrl = function (url, params) {
                if (isFunction(url))
                    url = url(params);
                if (url == null)
                    return null;
                else
                    return $http.get(url, {
                        cache: $templateCache,
                        headers: { Accept: 'text/html' }
                    }).then(function (response) {
                        return response.data;
                    });
            };
            this.fromProvider = function (provider, params, locals) {
                return $injector.invoke(provider, null, locals || { params: params });
            };
        }
        angular.module('ui.router.util').service('$templateFactory', $TemplateFactory);
        var $$UMFP;
        function UrlMatcher(pattern, config, parentMatcher) {
            config = extend({ params: {} }, isObject(config) ? config : {});
            var placeholder = /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, searchPlaceholder = /([:]?)([\w\[\].-]+)|\{([\w\[\].-]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, compiled = '^', last = 0, m, segments = this.segments = [], parentParams = parentMatcher ? parentMatcher.params : {}, params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(), paramNames = [];
            function addParameter(id, type, config, location) {
                paramNames.push(id);
                if (parentParams[id])
                    return parentParams[id];
                if (!/^\w+([-.]+\w+)*(?:\[\])?$/.test(id))
                    throw new Error('Invalid parameter name \'' + id + '\' in pattern \'' + pattern + '\'');
                if (params[id])
                    throw new Error('Duplicate parameter name \'' + id + '\' in pattern \'' + pattern + '\'');
                params[id] = new $$UMFP.Param(id, type, config, location);
                return params[id];
            }
            function quoteRegExp(string, pattern, squash, optional) {
                var surroundPattern = [
                        '',
                        ''
                    ], result = string.replace(/[\\\[\]\^$*+?.()|{}]/g, '\\$&');
                if (!pattern)
                    return result;
                switch (squash) {
                case false:
                    surroundPattern = [
                        '(',
                        ')' + (optional ? '?' : '')
                    ];
                    break;
                case true:
                    result = result.replace(/\/$/, '');
                    surroundPattern = [
                        '(?:/(',
                        ')|/)?'
                    ];
                    break;
                default:
                    surroundPattern = [
                        '(' + squash + '|',
                        ')?'
                    ];
                    break;
                }
                return result + surroundPattern[0] + pattern + surroundPattern[1];
            }
            this.source = pattern;
            function matchDetails(m, isSearch) {
                var id, regexp, segment, type, cfg, arrayMode;
                id = m[2] || m[3];
                cfg = config.params[id];
                segment = pattern.substring(last, m.index);
                regexp = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);
                if (regexp) {
                    type = $$UMFP.type(regexp) || inherit($$UMFP.type('string'), { pattern: new RegExp(regexp, config.caseInsensitive ? 'i' : undefined) });
                }
                return {
                    id: id,
                    regexp: regexp,
                    segment: segment,
                    type: type,
                    cfg: cfg
                };
            }
            var p, param, segment;
            while (m = placeholder.exec(pattern)) {
                p = matchDetails(m, false);
                if (p.segment.indexOf('?') >= 0)
                    break;
                param = addParameter(p.id, p.type, p.cfg, 'path');
                compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash, param.isOptional);
                segments.push(p.segment);
                last = placeholder.lastIndex;
            }
            segment = pattern.substring(last);
            var i = segment.indexOf('?');
            if (i >= 0) {
                var search = this.sourceSearch = segment.substring(i);
                segment = segment.substring(0, i);
                this.sourcePath = pattern.substring(0, last + i);
                if (search.length > 0) {
                    last = 0;
                    while (m = searchPlaceholder.exec(search)) {
                        p = matchDetails(m, true);
                        param = addParameter(p.id, p.type, p.cfg, 'search');
                        last = placeholder.lastIndex;
                    }
                }
            } else {
                this.sourcePath = pattern;
                this.sourceSearch = '';
            }
            compiled += quoteRegExp(segment) + (config.strict === false ? '/?' : '') + '$';
            segments.push(segment);
            this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);
            this.prefix = segments[0];
            this.$$paramNames = paramNames;
        }
        UrlMatcher.prototype.concat = function (pattern, config) {
            var defaultConfig = {
                caseInsensitive: $$UMFP.caseInsensitive(),
                strict: $$UMFP.strictMode(),
                squash: $$UMFP.defaultSquashPolicy()
            };
            return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);
        };
        UrlMatcher.prototype.toString = function () {
            return this.source;
        };
        UrlMatcher.prototype.exec = function (path, searchParams) {
            var m = this.regexp.exec(path);
            if (!m)
                return null;
            searchParams = searchParams || {};
            var paramNames = this.parameters(), nTotal = paramNames.length, nPath = this.segments.length - 1, values = {}, i, j, cfg, paramName;
            if (nPath !== m.length - 1)
                throw new Error('Unbalanced capture group in route \'' + this.source + '\'');
            function decodePathArray(string) {
                function reverseString(str) {
                    return str.split('').reverse().join('');
                }
                function unquoteDashes(str) {
                    return str.replace(/\\-/g, '-');
                }
                var split = reverseString(string).split(/-(?!\\)/);
                var allReversed = map(split, reverseString);
                return map(allReversed, unquoteDashes).reverse();
            }
            var param, paramVal;
            for (i = 0; i < nPath; i++) {
                paramName = paramNames[i];
                param = this.params[paramName];
                paramVal = m[i + 1];
                for (j = 0; j < param.replace.length; j++) {
                    if (param.replace[j].from === paramVal)
                        paramVal = param.replace[j].to;
                }
                if (paramVal && param.array === true)
                    paramVal = decodePathArray(paramVal);
                if (isDefined(paramVal))
                    paramVal = param.type.decode(paramVal);
                values[paramName] = param.value(paramVal);
            }
            for (; i < nTotal; i++) {
                paramName = paramNames[i];
                values[paramName] = this.params[paramName].value(searchParams[paramName]);
                param = this.params[paramName];
                paramVal = searchParams[paramName];
                for (j = 0; j < param.replace.length; j++) {
                    if (param.replace[j].from === paramVal)
                        paramVal = param.replace[j].to;
                }
                if (isDefined(paramVal))
                    paramVal = param.type.decode(paramVal);
                values[paramName] = param.value(paramVal);
            }
            return values;
        };
        UrlMatcher.prototype.parameters = function (param) {
            if (!isDefined(param))
                return this.$$paramNames;
            return this.params[param] || null;
        };
        UrlMatcher.prototype.validates = function (params) {
            return this.params.$$validates(params);
        };
        UrlMatcher.prototype.format = function (values) {
            values = values || {};
            var segments = this.segments, params = this.parameters(), paramset = this.params;
            if (!this.validates(values))
                return null;
            var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];
            function encodeDashes(str) {
                return encodeURIComponent(str).replace(/-/g, function (c) {
                    return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase();
                });
            }
            for (i = 0; i < nTotal; i++) {
                var isPathParam = i < nPath;
                var name = params[i], param = paramset[name], value = param.value(values[name]);
                var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);
                var squash = isDefaultValue ? param.squash : false;
                var encoded = param.type.encode(value);
                if (isPathParam) {
                    var nextSegment = segments[i + 1];
                    var isFinalPathParam = i + 1 === nPath;
                    if (squash === false) {
                        if (encoded != null) {
                            if (isArray(encoded)) {
                                result += map(encoded, encodeDashes).join('-');
                            } else {
                                result += encodeURIComponent(encoded);
                            }
                        }
                        result += nextSegment;
                    } else if (squash === true) {
                        var capture = result.match(/\/$/) ? /\/?(.*)/ : /(.*)/;
                        result += nextSegment.match(capture)[1];
                    } else if (isString(squash)) {
                        result += squash + nextSegment;
                    }
                    if (isFinalPathParam && param.squash === true && result.slice(-1) === '/')
                        result = result.slice(0, -1);
                } else {
                    if (encoded == null || isDefaultValue && squash !== false)
                        continue;
                    if (!isArray(encoded))
                        encoded = [encoded];
                    if (encoded.length === 0)
                        continue;
                    encoded = map(encoded, encodeURIComponent).join('&' + name + '=');
                    result += (search ? '&' : '?') + (name + '=' + encoded);
                    search = true;
                }
            }
            return result;
        };
        function Type(config) {
            extend(this, config);
        }
        Type.prototype.is = function (val, key) {
            return true;
        };
        Type.prototype.encode = function (val, key) {
            return val;
        };
        Type.prototype.decode = function (val, key) {
            return val;
        };
        Type.prototype.equals = function (a, b) {
            return a == b;
        };
        Type.prototype.$subPattern = function () {
            var sub = this.pattern.toString();
            return sub.substr(1, sub.length - 2);
        };
        Type.prototype.pattern = /.*/;
        Type.prototype.toString = function () {
            return '{Type:' + this.name + '}';
        };
        Type.prototype.$normalize = function (val) {
            return this.is(val) ? val : this.decode(val);
        };
        Type.prototype.$asArray = function (mode, isSearch) {
            if (!mode)
                return this;
            if (mode === 'auto' && !isSearch)
                throw new Error('\'auto\' array mode is for query parameters only');
            function ArrayType(type, mode) {
                function bindTo(type, callbackName) {
                    return function () {
                        return type[callbackName].apply(type, arguments);
                    };
                }
                function arrayWrap(val) {
                    return isArray(val) ? val : isDefined(val) ? [val] : [];
                }
                function arrayUnwrap(val) {
                    switch (val.length) {
                    case 0:
                        return undefined;
                    case 1:
                        return mode === 'auto' ? val[0] : val;
                    default:
                        return val;
                    }
                }
                function falsey(val) {
                    return !val;
                }
                function arrayHandler(callback, allTruthyMode) {
                    return function handleArray(val) {
                        if (isArray(val) && val.length === 0)
                            return val;
                        val = arrayWrap(val);
                        var result = map(val, callback);
                        if (allTruthyMode === true)
                            return filter(result, falsey).length === 0;
                        return arrayUnwrap(result);
                    };
                }
                function arrayEqualsHandler(callback) {
                    return function handleArray(val1, val2) {
                        var left = arrayWrap(val1), right = arrayWrap(val2);
                        if (left.length !== right.length)
                            return false;
                        for (var i = 0; i < left.length; i++) {
                            if (!callback(left[i], right[i]))
                                return false;
                        }
                        return true;
                    };
                }
                this.encode = arrayHandler(bindTo(type, 'encode'));
                this.decode = arrayHandler(bindTo(type, 'decode'));
                this.is = arrayHandler(bindTo(type, 'is'), true);
                this.equals = arrayEqualsHandler(bindTo(type, 'equals'));
                this.pattern = type.pattern;
                this.$normalize = arrayHandler(bindTo(type, '$normalize'));
                this.name = type.name;
                this.$arrayMode = mode;
            }
            return new ArrayType(this, mode);
        };
        function $UrlMatcherFactory() {
            $$UMFP = this;
            var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;
            function valToString(val) {
                return val != null ? val.toString().replace(/~/g, '~~').replace(/\//g, '~2F') : val;
            }
            function valFromString(val) {
                return val != null ? val.toString().replace(/~2F/g, '/').replace(/~~/g, '~') : val;
            }
            var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {
                    'string': {
                        encode: valToString,
                        decode: valFromString,
                        is: function (val) {
                            return val == null || !isDefined(val) || typeof val === 'string';
                        },
                        pattern: /[^\/]*/
                    },
                    'int': {
                        encode: valToString,
                        decode: function (val) {
                            return parseInt(val, 10);
                        },
                        is: function (val) {
                            return isDefined(val) && this.decode(val.toString()) === val;
                        },
                        pattern: /\d+/
                    },
                    'bool': {
                        encode: function (val) {
                            return val ? 1 : 0;
                        },
                        decode: function (val) {
                            return parseInt(val, 10) !== 0;
                        },
                        is: function (val) {
                            return val === true || val === false;
                        },
                        pattern: /0|1/
                    },
                    'date': {
                        encode: function (val) {
                            if (!this.is(val))
                                return undefined;
                            return [
                                val.getFullYear(),
                                ('0' + (val.getMonth() + 1)).slice(-2),
                                ('0' + val.getDate()).slice(-2)
                            ].join('-');
                        },
                        decode: function (val) {
                            if (this.is(val))
                                return val;
                            var match = this.capture.exec(val);
                            return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;
                        },
                        is: function (val) {
                            return val instanceof Date && !isNaN(val.valueOf());
                        },
                        equals: function (a, b) {
                            return this.is(a) && this.is(b) && a.toISOString() === b.toISOString();
                        },
                        pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,
                        capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/
                    },
                    'json': {
                        encode: angular.toJson,
                        decode: angular.fromJson,
                        is: angular.isObject,
                        equals: angular.equals,
                        pattern: /[^\/]*/
                    },
                    'any': {
                        encode: angular.identity,
                        decode: angular.identity,
                        equals: angular.equals,
                        pattern: /.*/
                    }
                };
            function getDefaultConfig() {
                return {
                    strict: isStrictMode,
                    caseInsensitive: isCaseInsensitive
                };
            }
            function isInjectable(value) {
                return isFunction(value) || isArray(value) && isFunction(value[value.length - 1]);
            }
            $UrlMatcherFactory.$$getDefaultValue = function (config) {
                if (!isInjectable(config.value))
                    return config.value;
                if (!injector)
                    throw new Error('Injectable functions cannot be called at configuration time');
                return injector.invoke(config.value);
            };
            this.caseInsensitive = function (value) {
                if (isDefined(value))
                    isCaseInsensitive = value;
                return isCaseInsensitive;
            };
            this.strictMode = function (value) {
                if (isDefined(value))
                    isStrictMode = value;
                return isStrictMode;
            };
            this.defaultSquashPolicy = function (value) {
                if (!isDefined(value))
                    return defaultSquashPolicy;
                if (value !== true && value !== false && !isString(value))
                    throw new Error('Invalid squash policy: ' + value + '. Valid policies: false, true, arbitrary-string');
                defaultSquashPolicy = value;
                return value;
            };
            this.compile = function (pattern, config) {
                return new UrlMatcher(pattern, extend(getDefaultConfig(), config));
            };
            this.isMatcher = function (o) {
                if (!isObject(o))
                    return false;
                var result = true;
                forEach(UrlMatcher.prototype, function (val, name) {
                    if (isFunction(val)) {
                        result = result && (isDefined(o[name]) && isFunction(o[name]));
                    }
                });
                return result;
            };
            this.type = function (name, definition, definitionFn) {
                if (!isDefined(definition))
                    return $types[name];
                if ($types.hasOwnProperty(name))
                    throw new Error('A type named \'' + name + '\' has already been defined.');
                $types[name] = new Type(extend({ name: name }, definition));
                if (definitionFn) {
                    typeQueue.push({
                        name: name,
                        def: definitionFn
                    });
                    if (!enqueue)
                        flushTypeQueue();
                }
                return this;
            };
            function flushTypeQueue() {
                while (typeQueue.length) {
                    var type = typeQueue.shift();
                    if (type.pattern)
                        throw new Error('You cannot override a type\'s .pattern at runtime.');
                    angular.extend($types[type.name], injector.invoke(type.def));
                }
            }
            forEach(defaultTypes, function (type, name) {
                $types[name] = new Type(extend({ name: name }, type));
            });
            $types = inherit($types, {});
            this.$get = [
                '$injector',
                function ($injector) {
                    injector = $injector;
                    enqueue = false;
                    flushTypeQueue();
                    forEach(defaultTypes, function (type, name) {
                        if (!$types[name])
                            $types[name] = new Type(type);
                    });
                    return this;
                }
            ];
            this.Param = function Param(id, type, config, location) {
                var self = this;
                config = unwrapShorthand(config);
                type = getType(config, type, location);
                var arrayMode = getArrayMode();
                type = arrayMode ? type.$asArray(arrayMode, location === 'search') : type;
                if (type.name === 'string' && !arrayMode && location === 'path' && config.value === undefined)
                    config.value = '';
                var isOptional = config.value !== undefined;
                var squash = getSquashPolicy(config, isOptional);
                var replace = getReplace(config, arrayMode, isOptional, squash);
                function unwrapShorthand(config) {
                    var keys = isObject(config) ? objectKeys(config) : [];
                    var isShorthand = indexOf(keys, 'value') === -1 && indexOf(keys, 'type') === -1 && indexOf(keys, 'squash') === -1 && indexOf(keys, 'array') === -1;
                    if (isShorthand)
                        config = { value: config };
                    config.$$fn = isInjectable(config.value) ? config.value : function () {
                        return config.value;
                    };
                    return config;
                }
                function getType(config, urlType, location) {
                    if (config.type && urlType)
                        throw new Error('Param \'' + id + '\' has two type configurations.');
                    if (urlType)
                        return urlType;
                    if (!config.type)
                        return location === 'config' ? $types.any : $types.string;
                    if (angular.isString(config.type))
                        return $types[config.type];
                    if (config.type instanceof Type)
                        return config.type;
                    return new Type(config.type);
                }
                function getArrayMode() {
                    var arrayDefaults = { array: location === 'search' ? 'auto' : false };
                    var arrayParamNomenclature = id.match(/\[\]$/) ? { array: true } : {};
                    return extend(arrayDefaults, arrayParamNomenclature, config).array;
                }
                function getSquashPolicy(config, isOptional) {
                    var squash = config.squash;
                    if (!isOptional || squash === false)
                        return false;
                    if (!isDefined(squash) || squash == null)
                        return defaultSquashPolicy;
                    if (squash === true || isString(squash))
                        return squash;
                    throw new Error('Invalid squash policy: \'' + squash + '\'. Valid policies: false, true, or arbitrary string');
                }
                function getReplace(config, arrayMode, isOptional, squash) {
                    var replace, configuredKeys, defaultPolicy = [
                            {
                                from: '',
                                to: isOptional || arrayMode ? undefined : ''
                            },
                            {
                                from: null,
                                to: isOptional || arrayMode ? undefined : ''
                            }
                        ];
                    replace = isArray(config.replace) ? config.replace : [];
                    if (isString(squash))
                        replace.push({
                            from: squash,
                            to: undefined
                        });
                    configuredKeys = map(replace, function (item) {
                        return item.from;
                    });
                    return filter(defaultPolicy, function (item) {
                        return indexOf(configuredKeys, item.from) === -1;
                    }).concat(replace);
                }
                function $$getDefaultValue() {
                    if (!injector)
                        throw new Error('Injectable functions cannot be called at configuration time');
                    var defaultValue = injector.invoke(config.$$fn);
                    if (defaultValue !== null && defaultValue !== undefined && !self.type.is(defaultValue))
                        throw new Error('Default value (' + defaultValue + ') for parameter \'' + self.id + '\' is not an instance of Type (' + self.type.name + ')');
                    return defaultValue;
                }
                function $value(value) {
                    function hasReplaceVal(val) {
                        return function (obj) {
                            return obj.from === val;
                        };
                    }
                    function $replace(value) {
                        var replacement = map(filter(self.replace, hasReplaceVal(value)), function (obj) {
                            return obj.to;
                        });
                        return replacement.length ? replacement[0] : value;
                    }
                    value = $replace(value);
                    return !isDefined(value) ? $$getDefaultValue() : self.type.$normalize(value);
                }
                function toString() {
                    return '{Param:' + id + ' ' + type + ' squash: \'' + squash + '\' optional: ' + isOptional + '}';
                }
                extend(this, {
                    id: id,
                    type: type,
                    location: location,
                    array: arrayMode,
                    squash: squash,
                    replace: replace,
                    isOptional: isOptional,
                    value: $value,
                    dynamic: undefined,
                    config: config,
                    toString: toString
                });
            };
            function ParamSet(params) {
                extend(this, params || {});
            }
            ParamSet.prototype = {
                $$new: function () {
                    return inherit(this, extend(new ParamSet(), { $$parent: this }));
                },
                $$keys: function () {
                    var keys = [], chain = [], parent = this, ignore = objectKeys(ParamSet.prototype);
                    while (parent) {
                        chain.push(parent);
                        parent = parent.$$parent;
                    }
                    chain.reverse();
                    forEach(chain, function (paramset) {
                        forEach(objectKeys(paramset), function (key) {
                            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1)
                                keys.push(key);
                        });
                    });
                    return keys;
                },
                $$values: function (paramValues) {
                    var values = {}, self = this;
                    forEach(self.$$keys(), function (key) {
                        values[key] = self[key].value(paramValues && paramValues[key]);
                    });
                    return values;
                },
                $$equals: function (paramValues1, paramValues2) {
                    var equal = true, self = this;
                    forEach(self.$$keys(), function (key) {
                        var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];
                        if (!self[key].type.equals(left, right))
                            equal = false;
                    });
                    return equal;
                },
                $$validates: function $$validate(paramValues) {
                    var keys = this.$$keys(), i, param, rawVal, normalized, encoded;
                    for (i = 0; i < keys.length; i++) {
                        param = this[keys[i]];
                        rawVal = paramValues[keys[i]];
                        if ((rawVal === undefined || rawVal === null) && param.isOptional)
                            break;
                        normalized = param.type.$normalize(rawVal);
                        if (!param.type.is(normalized))
                            return false;
                        encoded = param.type.encode(normalized);
                        if (angular.isString(encoded) && !param.type.pattern.exec(encoded))
                            return false;
                    }
                    return true;
                },
                $$parent: undefined
            };
            this.ParamSet = ParamSet;
        }
        angular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);
        angular.module('ui.router.util').run([
            '$urlMatcherFactory',
            function ($urlMatcherFactory) {
            }
        ]);
        $UrlRouterProvider.$inject = [
            '$locationProvider',
            '$urlMatcherFactoryProvider'
        ];
        function $UrlRouterProvider($locationProvider, $urlMatcherFactory) {
            var rules = [], otherwise = null, interceptDeferred = false, listener;
            function regExpPrefix(re) {
                var prefix = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(re.source);
                return prefix != null ? prefix[1].replace(/\\(.)/g, '$1') : '';
            }
            function interpolate(pattern, match) {
                return pattern.replace(/\$(\$|\d{1,2})/, function (m, what) {
                    return match[what === '$' ? 0 : Number(what)];
                });
            }
            this.rule = function (rule) {
                if (!isFunction(rule))
                    throw new Error('\'rule\' must be a function');
                rules.push(rule);
                return this;
            };
            this.otherwise = function (rule) {
                if (isString(rule)) {
                    var redirect = rule;
                    rule = function () {
                        return redirect;
                    };
                } else if (!isFunction(rule))
                    throw new Error('\'rule\' must be a function');
                otherwise = rule;
                return this;
            };
            function handleIfMatch($injector, handler, match) {
                if (!match)
                    return false;
                var result = $injector.invoke(handler, handler, { $match: match });
                return isDefined(result) ? result : true;
            }
            this.when = function (what, handler) {
                var redirect, handlerIsString = isString(handler);
                if (isString(what))
                    what = $urlMatcherFactory.compile(what);
                if (!handlerIsString && !isFunction(handler) && !isArray(handler))
                    throw new Error('invalid \'handler\' in when()');
                var strategies = {
                    matcher: function (what, handler) {
                        if (handlerIsString) {
                            redirect = $urlMatcherFactory.compile(handler);
                            handler = [
                                '$match',
                                function ($match) {
                                    return redirect.format($match);
                                }
                            ];
                        }
                        return extend(function ($injector, $location) {
                            return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));
                        }, { prefix: isString(what.prefix) ? what.prefix : '' });
                    },
                    regex: function (what, handler) {
                        if (what.global || what.sticky)
                            throw new Error('when() RegExp must not be global or sticky');
                        if (handlerIsString) {
                            redirect = handler;
                            handler = [
                                '$match',
                                function ($match) {
                                    return interpolate(redirect, $match);
                                }
                            ];
                        }
                        return extend(function ($injector, $location) {
                            return handleIfMatch($injector, handler, what.exec($location.path()));
                        }, { prefix: regExpPrefix(what) });
                    }
                };
                var check = {
                    matcher: $urlMatcherFactory.isMatcher(what),
                    regex: what instanceof RegExp
                };
                for (var n in check) {
                    if (check[n])
                        return this.rule(strategies[n](what, handler));
                }
                throw new Error('invalid \'what\' in when()');
            };
            this.deferIntercept = function (defer) {
                if (defer === undefined)
                    defer = true;
                interceptDeferred = defer;
            };
            this.$get = $get;
            $get.$inject = [
                '$location',
                '$rootScope',
                '$injector',
                '$browser',
                '$sniffer'
            ];
            function $get($location, $rootScope, $injector, $browser, $sniffer) {
                var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;
                function appendBasePath(url, isHtml5, absolute) {
                    if (baseHref === '/')
                        return url;
                    if (isHtml5)
                        return baseHref.slice(0, -1) + url;
                    if (absolute)
                        return baseHref.slice(1) + url;
                    return url;
                }
                function update(evt) {
                    if (evt && evt.defaultPrevented)
                        return;
                    var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;
                    lastPushedUrl = undefined;
                    function check(rule) {
                        var handled = rule($injector, $location);
                        if (!handled)
                            return false;
                        if (isString(handled))
                            $location.replace().url(handled);
                        return true;
                    }
                    var n = rules.length, i;
                    for (i = 0; i < n; i++) {
                        if (check(rules[i]))
                            return;
                    }
                    if (otherwise)
                        check(otherwise);
                }
                function listen() {
                    listener = listener || $rootScope.$on('$locationChangeSuccess', update);
                    return listener;
                }
                if (!interceptDeferred)
                    listen();
                return {
                    sync: function () {
                        update();
                    },
                    listen: function () {
                        return listen();
                    },
                    update: function (read) {
                        if (read) {
                            location = $location.url();
                            return;
                        }
                        if ($location.url() === location)
                            return;
                        $location.url(location);
                        $location.replace();
                    },
                    push: function (urlMatcher, params, options) {
                        var url = urlMatcher.format(params || {});
                        if (url !== null && params && params['#']) {
                            url += '#' + params['#'];
                        }
                        $location.url(url);
                        lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;
                        if (options && options.replace)
                            $location.replace();
                    },
                    href: function (urlMatcher, params, options) {
                        if (!urlMatcher.validates(params))
                            return null;
                        var isHtml5 = $locationProvider.html5Mode();
                        if (angular.isObject(isHtml5)) {
                            isHtml5 = isHtml5.enabled;
                        }
                        isHtml5 = isHtml5 && $sniffer.history;
                        var url = urlMatcher.format(params);
                        options = options || {};
                        if (!isHtml5 && url !== null) {
                            url = '#' + $locationProvider.hashPrefix() + url;
                        }
                        if (url !== null && params && params['#']) {
                            url += '#' + params['#'];
                        }
                        url = appendBasePath(url, isHtml5, options.absolute);
                        if (!options.absolute || !url) {
                            return url;
                        }
                        var slash = !isHtml5 && url ? '/' : '', port = $location.port();
                        port = port === 80 || port === 443 ? '' : ':' + port;
                        return [
                            $location.protocol(),
                            '://',
                            $location.host(),
                            port,
                            slash,
                            url
                        ].join('');
                    }
                };
            }
        }
        angular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);
        $StateProvider.$inject = [
            '$urlRouterProvider',
            '$urlMatcherFactoryProvider'
        ];
        function $StateProvider($urlRouterProvider, $urlMatcherFactory) {
            var root, states = {}, $state, queue = {}, abstractKey = 'abstract';
            var stateBuilder = {
                parent: function (state) {
                    if (isDefined(state.parent) && state.parent)
                        return findState(state.parent);
                    var compositeName = /^(.+)\.[^.]+$/.exec(state.name);
                    return compositeName ? findState(compositeName[1]) : root;
                },
                data: function (state) {
                    if (state.parent && state.parent.data) {
                        state.data = state.self.data = inherit(state.parent.data, state.data);
                    }
                    return state.data;
                },
                url: function (state) {
                    var url = state.url, config = { params: state.params || {} };
                    if (isString(url)) {
                        if (url.charAt(0) == '^')
                            return $urlMatcherFactory.compile(url.substring(1), config);
                        return (state.parent.navigable || root).url.concat(url, config);
                    }
                    if (!url || $urlMatcherFactory.isMatcher(url))
                        return url;
                    throw new Error('Invalid url \'' + url + '\' in state \'' + state + '\'');
                },
                navigable: function (state) {
                    return state.url ? state : state.parent ? state.parent.navigable : null;
                },
                ownParams: function (state) {
                    var params = state.url && state.url.params || new $$UMFP.ParamSet();
                    forEach(state.params || {}, function (config, id) {
                        if (!params[id])
                            params[id] = new $$UMFP.Param(id, null, config, 'config');
                    });
                    return params;
                },
                params: function (state) {
                    var ownParams = pick(state.ownParams, state.ownParams.$$keys());
                    return state.parent && state.parent.params ? extend(state.parent.params.$$new(), ownParams) : new $$UMFP.ParamSet();
                },
                views: function (state) {
                    var views = {};
                    forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {
                        if (name.indexOf('@') < 0)
                            name += '@' + state.parent.name;
                        views[name] = view;
                    });
                    return views;
                },
                path: function (state) {
                    return state.parent ? state.parent.path.concat(state) : [];
                },
                includes: function (state) {
                    var includes = state.parent ? extend({}, state.parent.includes) : {};
                    includes[state.name] = true;
                    return includes;
                },
                $delegates: {}
            };
            function isRelative(stateName) {
                return stateName.indexOf('.') === 0 || stateName.indexOf('^') === 0;
            }
            function findState(stateOrName, base) {
                if (!stateOrName)
                    return undefined;
                var isStr = isString(stateOrName), name = isStr ? stateOrName : stateOrName.name, path = isRelative(name);
                if (path) {
                    if (!base)
                        throw new Error('No reference point given for path \'' + name + '\'');
                    base = findState(base);
                    var rel = name.split('.'), i = 0, pathLength = rel.length, current = base;
                    for (; i < pathLength; i++) {
                        if (rel[i] === '' && i === 0) {
                            current = base;
                            continue;
                        }
                        if (rel[i] === '^') {
                            if (!current.parent)
                                throw new Error('Path \'' + name + '\' not valid for state \'' + base.name + '\'');
                            current = current.parent;
                            continue;
                        }
                        break;
                    }
                    rel = rel.slice(i).join('.');
                    name = current.name + (current.name && rel ? '.' : '') + rel;
                }
                var state = states[name];
                if (state && (isStr || !isStr && (state === stateOrName || state.self === stateOrName))) {
                    return state;
                }
                return undefined;
            }
            function queueState(parentName, state) {
                if (!queue[parentName]) {
                    queue[parentName] = [];
                }
                queue[parentName].push(state);
            }
            function flushQueuedChildren(parentName) {
                var queued = queue[parentName] || [];
                while (queued.length) {
                    registerState(queued.shift());
                }
            }
            function registerState(state) {
                state = inherit(state, {
                    self: state,
                    resolve: state.resolve || {},
                    toString: function () {
                        return this.name;
                    }
                });
                var name = state.name;
                if (!isString(name) || name.indexOf('@') >= 0)
                    throw new Error('State must have a valid name');
                if (states.hasOwnProperty(name))
                    throw new Error('State \'' + name + '\' is already defined');
                var parentName = name.indexOf('.') !== -1 ? name.substring(0, name.lastIndexOf('.')) : isString(state.parent) ? state.parent : isObject(state.parent) && isString(state.parent.name) ? state.parent.name : '';
                if (parentName && !states[parentName]) {
                    return queueState(parentName, state.self);
                }
                for (var key in stateBuilder) {
                    if (isFunction(stateBuilder[key]))
                        state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);
                }
                states[name] = state;
                if (!state[abstractKey] && state.url) {
                    $urlRouterProvider.when(state.url, [
                        '$match',
                        '$stateParams',
                        function ($match, $stateParams) {
                            if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {
                                $state.transitionTo(state, $match, {
                                    inherit: true,
                                    location: false
                                });
                            }
                        }
                    ]);
                }
                flushQueuedChildren(name);
                return state;
            }
            function isGlob(text) {
                return text.indexOf('*') > -1;
            }
            function doesStateMatchGlob(glob) {
                var globSegments = glob.split('.'), segments = $state.$current.name.split('.');
                for (var i = 0, l = globSegments.length; i < l; i++) {
                    if (globSegments[i] === '*') {
                        segments[i] = '*';
                    }
                }
                if (globSegments[0] === '**') {
                    segments = segments.slice(indexOf(segments, globSegments[1]));
                    segments.unshift('**');
                }
                if (globSegments[globSegments.length - 1] === '**') {
                    segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);
                    segments.push('**');
                }
                if (globSegments.length != segments.length) {
                    return false;
                }
                return segments.join('') === globSegments.join('');
            }
            root = registerState({
                name: '',
                url: '^',
                views: null,
                'abstract': true
            });
            root.navigable = null;
            this.decorator = decorator;
            function decorator(name, func) {
                if (isString(name) && !isDefined(func)) {
                    return stateBuilder[name];
                }
                if (!isFunction(func) || !isString(name)) {
                    return this;
                }
                if (stateBuilder[name] && !stateBuilder.$delegates[name]) {
                    stateBuilder.$delegates[name] = stateBuilder[name];
                }
                stateBuilder[name] = func;
                return this;
            }
            this.state = state;
            function state(name, definition) {
                if (isObject(name))
                    definition = name;
                else
                    definition.name = name;
                registerState(definition);
                return this;
            }
            this.$get = $get;
            $get.$inject = [
                '$rootScope',
                '$q',
                '$view',
                '$injector',
                '$resolve',
                '$stateParams',
                '$urlRouter',
                '$location',
                '$urlMatcherFactory'
            ];
            function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) {
                var TransitionSuperseded = $q.reject(new Error('transition superseded'));
                var TransitionPrevented = $q.reject(new Error('transition prevented'));
                var TransitionAborted = $q.reject(new Error('transition aborted'));
                var TransitionFailed = $q.reject(new Error('transition failed'));
                function handleRedirect(redirect, state, params, options) {
                    var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);
                    if (evt.defaultPrevented) {
                        $urlRouter.update();
                        return TransitionAborted;
                    }
                    if (!evt.retry) {
                        return null;
                    }
                    if (options.$retry) {
                        $urlRouter.update();
                        return TransitionFailed;
                    }
                    var retryTransition = $state.transition = $q.when(evt.retry);
                    retryTransition.then(function () {
                        if (retryTransition !== $state.transition)
                            return TransitionSuperseded;
                        redirect.options.$retry = true;
                        return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);
                    }, function () {
                        return TransitionAborted;
                    });
                    $urlRouter.update();
                    return retryTransition;
                }
                root.locals = {
                    resolve: null,
                    globals: { $stateParams: {} }
                };
                $state = {
                    params: {},
                    current: root.self,
                    $current: root,
                    transition: null
                };
                $state.reload = function reload(state) {
                    return $state.transitionTo($state.current, $stateParams, {
                        reload: state || true,
                        inherit: false,
                        notify: true
                    });
                };
                $state.go = function go(to, params, options) {
                    return $state.transitionTo(to, params, extend({
                        inherit: true,
                        relative: $state.$current
                    }, options));
                };
                $state.transitionTo = function transitionTo(to, toParams, options) {
                    toParams = toParams || {};
                    options = extend({
                        location: true,
                        inherit: false,
                        relative: null,
                        notify: true,
                        reload: false,
                        $retry: false
                    }, options || {});
                    var from = $state.$current, fromParams = $state.params, fromPath = from.path;
                    var evt, toState = findState(to, options.relative);
                    var hash = toParams['#'];
                    if (!isDefined(toState)) {
                        var redirect = {
                            to: to,
                            toParams: toParams,
                            options: options
                        };
                        var redirectResult = handleRedirect(redirect, from.self, fromParams, options);
                        if (redirectResult) {
                            return redirectResult;
                        }
                        to = redirect.to;
                        toParams = redirect.toParams;
                        options = redirect.options;
                        toState = findState(to, options.relative);
                        if (!isDefined(toState)) {
                            if (!options.relative)
                                throw new Error('No such state \'' + to + '\'');
                            throw new Error('Could not resolve \'' + to + '\' from state \'' + options.relative + '\'');
                        }
                    }
                    if (toState[abstractKey])
                        throw new Error('Cannot transition to abstract state \'' + to + '\'');
                    if (options.inherit)
                        toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);
                    if (!toState.params.$$validates(toParams))
                        return TransitionFailed;
                    toParams = toState.params.$$values(toParams);
                    to = toState;
                    var toPath = to.path;
                    var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];
                    if (!options.reload) {
                        while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {
                            locals = toLocals[keep] = state.locals;
                            keep++;
                            state = toPath[keep];
                        }
                    } else if (isString(options.reload) || isObject(options.reload)) {
                        if (isObject(options.reload) && !options.reload.name) {
                            throw new Error('Invalid reload state object');
                        }
                        var reloadState = options.reload === true ? fromPath[0] : findState(options.reload);
                        if (options.reload && !reloadState) {
                            throw new Error('No such reload state \'' + (isString(options.reload) ? options.reload : options.reload.name) + '\'');
                        }
                        while (state && state === fromPath[keep] && state !== reloadState) {
                            locals = toLocals[keep] = state.locals;
                            keep++;
                            state = toPath[keep];
                        }
                    }
                    if (shouldSkipReload(to, toParams, from, fromParams, locals, options)) {
                        if (hash)
                            toParams['#'] = hash;
                        $state.params = toParams;
                        copy($state.params, $stateParams);
                        copy(filterByKeys(to.params.$$keys(), $stateParams), to.locals.globals.$stateParams);
                        if (options.location && to.navigable && to.navigable.url) {
                            $urlRouter.push(to.navigable.url, toParams, {
                                $$avoidResync: true,
                                replace: options.location === 'replace'
                            });
                            $urlRouter.update(true);
                        }
                        $state.transition = null;
                        return $q.when($state.current);
                    }
                    toParams = filterByKeys(to.params.$$keys(), toParams || {});
                    if (hash)
                        toParams['#'] = hash;
                    if (options.notify) {
                        if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams, options).defaultPrevented) {
                            $rootScope.$broadcast('$stateChangeCancel', to.self, toParams, from.self, fromParams);
                            if ($state.transition == null)
                                $urlRouter.update();
                            return TransitionPrevented;
                        }
                    }
                    var resolved = $q.when(locals);
                    for (var l = keep; l < toPath.length; l++, state = toPath[l]) {
                        locals = toLocals[l] = inherit(locals);
                        resolved = resolveState(state, toParams, state === to, resolved, locals, options);
                    }
                    var transition = $state.transition = resolved.then(function () {
                        var l, entering, exiting;
                        if ($state.transition !== transition)
                            return TransitionSuperseded;
                        for (l = fromPath.length - 1; l >= keep; l--) {
                            exiting = fromPath[l];
                            if (exiting.self.onExit) {
                                $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);
                            }
                            exiting.locals = null;
                        }
                        for (l = keep; l < toPath.length; l++) {
                            entering = toPath[l];
                            entering.locals = toLocals[l];
                            if (entering.self.onEnter) {
                                $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);
                            }
                        }
                        if ($state.transition !== transition)
                            return TransitionSuperseded;
                        $state.$current = to;
                        $state.current = to.self;
                        $state.params = toParams;
                        copy($state.params, $stateParams);
                        $state.transition = null;
                        if (options.location && to.navigable) {
                            $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {
                                $$avoidResync: true,
                                replace: options.location === 'replace'
                            });
                        }
                        if (options.notify) {
                            $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);
                        }
                        $urlRouter.update(true);
                        return $state.current;
                    }, function (error) {
                        if ($state.transition !== transition)
                            return TransitionSuperseded;
                        $state.transition = null;
                        evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);
                        if (!evt.defaultPrevented) {
                            $urlRouter.update();
                        }
                        return $q.reject(error);
                    });
                    return transition;
                };
                $state.is = function is(stateOrName, params, options) {
                    options = extend({ relative: $state.$current }, options || {});
                    var state = findState(stateOrName, options.relative);
                    if (!isDefined(state)) {
                        return undefined;
                    }
                    if ($state.$current !== state) {
                        return false;
                    }
                    return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;
                };
                $state.includes = function includes(stateOrName, params, options) {
                    options = extend({ relative: $state.$current }, options || {});
                    if (isString(stateOrName) && isGlob(stateOrName)) {
                        if (!doesStateMatchGlob(stateOrName)) {
                            return false;
                        }
                        stateOrName = $state.$current.name;
                    }
                    var state = findState(stateOrName, options.relative);
                    if (!isDefined(state)) {
                        return undefined;
                    }
                    if (!isDefined($state.$current.includes[state.name])) {
                        return false;
                    }
                    return params ? equalForKeys(state.params.$$values(params), $stateParams, objectKeys(params)) : true;
                };
                $state.href = function href(stateOrName, params, options) {
                    options = extend({
                        lossy: true,
                        inherit: true,
                        absolute: false,
                        relative: $state.$current
                    }, options || {});
                    var state = findState(stateOrName, options.relative);
                    if (!isDefined(state))
                        return null;
                    if (options.inherit)
                        params = inheritParams($stateParams, params || {}, $state.$current, state);
                    var nav = state && options.lossy ? state.navigable : state;
                    if (!nav || nav.url === undefined || nav.url === null) {
                        return null;
                    }
                    return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys().concat('#'), params || {}), { absolute: options.absolute });
                };
                $state.get = function (stateOrName, context) {
                    if (arguments.length === 0)
                        return map(objectKeys(states), function (name) {
                            return states[name].self;
                        });
                    var state = findState(stateOrName, context || $state.$current);
                    return state && state.self ? state.self : null;
                };
                function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {
                    var $stateParams = paramsAreFiltered ? params : filterByKeys(state.params.$$keys(), params);
                    var locals = { $stateParams: $stateParams };
                    dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);
                    var promises = [dst.resolve.then(function (globals) {
                            dst.globals = globals;
                        })];
                    if (inherited)
                        promises.push(inherited);
                    function resolveViews() {
                        var viewsPromises = [];
                        forEach(state.views, function (view, name) {
                            var injectables = view.resolve && view.resolve !== state.resolve ? view.resolve : {};
                            injectables.$template = [function () {
                                    return $view.load(name, {
                                        view: view,
                                        locals: dst.globals,
                                        params: $stateParams,
                                        notify: options.notify
                                    }) || '';
                                }];
                            viewsPromises.push($resolve.resolve(injectables, dst.globals, dst.resolve, state).then(function (result) {
                                if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {
                                    var injectLocals = angular.extend({}, injectables, dst.globals);
                                    result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);
                                } else {
                                    result.$$controller = view.controller;
                                }
                                result.$$state = state;
                                result.$$controllerAs = view.controllerAs;
                                dst[name] = result;
                            }));
                        });
                        return $q.all(viewsPromises).then(function () {
                            return dst.globals;
                        });
                    }
                    return $q.all(promises).then(resolveViews).then(function (values) {
                        return dst;
                    });
                }
                return $state;
            }
            function shouldSkipReload(to, toParams, from, fromParams, locals, options) {
                function nonSearchParamsEqual(fromAndToState, fromParams, toParams) {
                    function notSearchParam(key) {
                        return fromAndToState.params[key].location != 'search';
                    }
                    var nonQueryParamKeys = fromAndToState.params.$$keys().filter(notSearchParam);
                    var nonQueryParams = pick.apply({}, [fromAndToState.params].concat(nonQueryParamKeys));
                    var nonQueryParamSet = new $$UMFP.ParamSet(nonQueryParams);
                    return nonQueryParamSet.$$equals(fromParams, toParams);
                }
                if (!options.reload && to === from && (locals === from.locals || to.self.reloadOnSearch === false && nonSearchParamsEqual(from, fromParams, toParams))) {
                    return true;
                }
            }
        }
        angular.module('ui.router.state').factory('$stateParams', function () {
            return {};
        }).provider('$state', $StateProvider);
        $ViewProvider.$inject = [];
        function $ViewProvider() {
            this.$get = $get;
            $get.$inject = [
                '$rootScope',
                '$templateFactory'
            ];
            function $get($rootScope, $templateFactory) {
                return {
                    load: function load(name, options) {
                        var result, defaults = {
                                template: null,
                                controller: null,
                                view: null,
                                locals: null,
                                notify: true,
                                async: true,
                                params: {}
                            };
                        options = extend(defaults, options);
                        if (options.view) {
                            result = $templateFactory.fromConfig(options.view, options.params, options.locals);
                        }
                        return result;
                    }
                };
            }
        }
        angular.module('ui.router.state').provider('$view', $ViewProvider);
        function $ViewScrollProvider() {
            var useAnchorScroll = false;
            this.useAnchorScroll = function () {
                useAnchorScroll = true;
            };
            this.$get = [
                '$anchorScroll',
                '$timeout',
                function ($anchorScroll, $timeout) {
                    if (useAnchorScroll) {
                        return $anchorScroll;
                    }
                    return function ($element) {
                        return $timeout(function () {
                            $element[0].scrollIntoView();
                        }, 0, false);
                    };
                }
            ];
        }
        angular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);
        var ngMajorVer = angular.version.major;
        var ngMinorVer = angular.version.minor;
        $ViewDirective.$inject = [
            '$state',
            '$injector',
            '$uiViewScroll',
            '$interpolate'
        ];
        function $ViewDirective($state, $injector, $uiViewScroll, $interpolate) {
            function getService() {
                return $injector.has ? function (service) {
                    return $injector.has(service) ? $injector.get(service) : null;
                } : function (service) {
                    try {
                        return $injector.get(service);
                    } catch (e) {
                        return null;
                    }
                };
            }
            var service = getService(), $animator = service('$animator'), $animate = service('$animate');
            function getRenderer(attrs, scope) {
                var statics = {
                    enter: function (element, target, cb) {
                        target.after(element);
                        cb();
                    },
                    leave: function (element, cb) {
                        element.remove();
                        cb();
                    }
                };
                if (!!attrs.noanimation)
                    return statics;
                function animEnabled(element) {
                    if (ngMajorVer === 1 && ngMinorVer >= 4)
                        return !!$animate.enabled(element);
                    if (ngMajorVer === 1 && ngMinorVer >= 2)
                        return !!$animate.enabled();
                    return !!$animator;
                }
                if ($animate) {
                    return {
                        enter: function (element, target, cb) {
                            if (!animEnabled(element)) {
                                statics.enter(element, target, cb);
                            } else if (angular.version.minor > 2) {
                                $animate.enter(element, null, target).then(cb);
                            } else {
                                $animate.enter(element, null, target, cb);
                            }
                        },
                        leave: function (element, cb) {
                            if (!animEnabled(element)) {
                                statics.leave(element, cb);
                            } else if (angular.version.minor > 2) {
                                $animate.leave(element).then(cb);
                            } else {
                                $animate.leave(element, cb);
                            }
                        }
                    };
                }
                if ($animator) {
                    var animate = $animator && $animator(scope, attrs);
                    return {
                        enter: function (element, target, cb) {
                            animate.enter(element, null, target);
                            cb();
                        },
                        leave: function (element, cb) {
                            animate.leave(element);
                            cb();
                        }
                    };
                }
                return statics;
            }
            var directive = {
                restrict: 'ECA',
                terminal: true,
                priority: 400,
                transclude: 'element',
                compile: function (tElement, tAttrs, $transclude) {
                    return function (scope, $element, attrs) {
                        var previousEl, currentEl, currentScope, latestLocals, onloadExp = attrs.onload || '', autoScrollExp = attrs.autoscroll, renderer = getRenderer(attrs, scope);
                        scope.$on('$stateChangeSuccess', function () {
                            updateView(false);
                        });
                        updateView(true);
                        function cleanupLastView() {
                            var _previousEl = previousEl;
                            var _currentScope = currentScope;
                            if (_currentScope) {
                                _currentScope._willBeDestroyed = true;
                            }
                            function cleanOld() {
                                if (_previousEl) {
                                    _previousEl.remove();
                                }
                                if (_currentScope) {
                                    _currentScope.$destroy();
                                }
                            }
                            if (currentEl) {
                                renderer.leave(currentEl, function () {
                                    cleanOld();
                                    previousEl = null;
                                });
                                previousEl = currentEl;
                            } else {
                                cleanOld();
                                previousEl = null;
                            }
                            currentEl = null;
                            currentScope = null;
                        }
                        function updateView(firstTime) {
                            var newScope, name = getUiViewName(scope, attrs, $element, $interpolate), previousLocals = name && $state.$current && $state.$current.locals[name];
                            if (!firstTime && previousLocals === latestLocals || scope._willBeDestroyed)
                                return;
                            newScope = scope.$new();
                            latestLocals = $state.$current.locals[name];
                            newScope.$emit('$viewContentLoading', name);
                            var clone = $transclude(newScope, function (clone) {
                                renderer.enter(clone, $element, function onUiViewEnter() {
                                    if (currentScope) {
                                        currentScope.$emit('$viewContentAnimationEnded');
                                    }
                                    if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {
                                        $uiViewScroll(clone);
                                    }
                                });
                                cleanupLastView();
                            });
                            currentEl = clone;
                            currentScope = newScope;
                            currentScope.$emit('$viewContentLoaded', name);
                            currentScope.$eval(onloadExp);
                        }
                    };
                }
            };
            return directive;
        }
        $ViewDirectiveFill.$inject = [
            '$compile',
            '$controller',
            '$state',
            '$interpolate'
        ];
        function $ViewDirectiveFill($compile, $controller, $state, $interpolate) {
            return {
                restrict: 'ECA',
                priority: -400,
                compile: function (tElement) {
                    var initial = tElement.html();
                    return function (scope, $element, attrs) {
                        var current = $state.$current, name = getUiViewName(scope, attrs, $element, $interpolate), locals = current && current.locals[name];
                        if (!locals) {
                            return;
                        }
                        $element.data('$uiView', {
                            name: name,
                            state: locals.$$state
                        });
                        $element.html(locals.$template ? locals.$template : initial);
                        var link = $compile($element.contents());
                        if (locals.$$controller) {
                            locals.$scope = scope;
                            locals.$element = $element;
                            var controller = $controller(locals.$$controller, locals);
                            if (locals.$$controllerAs) {
                                scope[locals.$$controllerAs] = controller;
                            }
                            $element.data('$ngControllerController', controller);
                            $element.children().data('$ngControllerController', controller);
                        }
                        link(scope);
                    };
                }
            };
        }
        function getUiViewName(scope, attrs, element, $interpolate) {
            var name = $interpolate(attrs.uiView || attrs.name || '')(scope);
            var inherited = element.inheritedData('$uiView');
            return name.indexOf('@') >= 0 ? name : name + '@' + (inherited ? inherited.state.name : '');
        }
        angular.module('ui.router.state').directive('uiView', $ViewDirective);
        angular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);
        function parseStateRef(ref, current) {
            var preparsed = ref.match(/^\s*({[^}]*})\s*$/), parsed;
            if (preparsed)
                ref = current + '(' + preparsed[1] + ')';
            parsed = ref.replace(/\n/g, ' ').match(/^([^(]+?)\s*(\((.*)\))?$/);
            if (!parsed || parsed.length !== 4)
                throw new Error('Invalid state ref \'' + ref + '\'');
            return {
                state: parsed[1],
                paramExpr: parsed[3] || null
            };
        }
        function stateContext(el) {
            var stateData = el.parent().inheritedData('$uiView');
            if (stateData && stateData.state && stateData.state.name) {
                return stateData.state;
            }
        }
        function getTypeInfo(el) {
            var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';
            var isForm = el[0].nodeName === 'FORM';
            return {
                attr: isForm ? 'action' : isSvg ? 'xlink:href' : 'href',
                isAnchor: el.prop('tagName').toUpperCase() === 'A',
                clickable: !isForm
            };
        }
        function clickHook(el, $state, $timeout, type, current) {
            return function (e) {
                var button = e.which || e.button, target = current();
                if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {
                    var transition = $timeout(function () {
                        $state.go(target.state, target.params, target.options);
                    });
                    e.preventDefault();
                    var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1 : 0;
                    e.preventDefault = function () {
                        if (ignorePreventDefaultCount-- <= 0)
                            $timeout.cancel(transition);
                    };
                }
            };
        }
        function defaultOpts(el, $state) {
            return {
                relative: stateContext(el) || $state.$current,
                inherit: true
            };
        }
        $StateRefDirective.$inject = [
            '$state',
            '$timeout'
        ];
        function $StateRefDirective($state, $timeout) {
            return {
                restrict: 'A',
                require: [
                    '?^uiSrefActive',
                    '?^uiSrefActiveEq'
                ],
                link: function (scope, element, attrs, uiSrefActive) {
                    var ref = parseStateRef(attrs.uiSref, $state.current.name);
                    var def = {
                        state: ref.state,
                        href: null,
                        params: null
                    };
                    var type = getTypeInfo(element);
                    var active = uiSrefActive[1] || uiSrefActive[0];
                    def.options = extend(defaultOpts(element, $state), attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {});
                    var update = function (val) {
                        if (val)
                            def.params = angular.copy(val);
                        def.href = $state.href(ref.state, def.params, def.options);
                        if (active)
                            active.$$addStateInfo(ref.state, def.params);
                        if (def.href !== null)
                            attrs.$set(type.attr, def.href);
                    };
                    if (ref.paramExpr) {
                        scope.$watch(ref.paramExpr, function (val) {
                            if (val !== def.params)
                                update(val);
                        }, true);
                        def.params = angular.copy(scope.$eval(ref.paramExpr));
                    }
                    update();
                    if (!type.clickable)
                        return;
                    element.bind('click', clickHook(element, $state, $timeout, type, function () {
                        return def;
                    }));
                }
            };
        }
        $StateRefDynamicDirective.$inject = [
            '$state',
            '$timeout'
        ];
        function $StateRefDynamicDirective($state, $timeout) {
            return {
                restrict: 'A',
                require: [
                    '?^uiSrefActive',
                    '?^uiSrefActiveEq'
                ],
                link: function (scope, element, attrs, uiSrefActive) {
                    var type = getTypeInfo(element);
                    var active = uiSrefActive[1] || uiSrefActive[0];
                    var group = [
                        attrs.uiState,
                        attrs.uiStateParams || null,
                        attrs.uiStateOpts || null
                    ];
                    var watch = '[' + group.map(function (val) {
                        return val || 'null';
                    }).join(', ') + ']';
                    var def = {
                        state: null,
                        params: null,
                        options: null,
                        href: null
                    };
                    function runStateRefLink(group) {
                        def.state = group[0];
                        def.params = group[1];
                        def.options = group[2];
                        def.href = $state.href(def.state, def.params, def.options);
                        if (active)
                            active.$$addStateInfo(def.state, def.params);
                        if (def.href)
                            attrs.$set(type.attr, def.href);
                    }
                    scope.$watch(watch, runStateRefLink, true);
                    runStateRefLink(scope.$eval(watch));
                    if (!type.clickable)
                        return;
                    element.bind('click', clickHook(element, $state, $timeout, type, function () {
                        return def;
                    }));
                }
            };
        }
        $StateRefActiveDirective.$inject = [
            '$state',
            '$stateParams',
            '$interpolate'
        ];
        function $StateRefActiveDirective($state, $stateParams, $interpolate) {
            return {
                restrict: 'A',
                controller: [
                    '$scope',
                    '$element',
                    '$attrs',
                    '$timeout',
                    function ($scope, $element, $attrs, $timeout) {
                        var states = [], activeClasses = {}, activeEqClass, uiSrefActive;
                        activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);
                        try {
                            uiSrefActive = $scope.$eval($attrs.uiSrefActive);
                        } catch (e) {
                        }
                        uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);
                        if (isObject(uiSrefActive)) {
                            forEach(uiSrefActive, function (stateOrName, activeClass) {
                                if (isString(stateOrName)) {
                                    var ref = parseStateRef(stateOrName, $state.current.name);
                                    addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);
                                }
                            });
                        }
                        this.$$addStateInfo = function (newState, newParams) {
                            if (isObject(uiSrefActive) && states.length > 0) {
                                return;
                            }
                            addState(newState, newParams, uiSrefActive);
                            update();
                        };
                        $scope.$on('$stateChangeSuccess', update);
                        function addState(stateName, stateParams, activeClass) {
                            var state = $state.get(stateName, stateContext($element));
                            var stateHash = createStateHash(stateName, stateParams);
                            states.push({
                                state: state || { name: stateName },
                                params: stateParams,
                                hash: stateHash
                            });
                            activeClasses[stateHash] = activeClass;
                        }
                        function createStateHash(state, params) {
                            if (!isString(state)) {
                                throw new Error('state should be a string');
                            }
                            if (isObject(params)) {
                                return state + toJson(params);
                            }
                            params = $scope.$eval(params);
                            if (isObject(params)) {
                                return state + toJson(params);
                            }
                            return state;
                        }
                        function update() {
                            for (var i = 0; i < states.length; i++) {
                                if (anyMatch(states[i].state, states[i].params)) {
                                    addClass($element, activeClasses[states[i].hash]);
                                } else {
                                    removeClass($element, activeClasses[states[i].hash]);
                                }
                                if (exactMatch(states[i].state, states[i].params)) {
                                    addClass($element, activeEqClass);
                                } else {
                                    removeClass($element, activeEqClass);
                                }
                            }
                        }
                        function addClass(el, className) {
                            $timeout(function () {
                                el.addClass(className);
                            });
                        }
                        function removeClass(el, className) {
                            el.removeClass(className);
                        }
                        function anyMatch(state, params) {
                            return $state.includes(state.name, params);
                        }
                        function exactMatch(state, params) {
                            return $state.is(state.name, params);
                        }
                        update();
                    }
                ]
            };
        }
        angular.module('ui.router.state').directive('uiSref', $StateRefDirective).directive('uiSrefActive', $StateRefActiveDirective).directive('uiSrefActiveEq', $StateRefActiveDirective).directive('uiState', $StateRefDynamicDirective);
        $IsStateFilter.$inject = ['$state'];
        function $IsStateFilter($state) {
            var isFilter = function (state, params) {
                return $state.is(state, params);
            };
            isFilter.$stateful = true;
            return isFilter;
        }
        $IncludedByStateFilter.$inject = ['$state'];
        function $IncludedByStateFilter($state) {
            var includesFilter = function (state, params, options) {
                return $state.includes(state, params, options);
            };
            includesFilter.$stateful = true;
            return includesFilter;
        }
        angular.module('ui.router.state').filter('isState', $IsStateFilter).filter('includedByState', $IncludedByStateFilter);
    }(window, window.angular));
    return;
});
define('UIBootstrap', [
    'bootstrap',
    'angular',
    'css!../../bower_components/angular-bootstrap/ui-bootstrap-csp.css'
], function () {
    angular.module('ui.bootstrap', [
        'ui.bootstrap.tpls',
        'ui.bootstrap.collapse',
        'ui.bootstrap.accordion',
        'ui.bootstrap.alert',
        'ui.bootstrap.buttons',
        'ui.bootstrap.carousel',
        'ui.bootstrap.dateparser',
        'ui.bootstrap.isClass',
        'ui.bootstrap.datepicker',
        'ui.bootstrap.position',
        'ui.bootstrap.datepickerPopup',
        'ui.bootstrap.debounce',
        'ui.bootstrap.dropdown',
        'ui.bootstrap.stackedMap',
        'ui.bootstrap.modal',
        'ui.bootstrap.paging',
        'ui.bootstrap.pager',
        'ui.bootstrap.pagination',
        'ui.bootstrap.tooltip',
        'ui.bootstrap.popover',
        'ui.bootstrap.progressbar',
        'ui.bootstrap.rating',
        'ui.bootstrap.tabs',
        'ui.bootstrap.timepicker',
        'ui.bootstrap.typeahead'
    ]), angular.module('ui.bootstrap.tpls', [
        'uib/template/accordion/accordion-group.html',
        'uib/template/accordion/accordion.html',
        'uib/template/alert/alert.html',
        'uib/template/carousel/carousel.html',
        'uib/template/carousel/slide.html',
        'uib/template/datepicker/datepicker.html',
        'uib/template/datepicker/day.html',
        'uib/template/datepicker/month.html',
        'uib/template/datepicker/year.html',
        'uib/template/datepickerPopup/popup.html',
        'uib/template/modal/backdrop.html',
        'uib/template/modal/window.html',
        'uib/template/pager/pager.html',
        'uib/template/pagination/pagination.html',
        'uib/template/tooltip/tooltip-html-popup.html',
        'uib/template/tooltip/tooltip-popup.html',
        'uib/template/tooltip/tooltip-template-popup.html',
        'uib/template/popover/popover-html.html',
        'uib/template/popover/popover-template.html',
        'uib/template/popover/popover.html',
        'uib/template/progressbar/bar.html',
        'uib/template/progressbar/progress.html',
        'uib/template/progressbar/progressbar.html',
        'uib/template/rating/rating.html',
        'uib/template/tabs/tab.html',
        'uib/template/tabs/tabset.html',
        'uib/template/timepicker/timepicker.html',
        'uib/template/typeahead/typeahead-match.html',
        'uib/template/typeahead/typeahead-popup.html'
    ]), angular.module('ui.bootstrap.collapse', []).directive('uibCollapse', [
        '$animate',
        '$q',
        '$parse',
        '$injector',
        function (a, b, c, d) {
            var e = d.has('$animateCss') ? d.get('$animateCss') : null;
            return {
                link: function (d, f, g) {
                    function h() {
                        f.hasClass('collapse') && f.hasClass('in') || b.resolve(l(d)).then(function () {
                            f.removeClass('collapse').addClass('collapsing').attr('aria-expanded', !0).attr('aria-hidden', !1), e ? e(f, {
                                addClass: 'in',
                                easing: 'ease',
                                to: { height: f[0].scrollHeight + 'px' }
                            }).start()['finally'](i) : a.addClass(f, 'in', { to: { height: f[0].scrollHeight + 'px' } }).then(i);
                        });
                    }
                    function i() {
                        f.removeClass('collapsing').addClass('collapse').css({ height: 'auto' }), m(d);
                    }
                    function j() {
                        return f.hasClass('collapse') || f.hasClass('in') ? void b.resolve(n(d)).then(function () {
                            f.css({ height: f[0].scrollHeight + 'px' }).removeClass('collapse').addClass('collapsing').attr('aria-expanded', !1).attr('aria-hidden', !0), e ? e(f, {
                                removeClass: 'in',
                                to: { height: '0' }
                            }).start()['finally'](k) : a.removeClass(f, 'in', { to: { height: '0' } }).then(k);
                        }) : k();
                    }
                    function k() {
                        f.css({ height: '0' }), f.removeClass('collapsing').addClass('collapse'), o(d);
                    }
                    var l = c(g.expanding), m = c(g.expanded), n = c(g.collapsing), o = c(g.collapsed);
                    d.$eval(g.uibCollapse) || f.addClass('in').addClass('collapse').attr('aria-expanded', !0).attr('aria-hidden', !1).css({ height: 'auto' }), d.$watch(g.uibCollapse, function (a) {
                        a ? j() : h();
                    });
                }
            };
        }
    ]), angular.module('ui.bootstrap.accordion', ['ui.bootstrap.collapse']).constant('uibAccordionConfig', { closeOthers: !0 }).controller('UibAccordionController', [
        '$scope',
        '$attrs',
        'uibAccordionConfig',
        function (a, b, c) {
            this.groups = [], this.closeOthers = function (d) {
                var e = angular.isDefined(b.closeOthers) ? a.$eval(b.closeOthers) : c.closeOthers;
                e && angular.forEach(this.groups, function (a) {
                    a !== d && (a.isOpen = !1);
                });
            }, this.addGroup = function (a) {
                var b = this;
                this.groups.push(a), a.$on('$destroy', function (c) {
                    b.removeGroup(a);
                });
            }, this.removeGroup = function (a) {
                var b = this.groups.indexOf(a);
                -1 !== b && this.groups.splice(b, 1);
            };
        }
    ]).directive('uibAccordion', function () {
        return {
            controller: 'UibAccordionController',
            controllerAs: 'accordion',
            transclude: !0,
            templateUrl: function (a, b) {
                return b.templateUrl || 'uib/template/accordion/accordion.html';
            }
        };
    }).directive('uibAccordionGroup', function () {
        return {
            require: '^uibAccordion',
            transclude: !0,
            replace: !0,
            templateUrl: function (a, b) {
                return b.templateUrl || 'uib/template/accordion/accordion-group.html';
            },
            scope: {
                heading: '@',
                panelClass: '@?',
                isOpen: '=?',
                isDisabled: '=?'
            },
            controller: function () {
                this.setHeading = function (a) {
                    this.heading = a;
                };
            },
            link: function (a, b, c, d) {
                d.addGroup(a), a.openClass = c.openClass || 'panel-open', a.panelClass = c.panelClass || 'panel-default', a.$watch('isOpen', function (c) {
                    b.toggleClass(a.openClass, !!c), c && d.closeOthers(a);
                }), a.toggleOpen = function (b) {
                    a.isDisabled || b && 32 !== b.which || (a.isOpen = !a.isOpen);
                };
                var e = 'accordiongroup-' + a.$id + '-' + Math.floor(10000 * Math.random());
                a.headingId = e + '-tab', a.panelId = e + '-panel';
            }
        };
    }).directive('uibAccordionHeading', function () {
        return {
            transclude: !0,
            template: '',
            replace: !0,
            require: '^uibAccordionGroup',
            link: function (a, b, c, d, e) {
                d.setHeading(e(a, angular.noop));
            }
        };
    }).directive('uibAccordionTransclude', function () {
        function a() {
            return 'uib-accordion-header,data-uib-accordion-header,x-uib-accordion-header,uib\\:accordion-header,[uib-accordion-header],[data-uib-accordion-header],[x-uib-accordion-header]';
        }
        return {
            require: '^uibAccordionGroup',
            link: function (b, c, d, e) {
                b.$watch(function () {
                    return e[d.uibAccordionTransclude];
                }, function (b) {
                    if (b) {
                        var d = angular.element(c[0].querySelector(a()));
                        d.html(''), d.append(b);
                    }
                });
            }
        };
    }), angular.module('ui.bootstrap.alert', []).controller('UibAlertController', [
        '$scope',
        '$attrs',
        '$interpolate',
        '$timeout',
        function (a, b, c, d) {
            a.closeable = !!b.close;
            var e = angular.isDefined(b.dismissOnTimeout) ? c(b.dismissOnTimeout)(a.$parent) : null;
            e && d(function () {
                a.close();
            }, parseInt(e, 10));
        }
    ]).directive('uibAlert', function () {
        return {
            controller: 'UibAlertController',
            controllerAs: 'alert',
            templateUrl: function (a, b) {
                return b.templateUrl || 'uib/template/alert/alert.html';
            },
            transclude: !0,
            replace: !0,
            scope: {
                type: '@',
                close: '&'
            }
        };
    }), angular.module('ui.bootstrap.buttons', []).constant('uibButtonConfig', {
        activeClass: 'active',
        toggleEvent: 'click'
    }).controller('UibButtonsController', [
        'uibButtonConfig',
        function (a) {
            this.activeClass = a.activeClass || 'active', this.toggleEvent = a.toggleEvent || 'click';
        }
    ]).directive('uibBtnRadio', [
        '$parse',
        function (a) {
            return {
                require: [
                    'uibBtnRadio',
                    'ngModel'
                ],
                controller: 'UibButtonsController',
                controllerAs: 'buttons',
                link: function (b, c, d, e) {
                    var f = e[0], g = e[1], h = a(d.uibUncheckable);
                    c.find('input').css({ display: 'none' }), g.$render = function () {
                        c.toggleClass(f.activeClass, angular.equals(g.$modelValue, b.$eval(d.uibBtnRadio)));
                    }, c.on(f.toggleEvent, function () {
                        if (!d.disabled) {
                            var a = c.hasClass(f.activeClass);
                            a && !angular.isDefined(d.uncheckable) || b.$apply(function () {
                                g.$setViewValue(a ? null : b.$eval(d.uibBtnRadio)), g.$render();
                            });
                        }
                    }), d.uibUncheckable && b.$watch(h, function (a) {
                        d.$set('uncheckable', a ? '' : void 0);
                    });
                }
            };
        }
    ]).directive('uibBtnCheckbox', function () {
        return {
            require: [
                'uibBtnCheckbox',
                'ngModel'
            ],
            controller: 'UibButtonsController',
            controllerAs: 'button',
            link: function (a, b, c, d) {
                function e() {
                    return g(c.btnCheckboxTrue, !0);
                }
                function f() {
                    return g(c.btnCheckboxFalse, !1);
                }
                function g(b, c) {
                    return angular.isDefined(b) ? a.$eval(b) : c;
                }
                var h = d[0], i = d[1];
                b.find('input').css({ display: 'none' }), i.$render = function () {
                    b.toggleClass(h.activeClass, angular.equals(i.$modelValue, e()));
                }, b.on(h.toggleEvent, function () {
                    c.disabled || a.$apply(function () {
                        i.$setViewValue(b.hasClass(h.activeClass) ? f() : e()), i.$render();
                    });
                });
            }
        };
    }), angular.module('ui.bootstrap.carousel', []).controller('UibCarouselController', [
        '$scope',
        '$element',
        '$interval',
        '$timeout',
        '$animate',
        function (a, b, c, d, e) {
            function f() {
                for (; t.length;)
                    t.shift();
            }
            function g(a) {
                for (var b = 0; b < q.length; b++)
                    q[b].slide.active = b === a;
            }
            function h(c, d, i) {
                if (!u) {
                    if (angular.extend(c, { direction: i }), angular.extend(q[s].slide || {}, { direction: i }), e.enabled(b) && !a.$currentTransition && q[d].element && p.slides.length > 1) {
                        q[d].element.data(r, c.direction);
                        var j = p.getCurrentIndex();
                        angular.isNumber(j) && q[j].element && q[j].element.data(r, c.direction), a.$currentTransition = !0, e.on('addClass', q[d].element, function (b, c) {
                            if ('close' === c && (a.$currentTransition = null, e.off('addClass', b), t.length)) {
                                var d = t.pop().slide, g = d.index, i = g > p.getCurrentIndex() ? 'next' : 'prev';
                                f(), h(d, g, i);
                            }
                        });
                    }
                    a.active = c.index, s = c.index, g(d), l();
                }
            }
            function i(a) {
                for (var b = 0; b < q.length; b++)
                    if (q[b].slide === a)
                        return b;
            }
            function j() {
                n && (c.cancel(n), n = null);
            }
            function k(b) {
                b.length || (a.$currentTransition = null, f());
            }
            function l() {
                j();
                var b = +a.interval;
                !isNaN(b) && b > 0 && (n = c(m, b));
            }
            function m() {
                var b = +a.interval;
                o && !isNaN(b) && b > 0 && q.length ? a.next() : a.pause();
            }
            var n, o, p = this, q = p.slides = a.slides = [], r = 'uib-slideDirection', s = a.active, t = [], u = !1;
            p.addSlide = function (b, c) {
                q.push({
                    slide: b,
                    element: c
                }), q.sort(function (a, b) {
                    return +a.slide.index - +b.slide.index;
                }), (b.index === a.active || 1 === q.length && !angular.isNumber(a.active)) && (a.$currentTransition && (a.$currentTransition = null), s = b.index, a.active = b.index, g(s), p.select(q[i(b)]), 1 === q.length && a.play());
            }, p.getCurrentIndex = function () {
                for (var a = 0; a < q.length; a++)
                    if (q[a].slide.index === s)
                        return a;
            }, p.next = a.next = function () {
                var b = (p.getCurrentIndex() + 1) % q.length;
                return 0 === b && a.noWrap() ? void a.pause() : p.select(q[b], 'next');
            }, p.prev = a.prev = function () {
                var b = p.getCurrentIndex() - 1 < 0 ? q.length - 1 : p.getCurrentIndex() - 1;
                return a.noWrap() && b === q.length - 1 ? void a.pause() : p.select(q[b], 'prev');
            }, p.removeSlide = function (b) {
                var c = i(b), d = t.indexOf(q[c]);
                -1 !== d && t.splice(d, 1), q.splice(c, 1), q.length > 0 && s === c ? c >= q.length ? (s = q.length - 1, a.active = s, g(s), p.select(q[q.length - 1])) : (s = c, a.active = s, g(s), p.select(q[c])) : s > c && (s--, a.active = s), 0 === q.length && (s = null, a.active = null, f());
            }, p.select = a.select = function (b, c) {
                var d = i(b.slide);
                void 0 === c && (c = d > p.getCurrentIndex() ? 'next' : 'prev'), b.slide.index === s || a.$currentTransition ? b && b.slide.index !== s && a.$currentTransition && t.push(q[d]) : h(b.slide, d, c);
            }, a.indexOfSlide = function (a) {
                return +a.slide.index;
            }, a.isActive = function (b) {
                return a.active === b.slide.index;
            }, a.isPrevDisabled = function () {
                return 0 === a.active && a.noWrap();
            }, a.isNextDisabled = function () {
                return a.active === q.length - 1 && a.noWrap();
            }, a.pause = function () {
                a.noPause || (o = !1, j());
            }, a.play = function () {
                o || (o = !0, l());
            }, a.$on('$destroy', function () {
                u = !0, j();
            }), a.$watch('noTransition', function (a) {
                e.enabled(b, !a);
            }), a.$watch('interval', l), a.$watchCollection('slides', k), a.$watch('active', function (a) {
                if (angular.isNumber(a) && s !== a) {
                    for (var b = 0; b < q.length; b++)
                        if (q[b].slide.index === a) {
                            a = b;
                            break;
                        }
                    var c = q[a];
                    c && (g(a), p.select(q[a]), s = a);
                }
            });
        }
    ]).directive('uibCarousel', function () {
        return {
            transclude: !0,
            replace: !0,
            controller: 'UibCarouselController',
            controllerAs: 'carousel',
            templateUrl: function (a, b) {
                return b.templateUrl || 'uib/template/carousel/carousel.html';
            },
            scope: {
                active: '=',
                interval: '=',
                noTransition: '=',
                noPause: '=',
                noWrap: '&'
            }
        };
    }).directive('uibSlide', function () {
        return {
            require: '^uibCarousel',
            transclude: !0,
            replace: !0,
            templateUrl: function (a, b) {
                return b.templateUrl || 'uib/template/carousel/slide.html';
            },
            scope: {
                actual: '=?',
                index: '=?'
            },
            link: function (a, b, c, d) {
                d.addSlide(a, b), a.$on('$destroy', function () {
                    d.removeSlide(a);
                });
            }
        };
    }).animation('.item', [
        '$animateCss',
        function (a) {
            function b(a, b, c) {
                a.removeClass(b), c && c();
            }
            var c = 'uib-slideDirection';
            return {
                beforeAddClass: function (d, e, f) {
                    if ('active' === e) {
                        var g = !1, h = d.data(c), i = 'next' === h ? 'left' : 'right', j = b.bind(this, d, i + ' ' + h, f);
                        return d.addClass(h), a(d, { addClass: i }).start().done(j), function () {
                            g = !0;
                        };
                    }
                    f();
                },
                beforeRemoveClass: function (d, e, f) {
                    if ('active' === e) {
                        var g = !1, h = d.data(c), i = 'next' === h ? 'left' : 'right', j = b.bind(this, d, i, f);
                        return a(d, { addClass: i }).start().done(j), function () {
                            g = !0;
                        };
                    }
                    f();
                }
            };
        }
    ]), angular.module('ui.bootstrap.dateparser', []).service('uibDateParser', [
        '$log',
        '$locale',
        'dateFilter',
        'orderByFilter',
        function (a, b, c, d) {
            function e(a, b) {
                var c = [], e = a.split(''), f = a.indexOf('\'');
                if (f > -1) {
                    var g = !1;
                    a = a.split('');
                    for (var h = f; h < a.length; h++)
                        g ? ('\'' === a[h] && (h + 1 < a.length && '\'' === a[h + 1] ? (a[h + 1] = '$', e[h + 1] = '') : (e[h] = '', g = !1)), a[h] = '$') : '\'' === a[h] && (a[h] = '$', e[h] = '', g = !0);
                    a = a.join('');
                }
                return angular.forEach(n, function (d) {
                    var f = a.indexOf(d.key);
                    if (f > -1) {
                        a = a.split(''), e[f] = '(' + d.regex + ')', a[f] = '$';
                        for (var g = f + 1, h = f + d.key.length; h > g; g++)
                            e[g] = '', a[g] = '$';
                        a = a.join(''), c.push({
                            index: f,
                            key: d.key,
                            apply: d[b],
                            matcher: d.regex
                        });
                    }
                }), {
                    regex: new RegExp('^' + e.join('') + '$'),
                    map: d(c, 'index')
                };
            }
            function f(a, b, c) {
                return 1 > c ? !1 : 1 === b && c > 28 ? 29 === c && (a % 4 === 0 && a % 100 !== 0 || a % 400 === 0) : 3 === b || 5 === b || 8 === b || 10 === b ? 31 > c : !0;
            }
            function g(a) {
                return parseInt(a, 10);
            }
            function h(a, b) {
                return a && b ? l(a, b) : a;
            }
            function i(a, b) {
                return a && b ? l(a, b, !0) : a;
            }
            function j(a, b) {
                a = a.replace(/:/g, '');
                var c = Date.parse('Jan 01, 1970 00:00:00 ' + a) / 60000;
                return isNaN(c) ? b : c;
            }
            function k(a, b) {
                return a = new Date(a.getTime()), a.setMinutes(a.getMinutes() + b), a;
            }
            function l(a, b, c) {
                c = c ? -1 : 1;
                var d = a.getTimezoneOffset(), e = j(b, d);
                return k(a, c * (e - d));
            }
            var m, n, o = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
            this.init = function () {
                m = b.id, this.parsers = {}, this.formatters = {}, n = [
                    {
                        key: 'yyyy',
                        regex: '\\d{4}',
                        apply: function (a) {
                            this.year = +a;
                        },
                        formatter: function (a) {
                            var b = new Date();
                            return b.setFullYear(Math.abs(a.getFullYear())), c(b, 'yyyy');
                        }
                    },
                    {
                        key: 'yy',
                        regex: '\\d{2}',
                        apply: function (a) {
                            a = +a, this.year = 69 > a ? a + 2000 : a + 1900;
                        },
                        formatter: function (a) {
                            var b = new Date();
                            return b.setFullYear(Math.abs(a.getFullYear())), c(b, 'yy');
                        }
                    },
                    {
                        key: 'y',
                        regex: '\\d{1,4}',
                        apply: function (a) {
                            this.year = +a;
                        },
                        formatter: function (a) {
                            var b = new Date();
                            return b.setFullYear(Math.abs(a.getFullYear())), c(b, 'y');
                        }
                    },
                    {
                        key: 'M!',
                        regex: '0?[1-9]|1[0-2]',
                        apply: function (a) {
                            this.month = a - 1;
                        },
                        formatter: function (a) {
                            var b = a.getMonth();
                            return /^[0-9]$/.test(b) ? c(a, 'MM') : c(a, 'M');
                        }
                    },
                    {
                        key: 'MMMM',
                        regex: b.DATETIME_FORMATS.MONTH.join('|'),
                        apply: function (a) {
                            this.month = b.DATETIME_FORMATS.MONTH.indexOf(a);
                        },
                        formatter: function (a) {
                            return c(a, 'MMMM');
                        }
                    },
                    {
                        key: 'MMM',
                        regex: b.DATETIME_FORMATS.SHORTMONTH.join('|'),
                        apply: function (a) {
                            this.month = b.DATETIME_FORMATS.SHORTMONTH.indexOf(a);
                        },
                        formatter: function (a) {
                            return c(a, 'MMM');
                        }
                    },
                    {
                        key: 'MM',
                        regex: '0[1-9]|1[0-2]',
                        apply: function (a) {
                            this.month = a - 1;
                        },
                        formatter: function (a) {
                            return c(a, 'MM');
                        }
                    },
                    {
                        key: 'M',
                        regex: '[1-9]|1[0-2]',
                        apply: function (a) {
                            this.month = a - 1;
                        },
                        formatter: function (a) {
                            return c(a, 'M');
                        }
                    },
                    {
                        key: 'd!',
                        regex: '[0-2]?[0-9]{1}|3[0-1]{1}',
                        apply: function (a) {
                            this.date = +a;
                        },
                        formatter: function (a) {
                            var b = a.getDate();
                            return /^[1-9]$/.test(b) ? c(a, 'dd') : c(a, 'd');
                        }
                    },
                    {
                        key: 'dd',
                        regex: '[0-2][0-9]{1}|3[0-1]{1}',
                        apply: function (a) {
                            this.date = +a;
                        },
                        formatter: function (a) {
                            return c(a, 'dd');
                        }
                    },
                    {
                        key: 'd',
                        regex: '[1-2]?[0-9]{1}|3[0-1]{1}',
                        apply: function (a) {
                            this.date = +a;
                        },
                        formatter: function (a) {
                            return c(a, 'd');
                        }
                    },
                    {
                        key: 'EEEE',
                        regex: b.DATETIME_FORMATS.DAY.join('|'),
                        formatter: function (a) {
                            return c(a, 'EEEE');
                        }
                    },
                    {
                        key: 'EEE',
                        regex: b.DATETIME_FORMATS.SHORTDAY.join('|'),
                        formatter: function (a) {
                            return c(a, 'EEE');
                        }
                    },
                    {
                        key: 'HH',
                        regex: '(?:0|1)[0-9]|2[0-3]',
                        apply: function (a) {
                            this.hours = +a;
                        },
                        formatter: function (a) {
                            return c(a, 'HH');
                        }
                    },
                    {
                        key: 'hh',
                        regex: '0[0-9]|1[0-2]',
                        apply: function (a) {
                            this.hours = +a;
                        },
                        formatter: function (a) {
                            return c(a, 'hh');
                        }
                    },
                    {
                        key: 'H',
                        regex: '1?[0-9]|2[0-3]',
                        apply: function (a) {
                            this.hours = +a;
                        },
                        formatter: function (a) {
                            return c(a, 'H');
                        }
                    },
                    {
                        key: 'h',
                        regex: '[0-9]|1[0-2]',
                        apply: function (a) {
                            this.hours = +a;
                        },
                        formatter: function (a) {
                            return c(a, 'h');
                        }
                    },
                    {
                        key: 'mm',
                        regex: '[0-5][0-9]',
                        apply: function (a) {
                            this.minutes = +a;
                        },
                        formatter: function (a) {
                            return c(a, 'mm');
                        }
                    },
                    {
                        key: 'm',
                        regex: '[0-9]|[1-5][0-9]',
                        apply: function (a) {
                            this.minutes = +a;
                        },
                        formatter: function (a) {
                            return c(a, 'm');
                        }
                    },
                    {
                        key: 'sss',
                        regex: '[0-9][0-9][0-9]',
                        apply: function (a) {
                            this.milliseconds = +a;
                        },
                        formatter: function (a) {
                            return c(a, 'sss');
                        }
                    },
                    {
                        key: 'ss',
                        regex: '[0-5][0-9]',
                        apply: function (a) {
                            this.seconds = +a;
                        },
                        formatter: function (a) {
                            return c(a, 'ss');
                        }
                    },
                    {
                        key: 's',
                        regex: '[0-9]|[1-5][0-9]',
                        apply: function (a) {
                            this.seconds = +a;
                        },
                        formatter: function (a) {
                            return c(a, 's');
                        }
                    },
                    {
                        key: 'a',
                        regex: b.DATETIME_FORMATS.AMPMS.join('|'),
                        apply: function (a) {
                            12 === this.hours && (this.hours = 0), 'PM' === a && (this.hours += 12);
                        },
                        formatter: function (a) {
                            return c(a, 'a');
                        }
                    },
                    {
                        key: 'Z',
                        regex: '[+-]\\d{4}',
                        apply: function (a) {
                            var b = a.match(/([+-])(\d{2})(\d{2})/), c = b[1], d = b[2], e = b[3];
                            this.hours += g(c + d), this.minutes += g(c + e);
                        },
                        formatter: function (a) {
                            return c(a, 'Z');
                        }
                    },
                    {
                        key: 'ww',
                        regex: '[0-4][0-9]|5[0-3]',
                        formatter: function (a) {
                            return c(a, 'ww');
                        }
                    },
                    {
                        key: 'w',
                        regex: '[0-9]|[1-4][0-9]|5[0-3]',
                        formatter: function (a) {
                            return c(a, 'w');
                        }
                    },
                    {
                        key: 'GGGG',
                        regex: b.DATETIME_FORMATS.ERANAMES.join('|').replace(/\s/g, '\\s'),
                        formatter: function (a) {
                            return c(a, 'GGGG');
                        }
                    },
                    {
                        key: 'GGG',
                        regex: b.DATETIME_FORMATS.ERAS.join('|'),
                        formatter: function (a) {
                            return c(a, 'GGG');
                        }
                    },
                    {
                        key: 'GG',
                        regex: b.DATETIME_FORMATS.ERAS.join('|'),
                        formatter: function (a) {
                            return c(a, 'GG');
                        }
                    },
                    {
                        key: 'G',
                        regex: b.DATETIME_FORMATS.ERAS.join('|'),
                        formatter: function (a) {
                            return c(a, 'G');
                        }
                    }
                ];
            }, this.init(), this.filter = function (a, c) {
                if (!angular.isDate(a) || isNaN(a) || !c)
                    return '';
                c = b.DATETIME_FORMATS[c] || c, b.id !== m && this.init(), this.formatters[c] || (this.formatters[c] = e(c, 'formatter'));
                var d = this.formatters[c], f = d.map, g = c;
                return f.reduce(function (b, c, d) {
                    var e = g.match(new RegExp('(.*)' + c.key));
                    e && angular.isString(e[1]) && (b += e[1], g = g.replace(e[1] + c.key, ''));
                    var h = d === f.length - 1 ? g : '';
                    return c.apply ? b + c.apply.call(null, a) + h : b + h;
                }, '');
            }, this.parse = function (c, d, g) {
                if (!angular.isString(c) || !d)
                    return c;
                d = b.DATETIME_FORMATS[d] || d, d = d.replace(o, '\\$&'), b.id !== m && this.init(), this.parsers[d] || (this.parsers[d] = e(d, 'apply'));
                var h = this.parsers[d], i = h.regex, j = h.map, k = c.match(i), l = !1;
                if (k && k.length) {
                    var n, p;
                    angular.isDate(g) && !isNaN(g.getTime()) ? n = {
                        year: g.getFullYear(),
                        month: g.getMonth(),
                        date: g.getDate(),
                        hours: g.getHours(),
                        minutes: g.getMinutes(),
                        seconds: g.getSeconds(),
                        milliseconds: g.getMilliseconds()
                    } : (g && a.warn('dateparser:', 'baseDate is not a valid date'), n = {
                        year: 1900,
                        month: 0,
                        date: 1,
                        hours: 0,
                        minutes: 0,
                        seconds: 0,
                        milliseconds: 0
                    });
                    for (var q = 1, r = k.length; r > q; q++) {
                        var s = j[q - 1];
                        'Z' === s.matcher && (l = !0), s.apply && s.apply.call(n, k[q]);
                    }
                    var t = l ? Date.prototype.setUTCFullYear : Date.prototype.setFullYear, u = l ? Date.prototype.setUTCHours : Date.prototype.setHours;
                    return f(n.year, n.month, n.date) && (!angular.isDate(g) || isNaN(g.getTime()) || l ? (p = new Date(0), t.call(p, n.year, n.month, n.date), u.call(p, n.hours || 0, n.minutes || 0, n.seconds || 0, n.milliseconds || 0)) : (p = new Date(g), t.call(p, n.year, n.month, n.date), u.call(p, n.hours, n.minutes, n.seconds, n.milliseconds))), p;
                }
            }, this.toTimezone = h, this.fromTimezone = i, this.timezoneToOffset = j, this.addDateMinutes = k, this.convertTimezoneToLocal = l;
        }
    ]), angular.module('ui.bootstrap.isClass', []).directive('uibIsClass', [
        '$animate',
        function (a) {
            var b = /^\s*([\s\S]+?)\s+on\s+([\s\S]+?)\s*$/, c = /^\s*([\s\S]+?)\s+for\s+([\s\S]+?)\s*$/;
            return {
                restrict: 'A',
                compile: function (d, e) {
                    function f(a, b, c) {
                        i.push(a), j.push({
                            scope: a,
                            element: b
                        }), o.forEach(function (b, c) {
                            g(b, a);
                        }), a.$on('$destroy', h);
                    }
                    function g(b, d) {
                        var e = b.match(c), f = d.$eval(e[1]), g = e[2], h = k[b];
                        if (!h) {
                            var i = function (b) {
                                var c = null;
                                j.some(function (a) {
                                    var d = a.scope.$eval(m);
                                    return d === b ? (c = a, !0) : void 0;
                                }), h.lastActivated !== c && (h.lastActivated && a.removeClass(h.lastActivated.element, f), c && a.addClass(c.element, f), h.lastActivated = c);
                            };
                            k[b] = h = {
                                lastActivated: null,
                                scope: d,
                                watchFn: i,
                                compareWithExp: g,
                                watcher: d.$watch(g, i)
                            };
                        }
                        h.watchFn(d.$eval(g));
                    }
                    function h(a) {
                        var b = a.targetScope, c = i.indexOf(b);
                        if (i.splice(c, 1), j.splice(c, 1), i.length) {
                            var d = i[0];
                            angular.forEach(k, function (a) {
                                a.scope === b && (a.watcher = d.$watch(a.compareWithExp, a.watchFn), a.scope = d);
                            });
                        } else
                            k = {};
                    }
                    var i = [], j = [], k = {}, l = e.uibIsClass.match(b), m = l[2], n = l[1], o = n.split(',');
                    return f;
                }
            };
        }
    ]), angular.module('ui.bootstrap.datepicker', [
        'ui.bootstrap.dateparser',
        'ui.bootstrap.isClass'
    ]).value('$datepickerSuppressError', !1).value('$datepickerLiteralWarning', !0).constant('uibDatepickerConfig', {
        datepickerMode: 'day',
        formatDay: 'dd',
        formatMonth: 'MMMM',
        formatYear: 'yyyy',
        formatDayHeader: 'EEE',
        formatDayTitle: 'MMMM yyyy',
        formatMonthTitle: 'yyyy',
        maxDate: null,
        maxMode: 'year',
        minDate: null,
        minMode: 'day',
        ngModelOptions: {},
        shortcutPropagation: !1,
        showWeeks: !0,
        yearColumns: 5,
        yearRows: 4
    }).controller('UibDatepickerController', [
        '$scope',
        '$attrs',
        '$parse',
        '$interpolate',
        '$locale',
        '$log',
        'dateFilter',
        'uibDatepickerConfig',
        '$datepickerLiteralWarning',
        '$datepickerSuppressError',
        'uibDateParser',
        function (a, b, c, d, e, f, g, h, i, j, k) {
            function l(b) {
                a.datepickerMode = b, a.datepickerOptions.datepickerMode = b;
            }
            var m = this, n = { $setViewValue: angular.noop }, o = {}, p = [];
            !!b.datepickerOptions;
            a.datepickerOptions || (a.datepickerOptions = {}), this.modes = [
                'day',
                'month',
                'year'
            ], [
                'customClass',
                'dateDisabled',
                'datepickerMode',
                'formatDay',
                'formatDayHeader',
                'formatDayTitle',
                'formatMonth',
                'formatMonthTitle',
                'formatYear',
                'maxDate',
                'maxMode',
                'minDate',
                'minMode',
                'showWeeks',
                'shortcutPropagation',
                'startingDay',
                'yearColumns',
                'yearRows'
            ].forEach(function (b) {
                switch (b) {
                case 'customClass':
                case 'dateDisabled':
                    a[b] = a.datepickerOptions[b] || angular.noop;
                    break;
                case 'datepickerMode':
                    a.datepickerMode = angular.isDefined(a.datepickerOptions.datepickerMode) ? a.datepickerOptions.datepickerMode : h.datepickerMode;
                    break;
                case 'formatDay':
                case 'formatDayHeader':
                case 'formatDayTitle':
                case 'formatMonth':
                case 'formatMonthTitle':
                case 'formatYear':
                    m[b] = angular.isDefined(a.datepickerOptions[b]) ? d(a.datepickerOptions[b])(a.$parent) : h[b];
                    break;
                case 'showWeeks':
                case 'shortcutPropagation':
                case 'yearColumns':
                case 'yearRows':
                    m[b] = angular.isDefined(a.datepickerOptions[b]) ? a.datepickerOptions[b] : h[b];
                    break;
                case 'startingDay':
                    angular.isDefined(a.datepickerOptions.startingDay) ? m.startingDay = a.datepickerOptions.startingDay : angular.isNumber(h.startingDay) ? m.startingDay = h.startingDay : m.startingDay = (e.DATETIME_FORMATS.FIRSTDAYOFWEEK + 8) % 7;
                    break;
                case 'maxDate':
                case 'minDate':
                    a.$watch('datepickerOptions.' + b, function (a) {
                        a ? angular.isDate(a) ? m[b] = k.fromTimezone(new Date(a), o.timezone) : (i && f.warn('Literal date support has been deprecated, please switch to date object usage'), m[b] = new Date(g(a, 'medium'))) : m[b] = h[b] ? k.fromTimezone(new Date(h[b]), o.timezone) : null, m.refreshView();
                    });
                    break;
                case 'maxMode':
                case 'minMode':
                    a.datepickerOptions[b] ? a.$watch(function () {
                        return a.datepickerOptions[b];
                    }, function (c) {
                        m[b] = a[b] = angular.isDefined(c) ? c : datepickerOptions[b], ('minMode' === b && m.modes.indexOf(a.datepickerOptions.datepickerMode) < m.modes.indexOf(m[b]) || 'maxMode' === b && m.modes.indexOf(a.datepickerOptions.datepickerMode) > m.modes.indexOf(m[b])) && (a.datepickerMode = m[b], a.datepickerOptions.datepickerMode = m[b]);
                    }) : m[b] = a[b] = h[b] || null;
                }
            }), a.uniqueId = 'datepicker-' + a.$id + '-' + Math.floor(10000 * Math.random()), a.disabled = angular.isDefined(b.disabled) || !1, angular.isDefined(b.ngDisabled) && p.push(a.$parent.$watch(b.ngDisabled, function (b) {
                a.disabled = b, m.refreshView();
            })), a.isActive = function (b) {
                return 0 === m.compare(b.date, m.activeDate) ? (a.activeDateId = b.uid, !0) : !1;
            }, this.init = function (b) {
                n = b, o = b.$options || h.ngModelOptions, a.datepickerOptions.initDate ? (m.activeDate = k.fromTimezone(a.datepickerOptions.initDate, o.timezone) || new Date(), a.$watch('datepickerOptions.initDate', function (a) {
                    a && (n.$isEmpty(n.$modelValue) || n.$invalid) && (m.activeDate = k.fromTimezone(a, o.timezone), m.refreshView());
                })) : m.activeDate = new Date();
                var c = n.$modelValue ? new Date(n.$modelValue) : new Date();
                this.activeDate = isNaN(c) ? k.fromTimezone(new Date(), o.timezone) : k.fromTimezone(c, o.timezone), n.$render = function () {
                    m.render();
                };
            }, this.render = function () {
                if (n.$viewValue) {
                    var a = new Date(n.$viewValue), b = !isNaN(a);
                    b ? this.activeDate = k.fromTimezone(a, o.timezone) : j || f.error('Datepicker directive: "ng-model" value must be a Date object');
                }
                this.refreshView();
            }, this.refreshView = function () {
                if (this.element) {
                    a.selectedDt = null, this._refreshView(), a.activeDt && (a.activeDateId = a.activeDt.uid);
                    var b = n.$viewValue ? new Date(n.$viewValue) : null;
                    b = k.fromTimezone(b, o.timezone), n.$setValidity('dateDisabled', !b || this.element && !this.isDisabled(b));
                }
            }, this.createDateObject = function (b, c) {
                var d = n.$viewValue ? new Date(n.$viewValue) : null;
                d = k.fromTimezone(d, o.timezone);
                var e = new Date();
                e = k.fromTimezone(e, o.timezone);
                var f = this.compare(b, e), g = {
                        date: b,
                        label: k.filter(b, c),
                        selected: d && 0 === this.compare(b, d),
                        disabled: this.isDisabled(b),
                        past: 0 > f,
                        current: 0 === f,
                        future: f > 0,
                        customClass: this.customClass(b) || null
                    };
                return d && 0 === this.compare(b, d) && (a.selectedDt = g), m.activeDate && 0 === this.compare(g.date, m.activeDate) && (a.activeDt = g), g;
            }, this.isDisabled = function (b) {
                return a.disabled || this.minDate && this.compare(b, this.minDate) < 0 || this.maxDate && this.compare(b, this.maxDate) > 0 || a.dateDisabled && a.dateDisabled({
                    date: b,
                    mode: a.datepickerMode
                });
            }, this.customClass = function (b) {
                return a.customClass({
                    date: b,
                    mode: a.datepickerMode
                });
            }, this.split = function (a, b) {
                for (var c = []; a.length > 0;)
                    c.push(a.splice(0, b));
                return c;
            }, a.select = function (b) {
                if (a.datepickerMode === m.minMode) {
                    var c = n.$viewValue ? k.fromTimezone(new Date(n.$viewValue), o.timezone) : new Date(0, 0, 0, 0, 0, 0, 0);
                    c.setFullYear(b.getFullYear(), b.getMonth(), b.getDate()), c = k.toTimezone(c, o.timezone), n.$setViewValue(c), n.$render();
                } else
                    m.activeDate = b, l(m.modes[m.modes.indexOf(a.datepickerMode) - 1]), a.$emit('uib:datepicker.mode');
                a.$broadcast('uib:datepicker.focus');
            }, a.move = function (a) {
                var b = m.activeDate.getFullYear() + a * (m.step.years || 0), c = m.activeDate.getMonth() + a * (m.step.months || 0);
                m.activeDate.setFullYear(b, c, 1), m.refreshView();
            }, a.toggleMode = function (b) {
                b = b || 1, a.datepickerMode === m.maxMode && 1 === b || a.datepickerMode === m.minMode && -1 === b || (l(m.modes[m.modes.indexOf(a.datepickerMode) + b]), a.$emit('uib:datepicker.mode'));
            }, a.keys = {
                13: 'enter',
                32: 'space',
                33: 'pageup',
                34: 'pagedown',
                35: 'end',
                36: 'home',
                37: 'left',
                38: 'up',
                39: 'right',
                40: 'down'
            };
            var q = function () {
                m.element[0].focus();
            };
            a.$on('uib:datepicker.focus', q), a.keydown = function (b) {
                var c = a.keys[b.which];
                if (c && !b.shiftKey && !b.altKey && !a.disabled)
                    if (b.preventDefault(), m.shortcutPropagation || b.stopPropagation(), 'enter' === c || 'space' === c) {
                        if (m.isDisabled(m.activeDate))
                            return;
                        a.select(m.activeDate);
                    } else
                        !b.ctrlKey || 'up' !== c && 'down' !== c ? (m.handleKeyDown(c, b), m.refreshView()) : a.toggleMode('up' === c ? 1 : -1);
            }, a.$on('$destroy', function () {
                for (; p.length;)
                    p.shift()();
            });
        }
    ]).controller('UibDaypickerController', [
        '$scope',
        '$element',
        'dateFilter',
        function (a, b, c) {
            function d(a, b) {
                return 1 !== b || a % 4 !== 0 || a % 100 === 0 && a % 400 !== 0 ? f[b] : 29;
            }
            function e(a) {
                var b = new Date(a);
                b.setDate(b.getDate() + 4 - (b.getDay() || 7));
                var c = b.getTime();
                return b.setMonth(0), b.setDate(1), Math.floor(Math.round((c - b) / 86400000) / 7) + 1;
            }
            var f = [
                31,
                28,
                31,
                30,
                31,
                30,
                31,
                31,
                30,
                31,
                30,
                31
            ];
            this.step = { months: 1 }, this.element = b, this.init = function (b) {
                angular.extend(b, this), a.showWeeks = b.showWeeks, b.refreshView();
            }, this.getDates = function (a, b) {
                for (var c, d = new Array(b), e = new Date(a), f = 0; b > f;)
                    c = new Date(e), d[f++] = c, e.setDate(e.getDate() + 1);
                return d;
            }, this._refreshView = function () {
                var b = this.activeDate.getFullYear(), d = this.activeDate.getMonth(), f = new Date(this.activeDate);
                f.setFullYear(b, d, 1);
                var g = this.startingDay - f.getDay(), h = g > 0 ? 7 - g : -g, i = new Date(f);
                h > 0 && i.setDate(-h + 1);
                for (var j = this.getDates(i, 42), k = 0; 42 > k; k++)
                    j[k] = angular.extend(this.createDateObject(j[k], this.formatDay), {
                        secondary: j[k].getMonth() !== d,
                        uid: a.uniqueId + '-' + k
                    });
                a.labels = new Array(7);
                for (var l = 0; 7 > l; l++)
                    a.labels[l] = {
                        abbr: c(j[l].date, this.formatDayHeader),
                        full: c(j[l].date, 'EEEE')
                    };
                if (a.title = c(this.activeDate, this.formatDayTitle), a.rows = this.split(j, 7), a.showWeeks) {
                    a.weekNumbers = [];
                    for (var m = (11 - this.startingDay) % 7, n = a.rows.length, o = 0; n > o; o++)
                        a.weekNumbers.push(e(a.rows[o][m].date));
                }
            }, this.compare = function (a, b) {
                var c = new Date(a.getFullYear(), a.getMonth(), a.getDate()), d = new Date(b.getFullYear(), b.getMonth(), b.getDate());
                return c.setFullYear(a.getFullYear()), d.setFullYear(b.getFullYear()), c - d;
            }, this.handleKeyDown = function (a, b) {
                var c = this.activeDate.getDate();
                if ('left' === a)
                    c -= 1;
                else if ('up' === a)
                    c -= 7;
                else if ('right' === a)
                    c += 1;
                else if ('down' === a)
                    c += 7;
                else if ('pageup' === a || 'pagedown' === a) {
                    var e = this.activeDate.getMonth() + ('pageup' === a ? -1 : 1);
                    this.activeDate.setMonth(e, 1), c = Math.min(d(this.activeDate.getFullYear(), this.activeDate.getMonth()), c);
                } else
                    'home' === a ? c = 1 : 'end' === a && (c = d(this.activeDate.getFullYear(), this.activeDate.getMonth()));
                this.activeDate.setDate(c);
            };
        }
    ]).controller('UibMonthpickerController', [
        '$scope',
        '$element',
        'dateFilter',
        function (a, b, c) {
            this.step = { years: 1 }, this.element = b, this.init = function (a) {
                angular.extend(a, this), a.refreshView();
            }, this._refreshView = function () {
                for (var b, d = new Array(12), e = this.activeDate.getFullYear(), f = 0; 12 > f; f++)
                    b = new Date(this.activeDate), b.setFullYear(e, f, 1), d[f] = angular.extend(this.createDateObject(b, this.formatMonth), { uid: a.uniqueId + '-' + f });
                a.title = c(this.activeDate, this.formatMonthTitle), a.rows = this.split(d, 3);
            }, this.compare = function (a, b) {
                var c = new Date(a.getFullYear(), a.getMonth()), d = new Date(b.getFullYear(), b.getMonth());
                return c.setFullYear(a.getFullYear()), d.setFullYear(b.getFullYear()), c - d;
            }, this.handleKeyDown = function (a, b) {
                var c = this.activeDate.getMonth();
                if ('left' === a)
                    c -= 1;
                else if ('up' === a)
                    c -= 3;
                else if ('right' === a)
                    c += 1;
                else if ('down' === a)
                    c += 3;
                else if ('pageup' === a || 'pagedown' === a) {
                    var d = this.activeDate.getFullYear() + ('pageup' === a ? -1 : 1);
                    this.activeDate.setFullYear(d);
                } else
                    'home' === a ? c = 0 : 'end' === a && (c = 11);
                this.activeDate.setMonth(c);
            };
        }
    ]).controller('UibYearpickerController', [
        '$scope',
        '$element',
        'dateFilter',
        function (a, b, c) {
            function d(a) {
                return parseInt((a - 1) / f, 10) * f + 1;
            }
            var e, f;
            this.element = b, this.yearpickerInit = function () {
                e = this.yearColumns, f = this.yearRows * e, this.step = { years: f };
            }, this._refreshView = function () {
                for (var b, c = new Array(f), g = 0, h = d(this.activeDate.getFullYear()); f > g; g++)
                    b = new Date(this.activeDate), b.setFullYear(h + g, 0, 1), c[g] = angular.extend(this.createDateObject(b, this.formatYear), { uid: a.uniqueId + '-' + g });
                a.title = [
                    c[0].label,
                    c[f - 1].label
                ].join(' - '), a.rows = this.split(c, e), a.columns = e;
            }, this.compare = function (a, b) {
                return a.getFullYear() - b.getFullYear();
            }, this.handleKeyDown = function (a, b) {
                var c = this.activeDate.getFullYear();
                'left' === a ? c -= 1 : 'up' === a ? c -= e : 'right' === a ? c += 1 : 'down' === a ? c += e : 'pageup' === a || 'pagedown' === a ? c += ('pageup' === a ? -1 : 1) * f : 'home' === a ? c = d(this.activeDate.getFullYear()) : 'end' === a && (c = d(this.activeDate.getFullYear()) + f - 1), this.activeDate.setFullYear(c);
            };
        }
    ]).directive('uibDatepicker', function () {
        return {
            replace: !0,
            templateUrl: function (a, b) {
                return b.templateUrl || 'uib/template/datepicker/datepicker.html';
            },
            scope: { datepickerOptions: '=?' },
            require: [
                'uibDatepicker',
                '^ngModel'
            ],
            controller: 'UibDatepickerController',
            controllerAs: 'datepicker',
            link: function (a, b, c, d) {
                var e = d[0], f = d[1];
                e.init(f);
            }
        };
    }).directive('uibDaypicker', function () {
        return {
            replace: !0,
            templateUrl: function (a, b) {
                return b.templateUrl || 'uib/template/datepicker/day.html';
            },
            require: [
                '^uibDatepicker',
                'uibDaypicker'
            ],
            controller: 'UibDaypickerController',
            link: function (a, b, c, d) {
                var e = d[0], f = d[1];
                f.init(e);
            }
        };
    }).directive('uibMonthpicker', function () {
        return {
            replace: !0,
            templateUrl: function (a, b) {
                return b.templateUrl || 'uib/template/datepicker/month.html';
            },
            require: [
                '^uibDatepicker',
                'uibMonthpicker'
            ],
            controller: 'UibMonthpickerController',
            link: function (a, b, c, d) {
                var e = d[0], f = d[1];
                f.init(e);
            }
        };
    }).directive('uibYearpicker', function () {
        return {
            replace: !0,
            templateUrl: function (a, b) {
                return b.templateUrl || 'uib/template/datepicker/year.html';
            },
            require: [
                '^uibDatepicker',
                'uibYearpicker'
            ],
            controller: 'UibYearpickerController',
            link: function (a, b, c, d) {
                var e = d[0];
                angular.extend(e, d[1]), e.yearpickerInit(), e.refreshView();
            }
        };
    }), angular.module('ui.bootstrap.position', []).factory('$uibPosition', [
        '$document',
        '$window',
        function (a, b) {
            var c, d, e = {
                    normal: /(auto|scroll)/,
                    hidden: /(auto|scroll|hidden)/
                }, f = {
                    auto: /\s?auto?\s?/i,
                    primary: /^(top|bottom|left|right)$/,
                    secondary: /^(top|bottom|left|right|center)$/,
                    vertical: /^(top|bottom)$/
                }, g = /(HTML|BODY)/;
            return {
                getRawNode: function (a) {
                    return a.nodeName ? a : a[0] || a;
                },
                parseStyle: function (a) {
                    return a = parseFloat(a), isFinite(a) ? a : 0;
                },
                offsetParent: function (c) {
                    function d(a) {
                        return 'static' === (b.getComputedStyle(a).position || 'static');
                    }
                    c = this.getRawNode(c);
                    for (var e = c.offsetParent || a[0].documentElement; e && e !== a[0].documentElement && d(e);)
                        e = e.offsetParent;
                    return e || a[0].documentElement;
                },
                scrollbarWidth: function (e) {
                    if (e) {
                        if (angular.isUndefined(d)) {
                            var f = a.find('body');
                            f.addClass('uib-position-body-scrollbar-measure'), d = b.innerWidth - f[0].clientWidth, d = isFinite(d) ? d : 0, f.removeClass('uib-position-body-scrollbar-measure');
                        }
                        return d;
                    }
                    if (angular.isUndefined(c)) {
                        var g = angular.element('<div class="uib-position-scrollbar-measure"></div>');
                        a.find('body').append(g), c = g[0].offsetWidth - g[0].clientWidth, c = isFinite(c) ? c : 0, g.remove();
                    }
                    return c;
                },
                scrollbarPadding: function (a) {
                    a = this.getRawNode(a);
                    var c = b.getComputedStyle(a), d = this.parseStyle(c.paddingRight), e = this.parseStyle(c.paddingBottom), f = this.scrollParent(a, !1, !0), h = this.scrollbarWidth(f, g.test(f.tagName));
                    return {
                        scrollbarWidth: h,
                        widthOverflow: f.scrollWidth > f.clientWidth,
                        right: d + h,
                        originalRight: d,
                        heightOverflow: f.scrollHeight > f.clientHeight,
                        bottom: e + h,
                        originalBottom: e
                    };
                },
                isScrollable: function (a, c) {
                    a = this.getRawNode(a);
                    var d = c ? e.hidden : e.normal, f = b.getComputedStyle(a);
                    return d.test(f.overflow + f.overflowY + f.overflowX);
                },
                scrollParent: function (c, d, f) {
                    c = this.getRawNode(c);
                    var g = d ? e.hidden : e.normal, h = a[0].documentElement, i = b.getComputedStyle(c);
                    if (f && g.test(i.overflow + i.overflowY + i.overflowX))
                        return c;
                    var j = 'absolute' === i.position, k = c.parentElement || h;
                    if (k === h || 'fixed' === i.position)
                        return h;
                    for (; k.parentElement && k !== h;) {
                        var l = b.getComputedStyle(k);
                        if (j && 'static' !== l.position && (j = !1), !j && g.test(l.overflow + l.overflowY + l.overflowX))
                            break;
                        k = k.parentElement;
                    }
                    return k;
                },
                position: function (c, d) {
                    c = this.getRawNode(c);
                    var e = this.offset(c);
                    if (d) {
                        var f = b.getComputedStyle(c);
                        e.top -= this.parseStyle(f.marginTop), e.left -= this.parseStyle(f.marginLeft);
                    }
                    var g = this.offsetParent(c), h = {
                            top: 0,
                            left: 0
                        };
                    return g !== a[0].documentElement && (h = this.offset(g), h.top += g.clientTop - g.scrollTop, h.left += g.clientLeft - g.scrollLeft), {
                        width: Math.round(angular.isNumber(e.width) ? e.width : c.offsetWidth),
                        height: Math.round(angular.isNumber(e.height) ? e.height : c.offsetHeight),
                        top: Math.round(e.top - h.top),
                        left: Math.round(e.left - h.left)
                    };
                },
                offset: function (c) {
                    c = this.getRawNode(c);
                    var d = c.getBoundingClientRect();
                    return {
                        width: Math.round(angular.isNumber(d.width) ? d.width : c.offsetWidth),
                        height: Math.round(angular.isNumber(d.height) ? d.height : c.offsetHeight),
                        top: Math.round(d.top + (b.pageYOffset || a[0].documentElement.scrollTop)),
                        left: Math.round(d.left + (b.pageXOffset || a[0].documentElement.scrollLeft))
                    };
                },
                viewportOffset: function (c, d, e) {
                    c = this.getRawNode(c), e = e !== !1;
                    var f = c.getBoundingClientRect(), g = {
                            top: 0,
                            left: 0,
                            bottom: 0,
                            right: 0
                        }, h = d ? a[0].documentElement : this.scrollParent(c), i = h.getBoundingClientRect();
                    if (g.top = i.top + h.clientTop, g.left = i.left + h.clientLeft, h === a[0].documentElement && (g.top += b.pageYOffset, g.left += b.pageXOffset), g.bottom = g.top + h.clientHeight, g.right = g.left + h.clientWidth, e) {
                        var j = b.getComputedStyle(h);
                        g.top += this.parseStyle(j.paddingTop), g.bottom -= this.parseStyle(j.paddingBottom), g.left += this.parseStyle(j.paddingLeft), g.right -= this.parseStyle(j.paddingRight);
                    }
                    return {
                        top: Math.round(f.top - g.top),
                        bottom: Math.round(g.bottom - f.bottom),
                        left: Math.round(f.left - g.left),
                        right: Math.round(g.right - f.right)
                    };
                },
                parsePlacement: function (a) {
                    var b = f.auto.test(a);
                    return b && (a = a.replace(f.auto, '')), a = a.split('-'), a[0] = a[0] || 'top', f.primary.test(a[0]) || (a[0] = 'top'), a[1] = a[1] || 'center', f.secondary.test(a[1]) || (a[1] = 'center'), b ? a[2] = !0 : a[2] = !1, a;
                },
                positionElements: function (a, c, d, e) {
                    a = this.getRawNode(a), c = this.getRawNode(c);
                    var g = angular.isDefined(c.offsetWidth) ? c.offsetWidth : c.prop('offsetWidth'), h = angular.isDefined(c.offsetHeight) ? c.offsetHeight : c.prop('offsetHeight');
                    d = this.parsePlacement(d);
                    var i = e ? this.offset(a) : this.position(a), j = {
                            top: 0,
                            left: 0,
                            placement: ''
                        };
                    if (d[2]) {
                        var k = this.viewportOffset(a, e), l = b.getComputedStyle(c), m = {
                                width: g + Math.round(Math.abs(this.parseStyle(l.marginLeft) + this.parseStyle(l.marginRight))),
                                height: h + Math.round(Math.abs(this.parseStyle(l.marginTop) + this.parseStyle(l.marginBottom)))
                            };
                        if (d[0] = 'top' === d[0] && m.height > k.top && m.height <= k.bottom ? 'bottom' : 'bottom' === d[0] && m.height > k.bottom && m.height <= k.top ? 'top' : 'left' === d[0] && m.width > k.left && m.width <= k.right ? 'right' : 'right' === d[0] && m.width > k.right && m.width <= k.left ? 'left' : d[0], d[1] = 'top' === d[1] && m.height - i.height > k.bottom && m.height - i.height <= k.top ? 'bottom' : 'bottom' === d[1] && m.height - i.height > k.top && m.height - i.height <= k.bottom ? 'top' : 'left' === d[1] && m.width - i.width > k.right && m.width - i.width <= k.left ? 'right' : 'right' === d[1] && m.width - i.width > k.left && m.width - i.width <= k.right ? 'left' : d[1], 'center' === d[1])
                            if (f.vertical.test(d[0])) {
                                var n = i.width / 2 - g / 2;
                                k.left + n < 0 && m.width - i.width <= k.right ? d[1] = 'left' : k.right + n < 0 && m.width - i.width <= k.left && (d[1] = 'right');
                            } else {
                                var o = i.height / 2 - m.height / 2;
                                k.top + o < 0 && m.height - i.height <= k.bottom ? d[1] = 'top' : k.bottom + o < 0 && m.height - i.height <= k.top && (d[1] = 'bottom');
                            }
                    }
                    switch (d[0]) {
                    case 'top':
                        j.top = i.top - h;
                        break;
                    case 'bottom':
                        j.top = i.top + i.height;
                        break;
                    case 'left':
                        j.left = i.left - g;
                        break;
                    case 'right':
                        j.left = i.left + i.width;
                    }
                    switch (d[1]) {
                    case 'top':
                        j.top = i.top;
                        break;
                    case 'bottom':
                        j.top = i.top + i.height - h;
                        break;
                    case 'left':
                        j.left = i.left;
                        break;
                    case 'right':
                        j.left = i.left + i.width - g;
                        break;
                    case 'center':
                        f.vertical.test(d[0]) ? j.left = i.left + i.width / 2 - g / 2 : j.top = i.top + i.height / 2 - h / 2;
                    }
                    return j.top = Math.round(j.top), j.left = Math.round(j.left), j.placement = 'center' === d[1] ? d[0] : d[0] + '-' + d[1], j;
                },
                positionArrow: function (a, c) {
                    a = this.getRawNode(a);
                    var d = a.querySelector('.tooltip-inner, .popover-inner');
                    if (d) {
                        var e = angular.element(d).hasClass('tooltip-inner'), g = e ? a.querySelector('.tooltip-arrow') : a.querySelector('.arrow');
                        if (g) {
                            var h = {
                                top: '',
                                bottom: '',
                                left: '',
                                right: ''
                            };
                            if (c = this.parsePlacement(c), 'center' === c[1])
                                return void angular.element(g).css(h);
                            var i = 'border-' + c[0] + '-width', j = b.getComputedStyle(g)[i], k = 'border-';
                            k += f.vertical.test(c[0]) ? c[0] + '-' + c[1] : c[1] + '-' + c[0], k += '-radius';
                            var l = b.getComputedStyle(e ? d : a)[k];
                            switch (c[0]) {
                            case 'top':
                                h.bottom = e ? '0' : '-' + j;
                                break;
                            case 'bottom':
                                h.top = e ? '0' : '-' + j;
                                break;
                            case 'left':
                                h.right = e ? '0' : '-' + j;
                                break;
                            case 'right':
                                h.left = e ? '0' : '-' + j;
                            }
                            h[c[1]] = l, angular.element(g).css(h);
                        }
                    }
                }
            };
        }
    ]), angular.module('ui.bootstrap.datepickerPopup', [
        'ui.bootstrap.datepicker',
        'ui.bootstrap.position'
    ]).value('$datepickerPopupLiteralWarning', !0).constant('uibDatepickerPopupConfig', {
        altInputFormats: [],
        appendToBody: !1,
        clearText: 'Clear',
        closeOnDateSelection: !0,
        closeText: 'Done',
        currentText: 'Today',
        datepickerPopup: 'yyyy-MM-dd',
        datepickerPopupTemplateUrl: 'uib/template/datepickerPopup/popup.html',
        datepickerTemplateUrl: 'uib/template/datepicker/datepicker.html',
        html5Types: {
            date: 'yyyy-MM-dd',
            'datetime-local': 'yyyy-MM-ddTHH:mm:ss.sss',
            month: 'yyyy-MM'
        },
        onOpenFocus: !0,
        showButtonBar: !0,
        placement: 'auto bottom-left'
    }).controller('UibDatepickerPopupController', [
        '$scope',
        '$element',
        '$attrs',
        '$compile',
        '$log',
        '$parse',
        '$window',
        '$document',
        '$rootScope',
        '$uibPosition',
        'dateFilter',
        'uibDateParser',
        'uibDatepickerPopupConfig',
        '$timeout',
        'uibDatepickerConfig',
        '$datepickerPopupLiteralWarning',
        function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
            function q(b) {
                var c = l.parse(b, w, a.date);
                if (isNaN(c))
                    for (var d = 0; d < I.length; d++)
                        if (c = l.parse(b, I[d], a.date), !isNaN(c))
                            return c;
                return c;
            }
            function r(a) {
                if (angular.isNumber(a) && (a = new Date(a)), !a)
                    return null;
                if (angular.isDate(a) && !isNaN(a))
                    return a;
                if (angular.isString(a)) {
                    var b = q(a);
                    if (!isNaN(b))
                        return l.toTimezone(b, J);
                }
                return F.$options && F.$options.allowInvalid ? a : void 0;
            }
            function s(a, b) {
                var d = a || b;
                return c.ngRequired || d ? (angular.isNumber(d) && (d = new Date(d)), d ? angular.isDate(d) && !isNaN(d) ? !0 : angular.isString(d) ? !isNaN(q(b)) : !1 : !0) : !0;
            }
            function t(c) {
                if (a.isOpen || !a.disabled) {
                    var d = H[0], e = b[0].contains(c.target), f = void 0 !== d.contains && d.contains(c.target);
                    !a.isOpen || e || f || a.$apply(function () {
                        a.isOpen = !1;
                    });
                }
            }
            function u(c) {
                27 === c.which && a.isOpen ? (c.preventDefault(), c.stopPropagation(), a.$apply(function () {
                    a.isOpen = !1;
                }), b[0].focus()) : 40 !== c.which || a.isOpen || (c.preventDefault(), c.stopPropagation(), a.$apply(function () {
                    a.isOpen = !0;
                }));
            }
            function v() {
                if (a.isOpen) {
                    var d = angular.element(H[0].querySelector('.uib-datepicker-popup')), e = c.popupPlacement ? c.popupPlacement : m.placement, f = j.positionElements(b, d, e, y);
                    d.css({
                        top: f.top + 'px',
                        left: f.left + 'px'
                    }), d.hasClass('uib-position-measure') && d.removeClass('uib-position-measure');
                }
            }
            var w, x, y, z, A, B, C, D, E, F, G, H, I, J, K = !1, L = [];
            this.init = function (e) {
                if (F = e, G = e.$options, x = angular.isDefined(c.closeOnDateSelection) ? a.$parent.$eval(c.closeOnDateSelection) : m.closeOnDateSelection, y = angular.isDefined(c.datepickerAppendToBody) ? a.$parent.$eval(c.datepickerAppendToBody) : m.appendToBody, z = angular.isDefined(c.onOpenFocus) ? a.$parent.$eval(c.onOpenFocus) : m.onOpenFocus, A = angular.isDefined(c.datepickerPopupTemplateUrl) ? c.datepickerPopupTemplateUrl : m.datepickerPopupTemplateUrl, B = angular.isDefined(c.datepickerTemplateUrl) ? c.datepickerTemplateUrl : m.datepickerTemplateUrl, I = angular.isDefined(c.altInputFormats) ? a.$parent.$eval(c.altInputFormats) : m.altInputFormats, a.showButtonBar = angular.isDefined(c.showButtonBar) ? a.$parent.$eval(c.showButtonBar) : m.showButtonBar, m.html5Types[c.type] ? (w = m.html5Types[c.type], K = !0) : (w = c.uibDatepickerPopup || m.datepickerPopup, c.$observe('uibDatepickerPopup', function (a, b) {
                        var c = a || m.datepickerPopup;
                        if (c !== w && (w = c, F.$modelValue = null, !w))
                            throw new Error('uibDatepickerPopup must have a date format specified.');
                    })), !w)
                    throw new Error('uibDatepickerPopup must have a date format specified.');
                if (K && c.uibDatepickerPopup)
                    throw new Error('HTML5 date input types do not support custom formats.');
                C = angular.element('<div uib-datepicker-popup-wrap><div uib-datepicker></div></div>'), G ? (J = G.timezone, a.ngModelOptions = angular.copy(G), a.ngModelOptions.timezone = null, a.ngModelOptions.updateOnDefault === !0 && (a.ngModelOptions.updateOn = a.ngModelOptions.updateOn ? a.ngModelOptions.updateOn + ' default' : 'default'), C.attr('ng-model-options', 'ngModelOptions')) : J = null, C.attr({
                    'ng-model': 'date',
                    'ng-change': 'dateSelection(date)',
                    'template-url': A
                }), D = angular.element(C.children()[0]), D.attr('template-url', B), a.datepickerOptions || (a.datepickerOptions = {}), K && 'month' === c.type && (a.datepickerOptions.datepickerMode = 'month', a.datepickerOptions.minMode = 'month'), D.attr('datepicker-options', 'datepickerOptions'), K ? F.$formatters.push(function (b) {
                    return a.date = l.fromTimezone(b, J), b;
                }) : (F.$$parserName = 'date', F.$validators.date = s, F.$parsers.unshift(r), F.$formatters.push(function (b) {
                    return F.$isEmpty(b) ? (a.date = b, b) : (angular.isNumber(b) && (b = new Date(b)), a.date = l.fromTimezone(b, J), l.filter(a.date, w));
                })), F.$viewChangeListeners.push(function () {
                    a.date = q(F.$viewValue);
                }), b.on('keydown', u), H = d(C)(a), C.remove(), y ? h.find('body').append(H) : b.after(H), a.$on('$destroy', function () {
                    for (a.isOpen === !0 && (i.$$phase || a.$apply(function () {
                            a.isOpen = !1;
                        })), H.remove(), b.off('keydown', u), h.off('click', t), E && E.off('scroll', v), angular.element(g).off('resize', v); L.length;)
                        L.shift()();
                });
            }, a.getText = function (b) {
                return a[b + 'Text'] || m[b + 'Text'];
            }, a.isDisabled = function (b) {
                'today' === b && (b = l.fromTimezone(new Date(), J));
                var c = {};
                return angular.forEach([
                    'minDate',
                    'maxDate'
                ], function (b) {
                    a.datepickerOptions[b] ? angular.isDate(a.datepickerOptions[b]) ? c[b] = l.fromTimezone(new Date(a.datepickerOptions[b]), J) : (p && e.warn('Literal date support has been deprecated, please switch to date object usage'), c[b] = new Date(k(a.datepickerOptions[b], 'medium'))) : c[b] = null;
                }), a.datepickerOptions && c.minDate && a.compare(b, c.minDate) < 0 || c.maxDate && a.compare(b, c.maxDate) > 0;
            }, a.compare = function (a, b) {
                return new Date(a.getFullYear(), a.getMonth(), a.getDate()) - new Date(b.getFullYear(), b.getMonth(), b.getDate());
            }, a.dateSelection = function (c) {
                angular.isDefined(c) && (a.date = c);
                var d = a.date ? l.filter(a.date, w) : null;
                b.val(d), F.$setViewValue(d), x && (a.isOpen = !1, b[0].focus());
            }, a.keydown = function (c) {
                27 === c.which && (c.stopPropagation(), a.isOpen = !1, b[0].focus());
            }, a.select = function (b, c) {
                if (c.stopPropagation(), 'today' === b) {
                    var d = new Date();
                    angular.isDate(a.date) ? (b = new Date(a.date), b.setFullYear(d.getFullYear(), d.getMonth(), d.getDate())) : b = new Date(d.setHours(0, 0, 0, 0));
                }
                a.dateSelection(b);
            }, a.close = function (c) {
                c.stopPropagation(), a.isOpen = !1, b[0].focus();
            }, a.disabled = angular.isDefined(c.disabled) || !1, c.ngDisabled && L.push(a.$parent.$watch(f(c.ngDisabled), function (b) {
                a.disabled = b;
            })), a.$watch('isOpen', function (d) {
                d ? a.disabled ? a.isOpen = !1 : n(function () {
                    v(), z && a.$broadcast('uib:datepicker.focus'), h.on('click', t);
                    var d = c.popupPlacement ? c.popupPlacement : m.placement;
                    y || j.parsePlacement(d)[2] ? (E = E || angular.element(j.scrollParent(b)), E && E.on('scroll', v)) : E = null, angular.element(g).on('resize', v);
                }, 0, !1) : (h.off('click', t), E && E.off('scroll', v), angular.element(g).off('resize', v));
            }), a.$on('uib:datepicker.mode', function () {
                n(v, 0, !1);
            });
        }
    ]).directive('uibDatepickerPopup', function () {
        return {
            require: [
                'ngModel',
                'uibDatepickerPopup'
            ],
            controller: 'UibDatepickerPopupController',
            scope: {
                datepickerOptions: '=?',
                isOpen: '=?',
                currentText: '@',
                clearText: '@',
                closeText: '@'
            },
            link: function (a, b, c, d) {
                var e = d[0], f = d[1];
                f.init(e);
            }
        };
    }).directive('uibDatepickerPopupWrap', function () {
        return {
            replace: !0,
            transclude: !0,
            templateUrl: function (a, b) {
                return b.templateUrl || 'uib/template/datepickerPopup/popup.html';
            }
        };
    }), angular.module('ui.bootstrap.debounce', []).factory('$$debounce', [
        '$timeout',
        function (a) {
            return function (b, c) {
                var d;
                return function () {
                    var e = this, f = Array.prototype.slice.call(arguments);
                    d && a.cancel(d), d = a(function () {
                        b.apply(e, f);
                    }, c);
                };
            };
        }
    ]), angular.module('ui.bootstrap.dropdown', ['ui.bootstrap.position']).constant('uibDropdownConfig', {
        appendToOpenClass: 'uib-dropdown-open',
        openClass: 'open'
    }).service('uibDropdownService', [
        '$document',
        '$rootScope',
        function (a, b) {
            var c = null;
            this.open = function (b, f) {
                c || (a.on('click', d), f.on('keydown', e)), c && c !== b && (c.isOpen = !1), c = b;
            }, this.close = function (b, f) {
                c === b && (c = null, a.off('click', d), f.off('keydown', e));
            };
            var d = function (a) {
                    if (c && !(a && 'disabled' === c.getAutoClose() || a && 3 === a.which)) {
                        var d = c.getToggleElement();
                        if (!(a && d && d[0].contains(a.target))) {
                            var e = c.getDropdownElement();
                            a && 'outsideClick' === c.getAutoClose() && e && e[0].contains(a.target) || (c.isOpen = !1, b.$$phase || c.$apply());
                        }
                    }
                }, e = function (a) {
                    27 === a.which ? (a.stopPropagation(), c.focusToggleElement(), d()) : c.isKeynavEnabled() && -1 !== [
                        38,
                        40
                    ].indexOf(a.which) && c.isOpen && (a.preventDefault(), a.stopPropagation(), c.focusDropdownEntry(a.which));
                };
        }
    ]).controller('UibDropdownController', [
        '$scope',
        '$element',
        '$attrs',
        '$parse',
        'uibDropdownConfig',
        'uibDropdownService',
        '$animate',
        '$uibPosition',
        '$document',
        '$compile',
        '$templateRequest',
        function (a, b, c, d, e, f, g, h, i, j, k) {
            var l, m, n = this, o = a.$new(), p = e.appendToOpenClass, q = e.openClass, r = angular.noop, s = c.onToggle ? d(c.onToggle) : angular.noop, t = !1, u = null, v = !1, w = i.find('body');
            b.addClass('dropdown'), this.init = function () {
                if (c.isOpen && (m = d(c.isOpen), r = m.assign, a.$watch(m, function (a) {
                        o.isOpen = !!a;
                    })), angular.isDefined(c.dropdownAppendTo)) {
                    var e = d(c.dropdownAppendTo)(o);
                    e && (u = angular.element(e));
                }
                t = angular.isDefined(c.dropdownAppendToBody), v = angular.isDefined(c.keyboardNav), t && !u && (u = w), u && n.dropdownMenu && (u.append(n.dropdownMenu), b.on('$destroy', function () {
                    n.dropdownMenu.remove();
                }));
            }, this.toggle = function (a) {
                return o.isOpen = arguments.length ? !!a : !o.isOpen, angular.isFunction(r) && r(o, o.isOpen), o.isOpen;
            }, this.isOpen = function () {
                return o.isOpen;
            }, o.getToggleElement = function () {
                return n.toggleElement;
            }, o.getAutoClose = function () {
                return c.autoClose || 'always';
            }, o.getElement = function () {
                return b;
            }, o.isKeynavEnabled = function () {
                return v;
            }, o.focusDropdownEntry = function (a) {
                var c = n.dropdownMenu ? angular.element(n.dropdownMenu).find('a') : b.find('ul').eq(0).find('a');
                switch (a) {
                case 40:
                    angular.isNumber(n.selectedOption) ? n.selectedOption = n.selectedOption === c.length - 1 ? n.selectedOption : n.selectedOption + 1 : n.selectedOption = 0;
                    break;
                case 38:
                    angular.isNumber(n.selectedOption) ? n.selectedOption = 0 === n.selectedOption ? 0 : n.selectedOption - 1 : n.selectedOption = c.length - 1;
                }
                c[n.selectedOption].focus();
            }, o.getDropdownElement = function () {
                return n.dropdownMenu;
            }, o.focusToggleElement = function () {
                n.toggleElement && n.toggleElement[0].focus();
            }, o.$watch('isOpen', function (c, d) {
                if (u && n.dropdownMenu) {
                    var e, i, m, v = h.positionElements(b, n.dropdownMenu, 'bottom-left', !0);
                    if (e = {
                            top: v.top + 'px',
                            display: c ? 'block' : 'none'
                        }, i = n.dropdownMenu.hasClass('dropdown-menu-right'), i ? (e.left = 'auto', m = h.scrollbarWidth(!0), e.right = window.innerWidth - m - (v.left + b.prop('offsetWidth')) + 'px') : (e.left = v.left + 'px', e.right = 'auto'), !t) {
                        var w = h.offset(u);
                        e.top = v.top - w.top + 'px', i ? e.right = window.innerWidth - (v.left - w.left + b.prop('offsetWidth')) + 'px' : e.left = v.left - w.left + 'px';
                    }
                    n.dropdownMenu.css(e);
                }
                var x = u ? u : b, y = x.hasClass(u ? p : q);
                if (y === !c && g[c ? 'addClass' : 'removeClass'](x, u ? p : q).then(function () {
                        angular.isDefined(c) && c !== d && s(a, { open: !!c });
                    }), c)
                    n.dropdownMenuTemplateUrl && k(n.dropdownMenuTemplateUrl).then(function (a) {
                        l = o.$new(), j(a.trim())(l, function (a) {
                            var b = a;
                            n.dropdownMenu.replaceWith(b), n.dropdownMenu = b;
                        });
                    }), o.focusToggleElement(), f.open(o, b);
                else {
                    if (n.dropdownMenuTemplateUrl) {
                        l && l.$destroy();
                        var z = angular.element('<ul class="dropdown-menu"></ul>');
                        n.dropdownMenu.replaceWith(z), n.dropdownMenu = z;
                    }
                    f.close(o, b), n.selectedOption = null;
                }
                angular.isFunction(r) && r(a, c);
            });
        }
    ]).directive('uibDropdown', function () {
        return {
            controller: 'UibDropdownController',
            link: function (a, b, c, d) {
                d.init();
            }
        };
    }).directive('uibDropdownMenu', function () {
        return {
            restrict: 'A',
            require: '?^uibDropdown',
            link: function (a, b, c, d) {
                if (d && !angular.isDefined(c.dropdownNested)) {
                    b.addClass('dropdown-menu');
                    var e = c.templateUrl;
                    e && (d.dropdownMenuTemplateUrl = e), d.dropdownMenu || (d.dropdownMenu = b);
                }
            }
        };
    }).directive('uibDropdownToggle', function () {
        return {
            require: '?^uibDropdown',
            link: function (a, b, c, d) {
                if (d) {
                    b.addClass('dropdown-toggle'), d.toggleElement = b;
                    var e = function (e) {
                        e.preventDefault(), b.hasClass('disabled') || c.disabled || a.$apply(function () {
                            d.toggle();
                        });
                    };
                    b.bind('click', e), b.attr({
                        'aria-haspopup': !0,
                        'aria-expanded': !1
                    }), a.$watch(d.isOpen, function (a) {
                        b.attr('aria-expanded', !!a);
                    }), a.$on('$destroy', function () {
                        b.unbind('click', e);
                    });
                }
            }
        };
    }), angular.module('ui.bootstrap.stackedMap', []).factory('$$stackedMap', function () {
        return {
            createNew: function () {
                var a = [];
                return {
                    add: function (b, c) {
                        a.push({
                            key: b,
                            value: c
                        });
                    },
                    get: function (b) {
                        for (var c = 0; c < a.length; c++)
                            if (b === a[c].key)
                                return a[c];
                    },
                    keys: function () {
                        for (var b = [], c = 0; c < a.length; c++)
                            b.push(a[c].key);
                        return b;
                    },
                    top: function () {
                        return a[a.length - 1];
                    },
                    remove: function (b) {
                        for (var c = -1, d = 0; d < a.length; d++)
                            if (b === a[d].key) {
                                c = d;
                                break;
                            }
                        return a.splice(c, 1)[0];
                    },
                    removeTop: function () {
                        return a.splice(a.length - 1, 1)[0];
                    },
                    length: function () {
                        return a.length;
                    }
                };
            }
        };
    }), angular.module('ui.bootstrap.modal', [
        'ui.bootstrap.stackedMap',
        'ui.bootstrap.position'
    ]).factory('$$multiMap', function () {
        return {
            createNew: function () {
                var a = {};
                return {
                    entries: function () {
                        return Object.keys(a).map(function (b) {
                            return {
                                key: b,
                                value: a[b]
                            };
                        });
                    },
                    get: function (b) {
                        return a[b];
                    },
                    hasKey: function (b) {
                        return !!a[b];
                    },
                    keys: function () {
                        return Object.keys(a);
                    },
                    put: function (b, c) {
                        a[b] || (a[b] = []), a[b].push(c);
                    },
                    remove: function (b, c) {
                        var d = a[b];
                        if (d) {
                            var e = d.indexOf(c);
                            -1 !== e && d.splice(e, 1), d.length || delete a[b];
                        }
                    }
                };
            }
        };
    }).provider('$uibResolve', function () {
        var a = this;
        this.resolver = null, this.setResolver = function (a) {
            this.resolver = a;
        }, this.$get = [
            '$injector',
            '$q',
            function (b, c) {
                var d = a.resolver ? b.get(a.resolver) : null;
                return {
                    resolve: function (a, e, f, g) {
                        if (d)
                            return d.resolve(a, e, f, g);
                        var h = [];
                        return angular.forEach(a, function (a) {
                            angular.isFunction(a) || angular.isArray(a) ? h.push(c.resolve(b.invoke(a))) : angular.isString(a) ? h.push(c.resolve(b.get(a))) : h.push(c.resolve(a));
                        }), c.all(h).then(function (b) {
                            var c = {}, d = 0;
                            return angular.forEach(a, function (a, e) {
                                c[e] = b[d++];
                            }), c;
                        });
                    }
                };
            }
        ];
    }).directive('uibModalBackdrop', [
        '$animate',
        '$injector',
        '$uibModalStack',
        function (a, b, c) {
            function d(b, d, e) {
                e.modalInClass && (a.addClass(d, e.modalInClass), b.$on(c.NOW_CLOSING_EVENT, function (c, f) {
                    var g = f();
                    b.modalOptions.animation ? a.removeClass(d, e.modalInClass).then(g) : g();
                }));
            }
            return {
                replace: !0,
                templateUrl: 'uib/template/modal/backdrop.html',
                compile: function (a, b) {
                    return a.addClass(b.backdropClass), d;
                }
            };
        }
    ]).directive('uibModalWindow', [
        '$uibModalStack',
        '$q',
        '$animateCss',
        '$document',
        function (a, b, c, d) {
            return {
                scope: { index: '@' },
                replace: !0,
                transclude: !0,
                templateUrl: function (a, b) {
                    return b.templateUrl || 'uib/template/modal/window.html';
                },
                link: function (e, f, g) {
                    f.addClass(g.windowClass || ''), f.addClass(g.windowTopClass || ''), e.size = g.size, e.close = function (b) {
                        var c = a.getTop();
                        c && c.value.backdrop && 'static' !== c.value.backdrop && b.target === b.currentTarget && (b.preventDefault(), b.stopPropagation(), a.dismiss(c.key, 'backdrop click'));
                    }, f.on('click', e.close), e.$isRendered = !0;
                    var h = b.defer();
                    g.$observe('modalRender', function (a) {
                        'true' === a && h.resolve();
                    }), h.promise.then(function () {
                        var h = null;
                        g.modalInClass && (h = c(f, { addClass: g.modalInClass }).start(), e.$on(a.NOW_CLOSING_EVENT, function (a, b) {
                            var d = b();
                            c(f, { removeClass: g.modalInClass }).start().then(d);
                        })), b.when(h).then(function () {
                            var b = a.getTop();
                            if (b && a.modalRendered(b.key), !d[0].activeElement || !f[0].contains(d[0].activeElement)) {
                                var c = f[0].querySelector('[autofocus]');
                                c ? c.focus() : f[0].focus();
                            }
                        });
                    });
                }
            };
        }
    ]).directive('uibModalAnimationClass', function () {
        return {
            compile: function (a, b) {
                b.modalAnimation && a.addClass(b.uibModalAnimationClass);
            }
        };
    }).directive('uibModalTransclude', function () {
        return {
            link: function (a, b, c, d, e) {
                e(a.$parent, function (a) {
                    b.empty(), b.append(a);
                });
            }
        };
    }).factory('$uibModalStack', [
        '$animate',
        '$animateCss',
        '$document',
        '$compile',
        '$rootScope',
        '$q',
        '$$multiMap',
        '$$stackedMap',
        '$uibPosition',
        function (a, b, c, d, e, f, g, h, i) {
            function j(a) {
                return !!(a.offsetWidth || a.offsetHeight || a.getClientRects().length);
            }
            function k() {
                for (var a = -1, b = v.keys(), c = 0; c < b.length; c++)
                    v.get(b[c]).value.backdrop && (a = c);
                return a > -1 && y > a && (a = y), a;
            }
            function l(a, b) {
                var c = v.get(a).value, d = c.appendTo;
                v.remove(a), z = v.top(), z && (y = parseInt(z.value.modalDomEl.attr('index'), 10)), o(c.modalDomEl, c.modalScope, function () {
                    var b = c.openedClass || u;
                    w.remove(b, a);
                    var e = w.hasKey(b);
                    d.toggleClass(b, e), !e && t && t.heightOverflow && t.scrollbarWidth && (t.originalRight ? d.css({ paddingRight: t.originalRight + 'px' }) : d.css({ paddingRight: '' }), t = null), m(!0);
                }, c.closedDeferred), n(), b && b.focus ? b.focus() : d.focus && d.focus();
            }
            function m(a) {
                var b;
                v.length() > 0 && (b = v.top().value, b.modalDomEl.toggleClass(b.windowTopClass || '', a));
            }
            function n() {
                if (r && -1 === k()) {
                    var a = s;
                    o(r, s, function () {
                        a = null;
                    }), r = void 0, s = void 0;
                }
            }
            function o(b, c, d, e) {
                function g() {
                    g.done || (g.done = !0, a.leave(b).then(function () {
                        b.remove(), e && e.resolve();
                    }), c.$destroy(), d && d());
                }
                var h, i = null, j = function () {
                        return h || (h = f.defer(), i = h.promise), function () {
                            h.resolve();
                        };
                    };
                return c.$broadcast(x.NOW_CLOSING_EVENT, j), f.when(i).then(g);
            }
            function p(a) {
                if (a.isDefaultPrevented())
                    return a;
                var b = v.top();
                if (b)
                    switch (a.which) {
                    case 27:
                        b.value.keyboard && (a.preventDefault(), e.$apply(function () {
                            x.dismiss(b.key, 'escape key press');
                        }));
                        break;
                    case 9:
                        var c = x.loadFocusElementList(b), d = !1;
                        a.shiftKey ? (x.isFocusInFirstItem(a, c) || x.isModalFocused(a, b)) && (d = x.focusLastFocusableElement(c)) : x.isFocusInLastItem(a, c) && (d = x.focusFirstFocusableElement(c)), d && (a.preventDefault(), a.stopPropagation());
                    }
            }
            function q(a, b, c) {
                return !a.value.modalScope.$broadcast('modal.closing', b, c).defaultPrevented;
            }
            var r, s, t, u = 'modal-open', v = h.createNew(), w = g.createNew(), x = { NOW_CLOSING_EVENT: 'modal.stack.now-closing' }, y = 0, z = null, A = 'a[href], area[href], input:not([disabled]), button:not([disabled]),select:not([disabled]), textarea:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable=true]';
            return e.$watch(k, function (a) {
                s && (s.index = a);
            }), c.on('keydown', p), e.$on('$destroy', function () {
                c.off('keydown', p);
            }), x.open = function (b, f) {
                var g = c[0].activeElement, h = f.openedClass || u;
                m(!1), z = v.top(), v.add(b, {
                    deferred: f.deferred,
                    renderDeferred: f.renderDeferred,
                    closedDeferred: f.closedDeferred,
                    modalScope: f.scope,
                    backdrop: f.backdrop,
                    keyboard: f.keyboard,
                    openedClass: f.openedClass,
                    windowTopClass: f.windowTopClass,
                    animation: f.animation,
                    appendTo: f.appendTo
                }), w.put(h, b);
                var j = f.appendTo, l = k();
                if (!j.length)
                    throw new Error('appendTo element not found. Make sure that the element passed is in DOM.');
                l >= 0 && !r && (s = e.$new(!0), s.modalOptions = f, s.index = l, r = angular.element('<div uib-modal-backdrop="modal-backdrop"></div>'), r.attr('backdrop-class', f.backdropClass), f.animation && r.attr('modal-animation', 'true'), d(r)(s), a.enter(r, j), t = i.scrollbarPadding(j), t.heightOverflow && t.scrollbarWidth && j.css({ paddingRight: t.right + 'px' })), y = z ? parseInt(z.value.modalDomEl.attr('index'), 10) + 1 : 0;
                var n = angular.element('<div uib-modal-window="modal-window"></div>');
                n.attr({
                    'template-url': f.windowTemplateUrl,
                    'window-class': f.windowClass,
                    'window-top-class': f.windowTopClass,
                    size: f.size,
                    index: y,
                    animate: 'animate'
                }).html(f.content), f.animation && n.attr('modal-animation', 'true'), j.addClass(h), a.enter(d(n)(f.scope), j), v.top().value.modalDomEl = n, v.top().value.modalOpener = g;
            }, x.close = function (a, b) {
                var c = v.get(a);
                return c && q(c, b, !0) ? (c.value.modalScope.$$uibDestructionScheduled = !0, c.value.deferred.resolve(b), l(a, c.value.modalOpener), !0) : !c;
            }, x.dismiss = function (a, b) {
                var c = v.get(a);
                return c && q(c, b, !1) ? (c.value.modalScope.$$uibDestructionScheduled = !0, c.value.deferred.reject(b), l(a, c.value.modalOpener), !0) : !c;
            }, x.dismissAll = function (a) {
                for (var b = this.getTop(); b && this.dismiss(b.key, a);)
                    b = this.getTop();
            }, x.getTop = function () {
                return v.top();
            }, x.modalRendered = function (a) {
                var b = v.get(a);
                b && b.value.renderDeferred.resolve();
            }, x.focusFirstFocusableElement = function (a) {
                return a.length > 0 ? (a[0].focus(), !0) : !1;
            }, x.focusLastFocusableElement = function (a) {
                return a.length > 0 ? (a[a.length - 1].focus(), !0) : !1;
            }, x.isModalFocused = function (a, b) {
                if (a && b) {
                    var c = b.value.modalDomEl;
                    if (c && c.length)
                        return (a.target || a.srcElement) === c[0];
                }
                return !1;
            }, x.isFocusInFirstItem = function (a, b) {
                return b.length > 0 ? (a.target || a.srcElement) === b[0] : !1;
            }, x.isFocusInLastItem = function (a, b) {
                return b.length > 0 ? (a.target || a.srcElement) === b[b.length - 1] : !1;
            }, x.loadFocusElementList = function (a) {
                if (a) {
                    var b = a.value.modalDomEl;
                    if (b && b.length) {
                        var c = b[0].querySelectorAll(A);
                        return c ? Array.prototype.filter.call(c, function (a) {
                            return j(a);
                        }) : c;
                    }
                }
            }, x;
        }
    ]).provider('$uibModal', function () {
        var a = {
            options: {
                animation: !0,
                backdrop: !0,
                keyboard: !0
            },
            $get: [
                '$rootScope',
                '$q',
                '$document',
                '$templateRequest',
                '$controller',
                '$uibResolve',
                '$uibModalStack',
                function (b, c, d, e, f, g, h) {
                    function i(a) {
                        return a.template ? c.when(a.template) : e(angular.isFunction(a.templateUrl) ? a.templateUrl() : a.templateUrl);
                    }
                    var j = {}, k = null;
                    return j.getPromiseChain = function () {
                        return k;
                    }, j.open = function (e) {
                        function j() {
                            return r;
                        }
                        var l = c.defer(), m = c.defer(), n = c.defer(), o = c.defer(), p = {
                                result: l.promise,
                                opened: m.promise,
                                closed: n.promise,
                                rendered: o.promise,
                                close: function (a) {
                                    return h.close(p, a);
                                },
                                dismiss: function (a) {
                                    return h.dismiss(p, a);
                                }
                            };
                        if (e = angular.extend({}, a.options, e), e.resolve = e.resolve || {}, e.appendTo = e.appendTo || d.find('body').eq(0), !e.template && !e.templateUrl)
                            throw new Error('One of template or templateUrl options is required.');
                        var q, r = c.all([
                                i(e),
                                g.resolve(e.resolve, {}, null, null)
                            ]);
                        return q = k = c.all([k]).then(j, j).then(function (a) {
                            var c = e.scope || b, d = c.$new();
                            d.$close = p.close, d.$dismiss = p.dismiss, d.$on('$destroy', function () {
                                d.$$uibDestructionScheduled || d.$dismiss('$uibUnscheduledDestruction');
                            });
                            var g, i, j = {};
                            e.controller && (j.$scope = d, j.$scope.$resolve = {}, j.$uibModalInstance = p, angular.forEach(a[1], function (a, b) {
                                j[b] = a, j.$scope.$resolve[b] = a;
                            }), i = f(e.controller, j, !0, e.controllerAs), e.controllerAs && e.bindToController && (g = i.instance, g.$close = d.$close, g.$dismiss = d.$dismiss, angular.extend(g, { $resolve: j.$scope.$resolve }, c)), g = i(), angular.isFunction(g.$onInit) && g.$onInit()), h.open(p, {
                                scope: d,
                                deferred: l,
                                renderDeferred: o,
                                closedDeferred: n,
                                content: a[0],
                                animation: e.animation,
                                backdrop: e.backdrop,
                                keyboard: e.keyboard,
                                backdropClass: e.backdropClass,
                                windowTopClass: e.windowTopClass,
                                windowClass: e.windowClass,
                                windowTemplateUrl: e.windowTemplateUrl,
                                size: e.size,
                                openedClass: e.openedClass,
                                appendTo: e.appendTo
                            }), m.resolve(!0);
                        }, function (a) {
                            m.reject(a), l.reject(a);
                        })['finally'](function () {
                            k === q && (k = null);
                        }), p;
                    }, j;
                }
            ]
        };
        return a;
    }), angular.module('ui.bootstrap.paging', []).factory('uibPaging', [
        '$parse',
        function (a) {
            return {
                create: function (b, c, d) {
                    b.setNumPages = d.numPages ? a(d.numPages).assign : angular.noop, b.ngModelCtrl = { $setViewValue: angular.noop }, b._watchers = [], b.init = function (a, e) {
                        b.ngModelCtrl = a, b.config = e, a.$render = function () {
                            b.render();
                        }, d.itemsPerPage ? b._watchers.push(c.$parent.$watch(d.itemsPerPage, function (a) {
                            b.itemsPerPage = parseInt(a, 10), c.totalPages = b.calculateTotalPages(), b.updatePage();
                        })) : b.itemsPerPage = e.itemsPerPage, c.$watch('totalItems', function (a, d) {
                            (angular.isDefined(a) || a !== d) && (c.totalPages = b.calculateTotalPages(), b.updatePage());
                        });
                    }, b.calculateTotalPages = function () {
                        var a = b.itemsPerPage < 1 ? 1 : Math.ceil(c.totalItems / b.itemsPerPage);
                        return Math.max(a || 0, 1);
                    }, b.render = function () {
                        c.page = parseInt(b.ngModelCtrl.$viewValue, 10) || 1;
                    }, c.selectPage = function (a, d) {
                        d && d.preventDefault();
                        var e = !c.ngDisabled || !d;
                        e && c.page !== a && a > 0 && a <= c.totalPages && (d && d.target && d.target.blur(), b.ngModelCtrl.$setViewValue(a), b.ngModelCtrl.$render());
                    }, c.getText = function (a) {
                        return c[a + 'Text'] || b.config[a + 'Text'];
                    }, c.noPrevious = function () {
                        return 1 === c.page;
                    }, c.noNext = function () {
                        return c.page === c.totalPages;
                    }, b.updatePage = function () {
                        b.setNumPages(c.$parent, c.totalPages), c.page > c.totalPages ? c.selectPage(c.totalPages) : b.ngModelCtrl.$render();
                    }, c.$on('$destroy', function () {
                        for (; b._watchers.length;)
                            b._watchers.shift()();
                    });
                }
            };
        }
    ]), angular.module('ui.bootstrap.pager', ['ui.bootstrap.paging']).controller('UibPagerController', [
        '$scope',
        '$attrs',
        'uibPaging',
        'uibPagerConfig',
        function (a, b, c, d) {
            a.align = angular.isDefined(b.align) ? a.$parent.$eval(b.align) : d.align, c.create(this, a, b);
        }
    ]).constant('uibPagerConfig', {
        itemsPerPage: 10,
        previousText: '\xAB Previous',
        nextText: 'Next \xBB',
        align: !0
    }).directive('uibPager', [
        'uibPagerConfig',
        function (a) {
            return {
                scope: {
                    totalItems: '=',
                    previousText: '@',
                    nextText: '@',
                    ngDisabled: '='
                },
                require: [
                    'uibPager',
                    '?ngModel'
                ],
                controller: 'UibPagerController',
                controllerAs: 'pager',
                templateUrl: function (a, b) {
                    return b.templateUrl || 'uib/template/pager/pager.html';
                },
                replace: !0,
                link: function (b, c, d, e) {
                    var f = e[0], g = e[1];
                    g && f.init(g, a);
                }
            };
        }
    ]), angular.module('ui.bootstrap.pagination', ['ui.bootstrap.paging']).controller('UibPaginationController', [
        '$scope',
        '$attrs',
        '$parse',
        'uibPaging',
        'uibPaginationConfig',
        function (a, b, c, d, e) {
            function f(a, b, c) {
                return {
                    number: a,
                    text: b,
                    active: c
                };
            }
            function g(a, b) {
                var c = [], d = 1, e = b, g = angular.isDefined(i) && b > i;
                g && (j ? (d = Math.max(a - Math.floor(i / 2), 1), e = d + i - 1, e > b && (e = b, d = e - i + 1)) : (d = (Math.ceil(a / i) - 1) * i + 1, e = Math.min(d + i - 1, b)));
                for (var h = d; e >= h; h++) {
                    var n = f(h, m(h), h === a);
                    c.push(n);
                }
                if (g && i > 0 && (!j || k || l)) {
                    if (d > 1) {
                        if (!l || d > 3) {
                            var o = f(d - 1, '...', !1);
                            c.unshift(o);
                        }
                        if (l) {
                            if (3 === d) {
                                var p = f(2, '2', !1);
                                c.unshift(p);
                            }
                            var q = f(1, '1', !1);
                            c.unshift(q);
                        }
                    }
                    if (b > e) {
                        if (!l || b - 2 > e) {
                            var r = f(e + 1, '...', !1);
                            c.push(r);
                        }
                        if (l) {
                            if (e === b - 2) {
                                var s = f(b - 1, b - 1, !1);
                                c.push(s);
                            }
                            var t = f(b, b, !1);
                            c.push(t);
                        }
                    }
                }
                return c;
            }
            var h = this, i = angular.isDefined(b.maxSize) ? a.$parent.$eval(b.maxSize) : e.maxSize, j = angular.isDefined(b.rotate) ? a.$parent.$eval(b.rotate) : e.rotate, k = angular.isDefined(b.forceEllipses) ? a.$parent.$eval(b.forceEllipses) : e.forceEllipses, l = angular.isDefined(b.boundaryLinkNumbers) ? a.$parent.$eval(b.boundaryLinkNumbers) : e.boundaryLinkNumbers, m = angular.isDefined(b.pageLabel) ? function (c) {
                    return a.$parent.$eval(b.pageLabel, { $page: c });
                } : angular.identity;
            a.boundaryLinks = angular.isDefined(b.boundaryLinks) ? a.$parent.$eval(b.boundaryLinks) : e.boundaryLinks, a.directionLinks = angular.isDefined(b.directionLinks) ? a.$parent.$eval(b.directionLinks) : e.directionLinks, d.create(this, a, b), b.maxSize && h._watchers.push(a.$parent.$watch(c(b.maxSize), function (a) {
                i = parseInt(a, 10), h.render();
            }));
            var n = this.render;
            this.render = function () {
                n(), a.page > 0 && a.page <= a.totalPages && (a.pages = g(a.page, a.totalPages));
            };
        }
    ]).constant('uibPaginationConfig', {
        itemsPerPage: 10,
        boundaryLinks: !1,
        boundaryLinkNumbers: !1,
        directionLinks: !0,
        firstText: 'First',
        previousText: 'Previous',
        nextText: 'Next',
        lastText: 'Last',
        rotate: !0,
        forceEllipses: !1
    }).directive('uibPagination', [
        '$parse',
        'uibPaginationConfig',
        function (a, b) {
            return {
                scope: {
                    totalItems: '=',
                    firstText: '@',
                    previousText: '@',
                    nextText: '@',
                    lastText: '@',
                    ngDisabled: '='
                },
                require: [
                    'uibPagination',
                    '?ngModel'
                ],
                controller: 'UibPaginationController',
                controllerAs: 'pagination',
                templateUrl: function (a, b) {
                    return b.templateUrl || 'uib/template/pagination/pagination.html';
                },
                replace: !0,
                link: function (a, c, d, e) {
                    var f = e[0], g = e[1];
                    g && f.init(g, b);
                }
            };
        }
    ]), angular.module('ui.bootstrap.tooltip', [
        'ui.bootstrap.position',
        'ui.bootstrap.stackedMap'
    ]).provider('$uibTooltip', function () {
        function a(a) {
            var b = /[A-Z]/g, c = '-';
            return a.replace(b, function (a, b) {
                return (b ? c : '') + a.toLowerCase();
            });
        }
        var b = {
                placement: 'top',
                placementClassPrefix: '',
                animation: !0,
                popupDelay: 0,
                popupCloseDelay: 0,
                useContentExp: !1
            }, c = {
                mouseenter: 'mouseleave',
                click: 'click',
                outsideClick: 'outsideClick',
                focus: 'blur',
                none: ''
            }, d = {};
        this.options = function (a) {
            angular.extend(d, a);
        }, this.setTriggers = function (a) {
            angular.extend(c, a);
        }, this.$get = [
            '$window',
            '$compile',
            '$timeout',
            '$document',
            '$uibPosition',
            '$interpolate',
            '$rootScope',
            '$parse',
            '$$stackedMap',
            function (e, f, g, h, i, j, k, l, m) {
                function n(a) {
                    if (27 === a.which) {
                        var b = o.top();
                        b && (b.value.close(), o.removeTop(), b = null);
                    }
                }
                var o = m.createNew();
                return h.on('keypress', n), k.$on('$destroy', function () {
                    h.off('keypress', n);
                }), function (e, k, m, n) {
                    function p(a) {
                        var b = (a || n.trigger || m).split(' '), d = b.map(function (a) {
                                return c[a] || a;
                            });
                        return {
                            show: b,
                            hide: d
                        };
                    }
                    n = angular.extend({}, b, d, n);
                    var q = a(e), r = j.startSymbol(), s = j.endSymbol(), t = '<div ' + q + '-popup uib-title="' + r + 'title' + s + '" ' + (n.useContentExp ? 'content-exp="contentExp()" ' : 'content="' + r + 'content' + s + '" ') + 'placement="' + r + 'placement' + s + '" popup-class="' + r + 'popupClass' + s + '" animation="animation" is-open="isOpen" origin-scope="origScope" class="uib-position-measure"></div>';
                    return {
                        compile: function (a, b) {
                            var c = f(t);
                            return function (a, b, d, f) {
                                function j() {
                                    N.isOpen ? q() : m();
                                }
                                function m() {
                                    M && !a.$eval(d[k + 'Enable']) || (u(), x(), N.popupDelay ? G || (G = g(r, N.popupDelay, !1)) : r());
                                }
                                function q() {
                                    s(), N.popupCloseDelay ? H || (H = g(t, N.popupCloseDelay, !1)) : t();
                                }
                                function r() {
                                    return s(), u(), N.content ? (v(), void N.$evalAsync(function () {
                                        N.isOpen = !0, y(!0), S();
                                    })) : angular.noop;
                                }
                                function s() {
                                    G && (g.cancel(G), G = null), I && (g.cancel(I), I = null);
                                }
                                function t() {
                                    N && N.$evalAsync(function () {
                                        N && (N.isOpen = !1, y(!1), N.animation ? F || (F = g(w, 150, !1)) : w());
                                    });
                                }
                                function u() {
                                    H && (g.cancel(H), H = null), F && (g.cancel(F), F = null);
                                }
                                function v() {
                                    D || (E = N.$new(), D = c(E, function (a) {
                                        K ? h.find('body').append(a) : b.after(a);
                                    }), z());
                                }
                                function w() {
                                    s(), u(), A(), D && (D.remove(), D = null), E && (E.$destroy(), E = null);
                                }
                                function x() {
                                    N.title = d[k + 'Title'], Q ? N.content = Q(a) : N.content = d[e], N.popupClass = d[k + 'Class'], N.placement = angular.isDefined(d[k + 'Placement']) ? d[k + 'Placement'] : n.placement;
                                    var b = i.parsePlacement(N.placement);
                                    J = b[1] ? b[0] + '-' + b[1] : b[0];
                                    var c = parseInt(d[k + 'PopupDelay'], 10), f = parseInt(d[k + 'PopupCloseDelay'], 10);
                                    N.popupDelay = isNaN(c) ? n.popupDelay : c, N.popupCloseDelay = isNaN(f) ? n.popupCloseDelay : f;
                                }
                                function y(b) {
                                    P && angular.isFunction(P.assign) && P.assign(a, b);
                                }
                                function z() {
                                    R.length = 0, Q ? (R.push(a.$watch(Q, function (a) {
                                        N.content = a, !a && N.isOpen && t();
                                    })), R.push(E.$watch(function () {
                                        O || (O = !0, E.$$postDigest(function () {
                                            O = !1, N && N.isOpen && S();
                                        }));
                                    }))) : R.push(d.$observe(e, function (a) {
                                        N.content = a, !a && N.isOpen ? t() : S();
                                    })), R.push(d.$observe(k + 'Title', function (a) {
                                        N.title = a, N.isOpen && S();
                                    })), R.push(d.$observe(k + 'Placement', function (a) {
                                        N.placement = a ? a : n.placement, N.isOpen && S();
                                    }));
                                }
                                function A() {
                                    R.length && (angular.forEach(R, function (a) {
                                        a();
                                    }), R.length = 0);
                                }
                                function B(a) {
                                    N && N.isOpen && D && (b[0].contains(a.target) || D[0].contains(a.target) || q());
                                }
                                function C() {
                                    var a = d[k + 'Trigger'];
                                    T(), L = p(a), 'none' !== L.show && L.show.forEach(function (a, c) {
                                        'outsideClick' === a ? (b.on('click', j), h.on('click', B)) : a === L.hide[c] ? b.on(a, j) : a && (b.on(a, m), b.on(L.hide[c], q)), b.on('keypress', function (a) {
                                            27 === a.which && q();
                                        });
                                    });
                                }
                                var D, E, F, G, H, I, J, K = angular.isDefined(n.appendToBody) ? n.appendToBody : !1, L = p(void 0), M = angular.isDefined(d[k + 'Enable']), N = a.$new(!0), O = !1, P = angular.isDefined(d[k + 'IsOpen']) ? l(d[k + 'IsOpen']) : !1, Q = n.useContentExp ? l(d[e]) : !1, R = [], S = function () {
                                        D && D.html() && (I || (I = g(function () {
                                            var a = i.positionElements(b, D, N.placement, K);
                                            D.css({
                                                top: a.top + 'px',
                                                left: a.left + 'px'
                                            }), D.hasClass(a.placement.split('-')[0]) || (D.removeClass(J.split('-')[0]), D.addClass(a.placement.split('-')[0])), D.hasClass(n.placementClassPrefix + a.placement) || (D.removeClass(n.placementClassPrefix + J), D.addClass(n.placementClassPrefix + a.placement)), D.hasClass('uib-position-measure') ? (i.positionArrow(D, a.placement), D.removeClass('uib-position-measure')) : J !== a.placement && i.positionArrow(D, a.placement), J = a.placement, I = null;
                                        }, 0, !1)));
                                    };
                                N.origScope = a, N.isOpen = !1, o.add(N, { close: t }), N.contentExp = function () {
                                    return N.content;
                                }, d.$observe('disabled', function (a) {
                                    a && s(), a && N.isOpen && t();
                                }), P && a.$watch(P, function (a) {
                                    N && !a === N.isOpen && j();
                                });
                                var T = function () {
                                    L.show.forEach(function (a) {
                                        'outsideClick' === a ? b.off('click', j) : (b.off(a, m), b.off(a, j));
                                    }), L.hide.forEach(function (a) {
                                        'outsideClick' === a ? h.off('click', B) : b.off(a, q);
                                    });
                                };
                                C();
                                var U = a.$eval(d[k + 'Animation']);
                                N.animation = angular.isDefined(U) ? !!U : n.animation;
                                var V, W = k + 'AppendToBody';
                                V = W in d && void 0 === d[W] ? !0 : a.$eval(d[W]), K = angular.isDefined(V) ? V : K, a.$on('$destroy', function () {
                                    T(), w(), o.remove(N), N = null;
                                });
                            };
                        }
                    };
                };
            }
        ];
    }).directive('uibTooltipTemplateTransclude', [
        '$animate',
        '$sce',
        '$compile',
        '$templateRequest',
        function (a, b, c, d) {
            return {
                link: function (e, f, g) {
                    var h, i, j, k = e.$eval(g.tooltipTemplateTranscludeScope), l = 0, m = function () {
                            i && (i.remove(), i = null), h && (h.$destroy(), h = null), j && (a.leave(j).then(function () {
                                i = null;
                            }), i = j, j = null);
                        };
                    e.$watch(b.parseAsResourceUrl(g.uibTooltipTemplateTransclude), function (b) {
                        var g = ++l;
                        b ? (d(b, !0).then(function (d) {
                            if (g === l) {
                                var e = k.$new(), i = d, n = c(i)(e, function (b) {
                                        m(), a.enter(b, f);
                                    });
                                h = e, j = n, h.$emit('$includeContentLoaded', b);
                            }
                        }, function () {
                            g === l && (m(), e.$emit('$includeContentError', b));
                        }), e.$emit('$includeContentRequested', b)) : m();
                    }), e.$on('$destroy', m);
                }
            };
        }
    ]).directive('uibTooltipClasses', [
        '$uibPosition',
        function (a) {
            return {
                restrict: 'A',
                link: function (b, c, d) {
                    if (b.placement) {
                        var e = a.parsePlacement(b.placement);
                        c.addClass(e[0]);
                    }
                    b.popupClass && c.addClass(b.popupClass), b.animation() && c.addClass(d.tooltipAnimationClass);
                }
            };
        }
    ]).directive('uibTooltipPopup', function () {
        return {
            replace: !0,
            scope: {
                content: '@',
                placement: '@',
                popupClass: '@',
                animation: '&',
                isOpen: '&'
            },
            templateUrl: 'uib/template/tooltip/tooltip-popup.html'
        };
    }).directive('uibTooltip', [
        '$uibTooltip',
        function (a) {
            return a('uibTooltip', 'tooltip', 'mouseenter');
        }
    ]).directive('uibTooltipTemplatePopup', function () {
        return {
            replace: !0,
            scope: {
                contentExp: '&',
                placement: '@',
                popupClass: '@',
                animation: '&',
                isOpen: '&',
                originScope: '&'
            },
            templateUrl: 'uib/template/tooltip/tooltip-template-popup.html'
        };
    }).directive('uibTooltipTemplate', [
        '$uibTooltip',
        function (a) {
            return a('uibTooltipTemplate', 'tooltip', 'mouseenter', { useContentExp: !0 });
        }
    ]).directive('uibTooltipHtmlPopup', function () {
        return {
            replace: !0,
            scope: {
                contentExp: '&',
                placement: '@',
                popupClass: '@',
                animation: '&',
                isOpen: '&'
            },
            templateUrl: 'uib/template/tooltip/tooltip-html-popup.html'
        };
    }).directive('uibTooltipHtml', [
        '$uibTooltip',
        function (a) {
            return a('uibTooltipHtml', 'tooltip', 'mouseenter', { useContentExp: !0 });
        }
    ]), angular.module('ui.bootstrap.popover', ['ui.bootstrap.tooltip']).directive('uibPopoverTemplatePopup', function () {
        return {
            replace: !0,
            scope: {
                uibTitle: '@',
                contentExp: '&',
                placement: '@',
                popupClass: '@',
                animation: '&',
                isOpen: '&',
                originScope: '&'
            },
            templateUrl: 'uib/template/popover/popover-template.html'
        };
    }).directive('uibPopoverTemplate', [
        '$uibTooltip',
        function (a) {
            return a('uibPopoverTemplate', 'popover', 'click', { useContentExp: !0 });
        }
    ]).directive('uibPopoverHtmlPopup', function () {
        return {
            replace: !0,
            scope: {
                contentExp: '&',
                uibTitle: '@',
                placement: '@',
                popupClass: '@',
                animation: '&',
                isOpen: '&'
            },
            templateUrl: 'uib/template/popover/popover-html.html'
        };
    }).directive('uibPopoverHtml', [
        '$uibTooltip',
        function (a) {
            return a('uibPopoverHtml', 'popover', 'click', { useContentExp: !0 });
        }
    ]).directive('uibPopoverPopup', function () {
        return {
            replace: !0,
            scope: {
                uibTitle: '@',
                content: '@',
                placement: '@',
                popupClass: '@',
                animation: '&',
                isOpen: '&'
            },
            templateUrl: 'uib/template/popover/popover.html'
        };
    }).directive('uibPopover', [
        '$uibTooltip',
        function (a) {
            return a('uibPopover', 'popover', 'click');
        }
    ]), angular.module('ui.bootstrap.progressbar', []).constant('uibProgressConfig', {
        animate: !0,
        max: 100
    }).controller('UibProgressController', [
        '$scope',
        '$attrs',
        'uibProgressConfig',
        function (a, b, c) {
            function d() {
                return angular.isDefined(a.maxParam) ? a.maxParam : c.max;
            }
            var e = this, f = angular.isDefined(b.animate) ? a.$parent.$eval(b.animate) : c.animate;
            this.bars = [], a.max = d(), this.addBar = function (a, b, c) {
                f || b.css({ transition: 'none' }), this.bars.push(a), a.max = d(), a.title = c && angular.isDefined(c.title) ? c.title : 'progressbar', a.$watch('value', function (b) {
                    a.recalculatePercentage();
                }), a.recalculatePercentage = function () {
                    var b = e.bars.reduce(function (a, b) {
                        return b.percent = +(100 * b.value / b.max).toFixed(2), a + b.percent;
                    }, 0);
                    b > 100 && (a.percent -= b - 100);
                }, a.$on('$destroy', function () {
                    b = null, e.removeBar(a);
                });
            }, this.removeBar = function (a) {
                this.bars.splice(this.bars.indexOf(a), 1), this.bars.forEach(function (a) {
                    a.recalculatePercentage();
                });
            }, a.$watch('maxParam', function (a) {
                e.bars.forEach(function (a) {
                    a.max = d(), a.recalculatePercentage();
                });
            });
        }
    ]).directive('uibProgress', function () {
        return {
            replace: !0,
            transclude: !0,
            controller: 'UibProgressController',
            require: 'uibProgress',
            scope: { maxParam: '=?max' },
            templateUrl: 'uib/template/progressbar/progress.html'
        };
    }).directive('uibBar', function () {
        return {
            replace: !0,
            transclude: !0,
            require: '^uibProgress',
            scope: {
                value: '=',
                type: '@'
            },
            templateUrl: 'uib/template/progressbar/bar.html',
            link: function (a, b, c, d) {
                d.addBar(a, b, c);
            }
        };
    }).directive('uibProgressbar', function () {
        return {
            replace: !0,
            transclude: !0,
            controller: 'UibProgressController',
            scope: {
                value: '=',
                maxParam: '=?max',
                type: '@'
            },
            templateUrl: 'uib/template/progressbar/progressbar.html',
            link: function (a, b, c, d) {
                d.addBar(a, angular.element(b.children()[0]), { title: c.title });
            }
        };
    }), angular.module('ui.bootstrap.rating', []).constant('uibRatingConfig', {
        max: 5,
        stateOn: null,
        stateOff: null,
        enableReset: !0,
        titles: [
            'one',
            'two',
            'three',
            'four',
            'five'
        ]
    }).controller('UibRatingController', [
        '$scope',
        '$attrs',
        'uibRatingConfig',
        function (a, b, c) {
            var d = { $setViewValue: angular.noop }, e = this;
            this.init = function (e) {
                d = e, d.$render = this.render, d.$formatters.push(function (a) {
                    return angular.isNumber(a) && a << 0 !== a && (a = Math.round(a)), a;
                }), this.stateOn = angular.isDefined(b.stateOn) ? a.$parent.$eval(b.stateOn) : c.stateOn, this.stateOff = angular.isDefined(b.stateOff) ? a.$parent.$eval(b.stateOff) : c.stateOff, this.enableReset = angular.isDefined(b.enableReset) ? a.$parent.$eval(b.enableReset) : c.enableReset;
                var f = angular.isDefined(b.titles) ? a.$parent.$eval(b.titles) : c.titles;
                this.titles = angular.isArray(f) && f.length > 0 ? f : c.titles;
                var g = angular.isDefined(b.ratingStates) ? a.$parent.$eval(b.ratingStates) : new Array(angular.isDefined(b.max) ? a.$parent.$eval(b.max) : c.max);
                a.range = this.buildTemplateObjects(g);
            }, this.buildTemplateObjects = function (a) {
                for (var b = 0, c = a.length; c > b; b++)
                    a[b] = angular.extend({ index: b }, {
                        stateOn: this.stateOn,
                        stateOff: this.stateOff,
                        title: this.getTitle(b)
                    }, a[b]);
                return a;
            }, this.getTitle = function (a) {
                return a >= this.titles.length ? a + 1 : this.titles[a];
            }, a.rate = function (b) {
                if (!a.readonly && b >= 0 && b <= a.range.length) {
                    var c = e.enableReset && d.$viewValue === b ? 0 : b;
                    d.$setViewValue(c), d.$render();
                }
            }, a.enter = function (b) {
                a.readonly || (a.value = b), a.onHover({ value: b });
            }, a.reset = function () {
                a.value = d.$viewValue, a.onLeave();
            }, a.onKeydown = function (b) {
                /(37|38|39|40)/.test(b.which) && (b.preventDefault(), b.stopPropagation(), a.rate(a.value + (38 === b.which || 39 === b.which ? 1 : -1)));
            }, this.render = function () {
                a.value = d.$viewValue, a.title = e.getTitle(a.value - 1);
            };
        }
    ]).directive('uibRating', function () {
        return {
            require: [
                'uibRating',
                'ngModel'
            ],
            scope: {
                readonly: '=?readOnly',
                onHover: '&',
                onLeave: '&'
            },
            controller: 'UibRatingController',
            templateUrl: 'uib/template/rating/rating.html',
            replace: !0,
            link: function (a, b, c, d) {
                var e = d[0], f = d[1];
                e.init(f);
            }
        };
    }), angular.module('ui.bootstrap.tabs', []).controller('UibTabsetController', [
        '$scope',
        function (a) {
            function b(a) {
                for (var b = 0; b < d.tabs.length; b++)
                    if (d.tabs[b].index === a)
                        return b;
            }
            var c, d = this;
            d.tabs = [], d.select = function (a, f) {
                if (!e) {
                    var g = b(c), h = d.tabs[g];
                    if (h) {
                        if (h.tab.onDeselect({
                                $event: f,
                                $selectedIndex: a
                            }), f && f.isDefaultPrevented())
                            return;
                        h.tab.active = !1;
                    }
                    var i = d.tabs[a];
                    i ? (i.tab.onSelect({ $event: f }), i.tab.active = !0, d.active = i.index, c = i.index) : !i && angular.isDefined(c) && (d.active = null, c = null);
                }
            }, d.addTab = function (a) {
                if (d.tabs.push({
                        tab: a,
                        index: a.index
                    }), d.tabs.sort(function (a, b) {
                        return a.index > b.index ? 1 : a.index < b.index ? -1 : 0;
                    }), a.index === d.active || !angular.isDefined(d.active) && 1 === d.tabs.length) {
                    var c = b(a.index);
                    d.select(c);
                }
            }, d.removeTab = function (a) {
                for (var b, c = 0; c < d.tabs.length; c++)
                    if (d.tabs[c].tab === a) {
                        b = c;
                        break;
                    }
                if (d.tabs[b].index === d.active) {
                    var e = b === d.tabs.length - 1 ? b - 1 : b + 1 % d.tabs.length;
                    d.select(e);
                }
                d.tabs.splice(b, 1);
            }, a.$watch('tabset.active', function (a) {
                angular.isDefined(a) && a !== c && d.select(b(a));
            });
            var e;
            a.$on('$destroy', function () {
                e = !0;
            });
        }
    ]).directive('uibTabset', function () {
        return {
            transclude: !0,
            replace: !0,
            scope: {},
            bindToController: {
                active: '=?',
                type: '@'
            },
            controller: 'UibTabsetController',
            controllerAs: 'tabset',
            templateUrl: function (a, b) {
                return b.templateUrl || 'uib/template/tabs/tabset.html';
            },
            link: function (a, b, c) {
                a.vertical = angular.isDefined(c.vertical) ? a.$parent.$eval(c.vertical) : !1, a.justified = angular.isDefined(c.justified) ? a.$parent.$eval(c.justified) : !1;
            }
        };
    }).directive('uibTab', [
        '$parse',
        function (a) {
            return {
                require: '^uibTabset',
                replace: !0,
                templateUrl: function (a, b) {
                    return b.templateUrl || 'uib/template/tabs/tab.html';
                },
                transclude: !0,
                scope: {
                    heading: '@',
                    index: '=?',
                    classes: '@?',
                    onSelect: '&select',
                    onDeselect: '&deselect'
                },
                controller: function () {
                },
                controllerAs: 'tab',
                link: function (b, c, d, e, f) {
                    b.disabled = !1, d.disable && b.$parent.$watch(a(d.disable), function (a) {
                        b.disabled = !!a;
                    }), angular.isUndefined(d.index) && (e.tabs && e.tabs.length ? b.index = Math.max.apply(null, e.tabs.map(function (a) {
                        return a.index;
                    })) + 1 : b.index = 0), angular.isUndefined(d.classes) && (b.classes = ''), b.select = function (a) {
                        if (!b.disabled) {
                            for (var c, d = 0; d < e.tabs.length; d++)
                                if (e.tabs[d].tab === b) {
                                    c = d;
                                    break;
                                }
                            e.select(c, a);
                        }
                    }, e.addTab(b), b.$on('$destroy', function () {
                        e.removeTab(b);
                    }), b.$transcludeFn = f;
                }
            };
        }
    ]).directive('uibTabHeadingTransclude', function () {
        return {
            restrict: 'A',
            require: '^uibTab',
            link: function (a, b) {
                a.$watch('headingElement', function (a) {
                    a && (b.html(''), b.append(a));
                });
            }
        };
    }).directive('uibTabContentTransclude', function () {
        function a(a) {
            return a.tagName && (a.hasAttribute('uib-tab-heading') || a.hasAttribute('data-uib-tab-heading') || a.hasAttribute('x-uib-tab-heading') || 'uib-tab-heading' === a.tagName.toLowerCase() || 'data-uib-tab-heading' === a.tagName.toLowerCase() || 'x-uib-tab-heading' === a.tagName.toLowerCase() || 'uib:tab-heading' === a.tagName.toLowerCase());
        }
        return {
            restrict: 'A',
            require: '^uibTabset',
            link: function (b, c, d) {
                var e = b.$eval(d.uibTabContentTransclude).tab;
                e.$transcludeFn(e.$parent, function (b) {
                    angular.forEach(b, function (b) {
                        a(b) ? e.headingElement = b : c.append(b);
                    });
                });
            }
        };
    }), angular.module('ui.bootstrap.timepicker', []).constant('uibTimepickerConfig', {
        hourStep: 1,
        minuteStep: 1,
        secondStep: 1,
        showMeridian: !0,
        showSeconds: !1,
        meridians: null,
        readonlyInput: !1,
        mousewheel: !0,
        arrowkeys: !0,
        showSpinners: !0,
        templateUrl: 'uib/template/timepicker/timepicker.html'
    }).controller('UibTimepickerController', [
        '$scope',
        '$element',
        '$attrs',
        '$parse',
        '$log',
        '$locale',
        'uibTimepickerConfig',
        function (a, b, c, d, e, f, g) {
            function h() {
                var b = +a.hours, c = a.showMeridian ? b > 0 && 13 > b : b >= 0 && 24 > b;
                return c && '' !== a.hours ? (a.showMeridian && (12 === b && (b = 0), a.meridian === v[1] && (b += 12)), b) : void 0;
            }
            function i() {
                var b = +a.minutes, c = b >= 0 && 60 > b;
                return c && '' !== a.minutes ? b : void 0;
            }
            function j() {
                var b = +a.seconds;
                return b >= 0 && 60 > b ? b : void 0;
            }
            function k(a, b) {
                return null === a ? '' : angular.isDefined(a) && a.toString().length < 2 && !b ? '0' + a : a.toString();
            }
            function l(a) {
                m(), u.$setViewValue(new Date(s)), n(a);
            }
            function m() {
                u.$setValidity('time', !0), a.invalidHours = !1, a.invalidMinutes = !1, a.invalidSeconds = !1;
            }
            function n(b) {
                if (u.$modelValue) {
                    var c = s.getHours(), d = s.getMinutes(), e = s.getSeconds();
                    a.showMeridian && (c = 0 === c || 12 === c ? 12 : c % 12), a.hours = 'h' === b ? c : k(c, !w), 'm' !== b && (a.minutes = k(d)), a.meridian = s.getHours() < 12 ? v[0] : v[1], 's' !== b && (a.seconds = k(e)), a.meridian = s.getHours() < 12 ? v[0] : v[1];
                } else
                    a.hours = null, a.minutes = null, a.seconds = null, a.meridian = v[0];
            }
            function o(a) {
                s = q(s, a), l();
            }
            function p(a, b) {
                return q(a, 60 * b);
            }
            function q(a, b) {
                var c = new Date(a.getTime() + 1000 * b), d = new Date(a);
                return d.setHours(c.getHours(), c.getMinutes(), c.getSeconds()), d;
            }
            function r() {
                return (null === a.hours || '' === a.hours) && (null === a.minutes || '' === a.minutes) && (!a.showSeconds || a.showSeconds && (null === a.seconds || '' === a.seconds));
            }
            var s = new Date(), t = [], u = { $setViewValue: angular.noop }, v = angular.isDefined(c.meridians) ? a.$parent.$eval(c.meridians) : g.meridians || f.DATETIME_FORMATS.AMPMS, w = angular.isDefined(c.padHours) ? a.$parent.$eval(c.padHours) : !0;
            a.tabindex = angular.isDefined(c.tabindex) ? c.tabindex : 0, b.removeAttr('tabindex'), this.init = function (b, d) {
                u = b, u.$render = this.render, u.$formatters.unshift(function (a) {
                    return a ? new Date(a) : null;
                });
                var e = d.eq(0), f = d.eq(1), h = d.eq(2), i = angular.isDefined(c.mousewheel) ? a.$parent.$eval(c.mousewheel) : g.mousewheel;
                i && this.setupMousewheelEvents(e, f, h);
                var j = angular.isDefined(c.arrowkeys) ? a.$parent.$eval(c.arrowkeys) : g.arrowkeys;
                j && this.setupArrowkeyEvents(e, f, h), a.readonlyInput = angular.isDefined(c.readonlyInput) ? a.$parent.$eval(c.readonlyInput) : g.readonlyInput, this.setupInputEvents(e, f, h);
            };
            var x = g.hourStep;
            c.hourStep && t.push(a.$parent.$watch(d(c.hourStep), function (a) {
                x = +a;
            }));
            var y = g.minuteStep;
            c.minuteStep && t.push(a.$parent.$watch(d(c.minuteStep), function (a) {
                y = +a;
            }));
            var z;
            t.push(a.$parent.$watch(d(c.min), function (a) {
                var b = new Date(a);
                z = isNaN(b) ? void 0 : b;
            }));
            var A;
            t.push(a.$parent.$watch(d(c.max), function (a) {
                var b = new Date(a);
                A = isNaN(b) ? void 0 : b;
            }));
            var B = !1;
            c.ngDisabled && t.push(a.$parent.$watch(d(c.ngDisabled), function (a) {
                B = a;
            })), a.noIncrementHours = function () {
                var a = p(s, 60 * x);
                return B || a > A || s > a && z > a;
            }, a.noDecrementHours = function () {
                var a = p(s, 60 * -x);
                return B || z > a || a > s && a > A;
            }, a.noIncrementMinutes = function () {
                var a = p(s, y);
                return B || a > A || s > a && z > a;
            }, a.noDecrementMinutes = function () {
                var a = p(s, -y);
                return B || z > a || a > s && a > A;
            }, a.noIncrementSeconds = function () {
                var a = q(s, C);
                return B || a > A || s > a && z > a;
            }, a.noDecrementSeconds = function () {
                var a = q(s, -C);
                return B || z > a || a > s && a > A;
            }, a.noToggleMeridian = function () {
                return s.getHours() < 12 ? B || p(s, 720) > A : B || p(s, -720) < z;
            };
            var C = g.secondStep;
            c.secondStep && t.push(a.$parent.$watch(d(c.secondStep), function (a) {
                C = +a;
            })), a.showSeconds = g.showSeconds, c.showSeconds && t.push(a.$parent.$watch(d(c.showSeconds), function (b) {
                a.showSeconds = !!b;
            })), a.showMeridian = g.showMeridian, c.showMeridian && t.push(a.$parent.$watch(d(c.showMeridian), function (b) {
                if (a.showMeridian = !!b, u.$error.time) {
                    var c = h(), d = i();
                    angular.isDefined(c) && angular.isDefined(d) && (s.setHours(c), l());
                } else
                    n();
            })), this.setupMousewheelEvents = function (b, c, d) {
                var e = function (a) {
                    a.originalEvent && (a = a.originalEvent);
                    var b = a.wheelDelta ? a.wheelDelta : -a.deltaY;
                    return a.detail || b > 0;
                };
                b.bind('mousewheel wheel', function (b) {
                    B || a.$apply(e(b) ? a.incrementHours() : a.decrementHours()), b.preventDefault();
                }), c.bind('mousewheel wheel', function (b) {
                    B || a.$apply(e(b) ? a.incrementMinutes() : a.decrementMinutes()), b.preventDefault();
                }), d.bind('mousewheel wheel', function (b) {
                    B || a.$apply(e(b) ? a.incrementSeconds() : a.decrementSeconds()), b.preventDefault();
                });
            }, this.setupArrowkeyEvents = function (b, c, d) {
                b.bind('keydown', function (b) {
                    B || (38 === b.which ? (b.preventDefault(), a.incrementHours(), a.$apply()) : 40 === b.which && (b.preventDefault(), a.decrementHours(), a.$apply()));
                }), c.bind('keydown', function (b) {
                    B || (38 === b.which ? (b.preventDefault(), a.incrementMinutes(), a.$apply()) : 40 === b.which && (b.preventDefault(), a.decrementMinutes(), a.$apply()));
                }), d.bind('keydown', function (b) {
                    B || (38 === b.which ? (b.preventDefault(), a.incrementSeconds(), a.$apply()) : 40 === b.which && (b.preventDefault(), a.decrementSeconds(), a.$apply()));
                });
            }, this.setupInputEvents = function (b, c, d) {
                if (a.readonlyInput)
                    return a.updateHours = angular.noop, a.updateMinutes = angular.noop, void (a.updateSeconds = angular.noop);
                var e = function (b, c, d) {
                    u.$setViewValue(null), u.$setValidity('time', !1), angular.isDefined(b) && (a.invalidHours = b), angular.isDefined(c) && (a.invalidMinutes = c), angular.isDefined(d) && (a.invalidSeconds = d);
                };
                a.updateHours = function () {
                    var a = h(), b = i();
                    u.$setDirty(), angular.isDefined(a) && angular.isDefined(b) ? (s.setHours(a), s.setMinutes(b), z > s || s > A ? e(!0) : l('h')) : e(!0);
                }, b.bind('blur', function (b) {
                    u.$setTouched(), r() ? m() : null === a.hours || '' === a.hours ? e(!0) : !a.invalidHours && a.hours < 10 && a.$apply(function () {
                        a.hours = k(a.hours, !w);
                    });
                }), a.updateMinutes = function () {
                    var a = i(), b = h();
                    u.$setDirty(), angular.isDefined(a) && angular.isDefined(b) ? (s.setHours(b), s.setMinutes(a), z > s || s > A ? e(void 0, !0) : l('m')) : e(void 0, !0);
                }, c.bind('blur', function (b) {
                    u.$setTouched(), r() ? m() : null === a.minutes ? e(void 0, !0) : !a.invalidMinutes && a.minutes < 10 && a.$apply(function () {
                        a.minutes = k(a.minutes);
                    });
                }), a.updateSeconds = function () {
                    var a = j();
                    u.$setDirty(), angular.isDefined(a) ? (s.setSeconds(a), l('s')) : e(void 0, void 0, !0);
                }, d.bind('blur', function (b) {
                    r() ? m() : !a.invalidSeconds && a.seconds < 10 && a.$apply(function () {
                        a.seconds = k(a.seconds);
                    });
                });
            }, this.render = function () {
                var b = u.$viewValue;
                isNaN(b) ? (u.$setValidity('time', !1), e.error('Timepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.')) : (b && (s = b), z > s || s > A ? (u.$setValidity('time', !1), a.invalidHours = !0, a.invalidMinutes = !0) : m(), n());
            }, a.showSpinners = angular.isDefined(c.showSpinners) ? a.$parent.$eval(c.showSpinners) : g.showSpinners, a.incrementHours = function () {
                a.noIncrementHours() || o(60 * x * 60);
            }, a.decrementHours = function () {
                a.noDecrementHours() || o(60 * -x * 60);
            }, a.incrementMinutes = function () {
                a.noIncrementMinutes() || o(60 * y);
            }, a.decrementMinutes = function () {
                a.noDecrementMinutes() || o(60 * -y);
            }, a.incrementSeconds = function () {
                a.noIncrementSeconds() || o(C);
            }, a.decrementSeconds = function () {
                a.noDecrementSeconds() || o(-C);
            }, a.toggleMeridian = function () {
                var b = i(), c = h();
                a.noToggleMeridian() || (angular.isDefined(b) && angular.isDefined(c) ? o(720 * (s.getHours() < 12 ? 60 : -60)) : a.meridian = a.meridian === v[0] ? v[1] : v[0]);
            }, a.blur = function () {
                u.$setTouched();
            }, a.$on('$destroy', function () {
                for (; t.length;)
                    t.shift()();
            });
        }
    ]).directive('uibTimepicker', [
        'uibTimepickerConfig',
        function (a) {
            return {
                require: [
                    'uibTimepicker',
                    '?^ngModel'
                ],
                controller: 'UibTimepickerController',
                controllerAs: 'timepicker',
                replace: !0,
                scope: {},
                templateUrl: function (b, c) {
                    return c.templateUrl || a.templateUrl;
                },
                link: function (a, b, c, d) {
                    var e = d[0], f = d[1];
                    f && e.init(f, b.find('input'));
                }
            };
        }
    ]), angular.module('ui.bootstrap.typeahead', [
        'ui.bootstrap.debounce',
        'ui.bootstrap.position'
    ]).factory('uibTypeaheadParser', [
        '$parse',
        function (a) {
            var b = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+([\s\S]+?)$/;
            return {
                parse: function (c) {
                    var d = c.match(b);
                    if (!d)
                        throw new Error('Expected typeahead specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_" but got "' + c + '".');
                    return {
                        itemName: d[3],
                        source: a(d[4]),
                        viewMapper: a(d[2] || d[1]),
                        modelMapper: a(d[1])
                    };
                }
            };
        }
    ]).controller('UibTypeaheadController', [
        '$scope',
        '$element',
        '$attrs',
        '$compile',
        '$parse',
        '$q',
        '$timeout',
        '$document',
        '$window',
        '$rootScope',
        '$$debounce',
        '$uibPosition',
        'uibTypeaheadParser',
        function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
            function n() {
                O.moveInProgress || (O.moveInProgress = !0, O.$digest()), Z();
            }
            function o() {
                O.position = E ? l.offset(b) : l.position(b), O.position.top += b.prop('offsetHeight');
            }
            var p, q, r = [
                    9,
                    13,
                    27,
                    38,
                    40
                ], s = 200, t = a.$eval(c.typeaheadMinLength);
            t || 0 === t || (t = 1), a.$watch(c.typeaheadMinLength, function (a) {
                t = a || 0 === a ? a : 1;
            });
            var u = a.$eval(c.typeaheadWaitMs) || 0, v = a.$eval(c.typeaheadEditable) !== !1;
            a.$watch(c.typeaheadEditable, function (a) {
                v = a !== !1;
            });
            var w, x, y = e(c.typeaheadLoading).assign || angular.noop, z = c.typeaheadShouldSelect ? e(c.typeaheadShouldSelect) : function (a, b) {
                    var c = b.$event;
                    return 13 === c.which || 9 === c.which;
                }, A = e(c.typeaheadOnSelect), B = angular.isDefined(c.typeaheadSelectOnBlur) ? a.$eval(c.typeaheadSelectOnBlur) : !1, C = e(c.typeaheadNoResults).assign || angular.noop, D = c.typeaheadInputFormatter ? e(c.typeaheadInputFormatter) : void 0, E = c.typeaheadAppendToBody ? a.$eval(c.typeaheadAppendToBody) : !1, F = c.typeaheadAppendTo ? a.$eval(c.typeaheadAppendTo) : null, G = a.$eval(c.typeaheadFocusFirst) !== !1, H = c.typeaheadSelectOnExact ? a.$eval(c.typeaheadSelectOnExact) : !1, I = e(c.typeaheadIsOpen).assign || angular.noop, J = a.$eval(c.typeaheadShowHint) || !1, K = e(c.ngModel), L = e(c.ngModel + '($$$p)'), M = function (b, c) {
                    return angular.isFunction(K(a)) && q && q.$options && q.$options.getterSetter ? L(b, { $$$p: c }) : K.assign(b, c);
                }, N = m.parse(c.uibTypeahead), O = a.$new(), P = a.$on('$destroy', function () {
                    O.$destroy();
                });
            O.$on('$destroy', P);
            var Q = 'typeahead-' + O.$id + '-' + Math.floor(10000 * Math.random());
            b.attr({
                'aria-autocomplete': 'list',
                'aria-expanded': !1,
                'aria-owns': Q
            });
            var R, S;
            J && (R = angular.element('<div></div>'), R.css('position', 'relative'), b.after(R), S = b.clone(), S.attr('placeholder', ''), S.attr('tabindex', '-1'), S.val(''), S.css({
                position: 'absolute',
                top: '0px',
                left: '0px',
                'border-color': 'transparent',
                'box-shadow': 'none',
                opacity: 1,
                background: 'none 0% 0% / auto repeat scroll padding-box border-box rgb(255, 255, 255)',
                color: '#999'
            }), b.css({
                position: 'relative',
                'vertical-align': 'top',
                'background-color': 'transparent'
            }), R.append(S), S.after(b));
            var T = angular.element('<div uib-typeahead-popup></div>');
            T.attr({
                id: Q,
                matches: 'matches',
                active: 'activeIdx',
                select: 'select(activeIdx, evt)',
                'move-in-progress': 'moveInProgress',
                query: 'query',
                position: 'position',
                'assign-is-open': 'assignIsOpen(isOpen)',
                debounce: 'debounceUpdate'
            }), angular.isDefined(c.typeaheadTemplateUrl) && T.attr('template-url', c.typeaheadTemplateUrl), angular.isDefined(c.typeaheadPopupTemplateUrl) && T.attr('popup-template-url', c.typeaheadPopupTemplateUrl);
            var U = function () {
                    J && S.val('');
                }, V = function () {
                    O.matches = [], O.activeIdx = -1, b.attr('aria-expanded', !1), U();
                }, W = function (a) {
                    return Q + '-option-' + a;
                };
            O.$watch('activeIdx', function (a) {
                0 > a ? b.removeAttr('aria-activedescendant') : b.attr('aria-activedescendant', W(a));
            });
            var X = function (a, b) {
                    return O.matches.length > b && a ? a.toUpperCase() === O.matches[b].label.toUpperCase() : !1;
                }, Y = function (c, d) {
                    var e = { $viewValue: c };
                    y(a, !0), C(a, !1), f.when(N.source(a, e)).then(function (f) {
                        var g = c === p.$viewValue;
                        if (g && w)
                            if (f && f.length > 0) {
                                O.activeIdx = G ? 0 : -1, C(a, !1), O.matches.length = 0;
                                for (var h = 0; h < f.length; h++)
                                    e[N.itemName] = f[h], O.matches.push({
                                        id: W(h),
                                        label: N.viewMapper(O, e),
                                        model: f[h]
                                    });
                                if (O.query = c, o(), b.attr('aria-expanded', !0), H && 1 === O.matches.length && X(c, 0) && (angular.isNumber(O.debounceUpdate) || angular.isObject(O.debounceUpdate) ? k(function () {
                                        O.select(0, d);
                                    }, angular.isNumber(O.debounceUpdate) ? O.debounceUpdate : O.debounceUpdate['default']) : O.select(0, d)), J) {
                                    var i = O.matches[0].label;
                                    angular.isString(c) && c.length > 0 && i.slice(0, c.length).toUpperCase() === c.toUpperCase() ? S.val(c + i.slice(c.length)) : S.val('');
                                }
                            } else
                                V(), C(a, !0);
                        g && y(a, !1);
                    }, function () {
                        V(), y(a, !1), C(a, !0);
                    });
                };
            E && (angular.element(i).on('resize', n), h.find('body').on('scroll', n));
            var Z = k(function () {
                O.matches.length && o(), O.moveInProgress = !1;
            }, s);
            O.moveInProgress = !1, O.query = void 0;
            var $, _ = function (a) {
                    $ = g(function () {
                        Y(a);
                    }, u);
                }, aa = function () {
                    $ && g.cancel($);
                };
            V(), O.assignIsOpen = function (b) {
                I(a, b);
            }, O.select = function (d, e) {
                var f, h, i = {};
                x = !0, i[N.itemName] = h = O.matches[d].model, f = N.modelMapper(a, i), M(a, f), p.$setValidity('editable', !0), p.$setValidity('parse', !0), A(a, {
                    $item: h,
                    $model: f,
                    $label: N.viewMapper(a, i),
                    $event: e
                }), V(), O.$eval(c.typeaheadFocusOnSelect) !== !1 && g(function () {
                    b[0].focus();
                }, 0, !1);
            }, b.on('keydown', function (b) {
                if (0 !== O.matches.length && -1 !== r.indexOf(b.which)) {
                    var c = z(a, { $event: b });
                    if (-1 === O.activeIdx && c || 9 === b.which && b.shiftKey)
                        return V(), void O.$digest();
                    b.preventDefault();
                    var d;
                    switch (b.which) {
                    case 27:
                        b.stopPropagation(), V(), a.$digest();
                        break;
                    case 38:
                        O.activeIdx = (O.activeIdx > 0 ? O.activeIdx : O.matches.length) - 1, O.$digest(), d = T.find('li')[O.activeIdx], d.parentNode.scrollTop = d.offsetTop;
                        break;
                    case 40:
                        O.activeIdx = (O.activeIdx + 1) % O.matches.length, O.$digest(), d = T.find('li')[O.activeIdx], d.parentNode.scrollTop = d.offsetTop;
                        break;
                    default:
                        c && O.$apply(function () {
                            angular.isNumber(O.debounceUpdate) || angular.isObject(O.debounceUpdate) ? k(function () {
                                O.select(O.activeIdx, b);
                            }, angular.isNumber(O.debounceUpdate) ? O.debounceUpdate : O.debounceUpdate['default']) : O.select(O.activeIdx, b);
                        });
                    }
                }
            }), b.bind('focus', function (a) {
                w = !0, 0 !== t || p.$viewValue || g(function () {
                    Y(p.$viewValue, a);
                }, 0);
            }), b.bind('blur', function (a) {
                B && O.matches.length && -1 !== O.activeIdx && !x && (x = !0, O.$apply(function () {
                    angular.isObject(O.debounceUpdate) && angular.isNumber(O.debounceUpdate.blur) ? k(function () {
                        O.select(O.activeIdx, a);
                    }, O.debounceUpdate.blur) : O.select(O.activeIdx, a);
                })), !v && p.$error.editable && (p.$setViewValue(), p.$setValidity('editable', !0), p.$setValidity('parse', !0), b.val('')), w = !1, x = !1;
            });
            var ba = function (c) {
                b[0] !== c.target && 3 !== c.which && 0 !== O.matches.length && (V(), j.$$phase || a.$digest());
            };
            h.on('click', ba), a.$on('$destroy', function () {
                h.off('click', ba), (E || F) && ca.remove(), E && (angular.element(i).off('resize', n), h.find('body').off('scroll', n)), T.remove(), J && R.remove();
            });
            var ca = d(T)(O);
            E ? h.find('body').append(ca) : F ? angular.element(F).eq(0).append(ca) : b.after(ca), this.init = function (b, c) {
                p = b, q = c, O.debounceUpdate = p.$options && e(p.$options.debounce)(a), p.$parsers.unshift(function (b) {
                    return w = !0, 0 === t || b && b.length >= t ? u > 0 ? (aa(), _(b)) : Y(b) : (y(a, !1), aa(), V()), v ? b : b ? void p.$setValidity('editable', !1) : (p.$setValidity('editable', !0), null);
                }), p.$formatters.push(function (b) {
                    var c, d, e = {};
                    return v || p.$setValidity('editable', !0), D ? (e.$model = b, D(a, e)) : (e[N.itemName] = b, c = N.viewMapper(a, e), e[N.itemName] = void 0, d = N.viewMapper(a, e), c !== d ? c : b);
                });
            };
        }
    ]).directive('uibTypeahead', function () {
        return {
            controller: 'UibTypeaheadController',
            require: [
                'ngModel',
                '^?ngModelOptions',
                'uibTypeahead'
            ],
            link: function (a, b, c, d) {
                d[2].init(d[0], d[1]);
            }
        };
    }).directive('uibTypeaheadPopup', [
        '$$debounce',
        function (a) {
            return {
                scope: {
                    matches: '=',
                    query: '=',
                    active: '=',
                    position: '&',
                    moveInProgress: '=',
                    select: '&',
                    assignIsOpen: '&',
                    debounce: '&'
                },
                replace: !0,
                templateUrl: function (a, b) {
                    return b.popupTemplateUrl || 'uib/template/typeahead/typeahead-popup.html';
                },
                link: function (b, c, d) {
                    b.templateUrl = d.templateUrl, b.isOpen = function () {
                        var a = b.matches.length > 0;
                        return b.assignIsOpen({ isOpen: a }), a;
                    }, b.isActive = function (a) {
                        return b.active === a;
                    }, b.selectActive = function (a) {
                        b.active = a;
                    }, b.selectMatch = function (c, d) {
                        var e = b.debounce();
                        angular.isNumber(e) || angular.isObject(e) ? a(function () {
                            b.select({
                                activeIdx: c,
                                evt: d
                            });
                        }, angular.isNumber(e) ? e : e['default']) : b.select({
                            activeIdx: c,
                            evt: d
                        });
                    };
                }
            };
        }
    ]).directive('uibTypeaheadMatch', [
        '$templateRequest',
        '$compile',
        '$parse',
        function (a, b, c) {
            return {
                scope: {
                    index: '=',
                    match: '=',
                    query: '='
                },
                link: function (d, e, f) {
                    var g = c(f.templateUrl)(d.$parent) || 'uib/template/typeahead/typeahead-match.html';
                    a(g).then(function (a) {
                        var c = angular.element(a.trim());
                        e.replaceWith(c), b(c)(d);
                    });
                }
            };
        }
    ]).filter('uibTypeaheadHighlight', [
        '$sce',
        '$injector',
        '$log',
        function (a, b, c) {
            function d(a) {
                return a.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
            }
            function e(a) {
                return /<.*>/g.test(a);
            }
            var f;
            return f = b.has('$sanitize'), function (b, g) {
                return !f && e(b) && c.warn('Unsafe use of typeahead please use ngSanitize'), b = g ? ('' + b).replace(new RegExp(d(g), 'gi'), '<strong>$&</strong>') : b, f || (b = a.trustAsHtml(b)), b;
            };
        }
    ]), angular.module('uib/template/accordion/accordion-group.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/accordion/accordion-group.html', '<div class="panel" ng-class="panelClass || \'panel-default\'">\n  <div role="tab" id="{{::headingId}}" aria-selected="{{isOpen}}" class="panel-heading" ng-keypress="toggleOpen($event)">\n    <h4 class="panel-title">\n      <a role="button" data-toggle="collapse" href aria-expanded="{{isOpen}}" aria-controls="{{::panelId}}" tabindex="0" class="accordion-toggle" ng-click="toggleOpen()" uib-accordion-transclude="heading"><span uib-accordion-header ng-class="{\'text-muted\': isDisabled}">{{heading}}</span></a>\n    </h4>\n  </div>\n  <div id="{{::panelId}}" aria-labelledby="{{::headingId}}" aria-hidden="{{!isOpen}}" role="tabpanel" class="panel-collapse collapse" uib-collapse="!isOpen">\n    <div class="panel-body" ng-transclude></div>\n  </div>\n</div>\n');
        }
    ]), angular.module('uib/template/accordion/accordion.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/accordion/accordion.html', '<div role="tablist" class="panel-group" ng-transclude></div>');
        }
    ]), angular.module('uib/template/alert/alert.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/alert/alert.html', '<div class="alert" ng-class="[\'alert-\' + (type || \'warning\'), closeable ? \'alert-dismissible\' : null]" role="alert">\n    <button ng-show="closeable" type="button" class="close" ng-click="close({$event: $event})">\n        <span aria-hidden="true">&times;</span>\n        <span class="sr-only">Close</span>\n    </button>\n    <div ng-transclude></div>\n</div>\n');
        }
    ]), angular.module('uib/template/carousel/carousel.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/carousel/carousel.html', '<div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel" ng-swipe-right="prev()" ng-swipe-left="next()">\n  <div class="carousel-inner" ng-transclude></div>\n  <a role="button" href class="left carousel-control" ng-click="prev()" ng-class="{ disabled: isPrevDisabled() }" ng-show="slides.length > 1">\n    <span aria-hidden="true" class="glyphicon glyphicon-chevron-left"></span>\n    <span class="sr-only">previous</span>\n  </a>\n  <a role="button" href class="right carousel-control" ng-click="next()" ng-class="{ disabled: isNextDisabled() }" ng-show="slides.length > 1">\n    <span aria-hidden="true" class="glyphicon glyphicon-chevron-right"></span>\n    <span class="sr-only">next</span>\n  </a>\n  <ol class="carousel-indicators" ng-show="slides.length > 1">\n    <li ng-repeat="slide in slides | orderBy:indexOfSlide track by $index" ng-class="{ active: isActive(slide) }" ng-click="select(slide)">\n      <span class="sr-only">slide {{ $index + 1 }} of {{ slides.length }}<span ng-if="isActive(slide)">, currently active</span></span>\n    </li>\n  </ol>\n</div>\n');
        }
    ]), angular.module('uib/template/carousel/slide.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/carousel/slide.html', '<div ng-class="{\n    \'active\': active\n  }" class="item text-center" ng-transclude></div>\n');
        }
    ]), angular.module('uib/template/datepicker/datepicker.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/datepicker/datepicker.html', '<div class="uib-datepicker" ng-switch="datepickerMode" role="application" ng-keydown="keydown($event)">\n  <uib-daypicker ng-switch-when="day" tabindex="0"></uib-daypicker>\n  <uib-monthpicker ng-switch-when="month" tabindex="0"></uib-monthpicker>\n  <uib-yearpicker ng-switch-when="year" tabindex="0"></uib-yearpicker>\n</div>\n');
        }
    ]), angular.module('uib/template/datepicker/day.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/datepicker/day.html', '<table class="uib-daypicker" role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left uib-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{::5 + showWeeks}}"><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm uib-title" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right uib-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n    <tr>\n      <th ng-if="showWeeks" class="text-center"></th>\n      <th ng-repeat="label in ::labels track by $index" class="text-center"><small aria-label="{{::label.full}}">{{::label.abbr}}</small></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class="uib-weeks" ng-repeat="row in rows track by $index">\n      <td ng-if="showWeeks" class="text-center h6"><em>{{ weekNumbers[$index] }}</em></td>\n      <td ng-repeat="dt in row" class="uib-day text-center" role="gridcell"\n        id="{{::dt.uid}}"\n        ng-class="::dt.customClass">\n        <button type="button" class="btn btn-default btn-sm"\n          uib-is-class="\n            \'btn-info\' for selectedDt,\n            \'active\' for activeDt\n            on dt"\n          ng-click="select(dt.date)"\n          ng-disabled="::dt.disabled"\n          tabindex="-1"><span ng-class="::{\'text-muted\': dt.secondary, \'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n');
        }
    ]), angular.module('uib/template/datepicker/month.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/datepicker/month.html', '<table class="uib-monthpicker" role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left uib-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm uib-title" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right uib-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class="uib-months" ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row" class="uib-month text-center" role="gridcell"\n        id="{{::dt.uid}}"\n        ng-class="::dt.customClass">\n        <button type="button" class="btn btn-default"\n          uib-is-class="\n            \'btn-info\' for selectedDt,\n            \'active\' for activeDt\n            on dt"\n          ng-click="select(dt.date)"\n          ng-disabled="::dt.disabled"\n          tabindex="-1"><span ng-class="::{\'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n');
        }
    ]), angular.module('uib/template/datepicker/year.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/datepicker/year.html', '<table class="uib-yearpicker" role="grid" aria-labelledby="{{::uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left uib-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{::columns - 2}}"><button id="{{::uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm uib-title" ng-click="toggleMode()" ng-disabled="datepickerMode === maxMode" tabindex="-1"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right uib-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class="uib-years" ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row" class="uib-year text-center" role="gridcell"\n        id="{{::dt.uid}}"\n        ng-class="::dt.customClass">\n        <button type="button" class="btn btn-default"\n          uib-is-class="\n            \'btn-info\' for selectedDt,\n            \'active\' for activeDt\n            on dt"\n          ng-click="select(dt.date)"\n          ng-disabled="::dt.disabled"\n          tabindex="-1"><span ng-class="::{\'text-info\': dt.current}">{{::dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n');
        }
    ]), angular.module('uib/template/datepickerPopup/popup.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/datepickerPopup/popup.html', '<div>\n  <ul class="uib-datepicker-popup dropdown-menu uib-position-measure" dropdown-nested ng-if="isOpen" ng-keydown="keydown($event)" ng-click="$event.stopPropagation()">\n    <li ng-transclude></li>\n    <li ng-if="showButtonBar" class="uib-button-bar">\n      <span class="btn-group pull-left">\n        <button type="button" class="btn btn-sm btn-info uib-datepicker-current" ng-click="select(\'today\', $event)" ng-disabled="isDisabled(\'today\')">{{ getText(\'current\') }}</button>\n        <button type="button" class="btn btn-sm btn-danger uib-clear" ng-click="select(null, $event)">{{ getText(\'clear\') }}</button>\n      </span>\n      <button type="button" class="btn btn-sm btn-success pull-right uib-close" ng-click="close($event)">{{ getText(\'close\') }}</button>\n    </li>\n  </ul>\n</div>\n');
        }
    ]), angular.module('uib/template/modal/backdrop.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/modal/backdrop.html', '<div class="modal-backdrop"\n     uib-modal-animation-class="fade"\n     modal-in-class="in"\n     ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}"\n></div>\n');
        }
    ]), angular.module('uib/template/modal/window.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/modal/window.html', '<div modal-render="{{$isRendered}}" tabindex="-1" role="dialog" class="modal"\n    uib-modal-animation-class="fade"\n    modal-in-class="in"\n    ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}">\n    <div class="modal-dialog {{size ? \'modal-\' + size : \'\'}}"><div class="modal-content" uib-modal-transclude></div></div>\n</div>\n');
        }
    ]), angular.module('uib/template/pager/pager.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/pager/pager.html', '<ul class="pager">\n  <li ng-class="{disabled: noPrevious()||ngDisabled, previous: align}"><a href ng-click="selectPage(page - 1, $event)">{{::getText(\'previous\')}}</a></li>\n  <li ng-class="{disabled: noNext()||ngDisabled, next: align}"><a href ng-click="selectPage(page + 1, $event)">{{::getText(\'next\')}}</a></li>\n</ul>\n');
        }
    ]), angular.module('uib/template/pagination/pagination.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/pagination/pagination.html', '<ul class="pagination">\n  <li ng-if="::boundaryLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-first"><a href ng-click="selectPage(1, $event)">{{::getText(\'first\')}}</a></li>\n  <li ng-if="::directionLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-prev"><a href ng-click="selectPage(page - 1, $event)">{{::getText(\'previous\')}}</a></li>\n  <li ng-repeat="page in pages track by $index" ng-class="{active: page.active,disabled: ngDisabled&&!page.active}" class="pagination-page"><a href ng-click="selectPage(page.number, $event)">{{page.text}}</a></li>\n  <li ng-if="::directionLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-next"><a href ng-click="selectPage(page + 1, $event)">{{::getText(\'next\')}}</a></li>\n  <li ng-if="::boundaryLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-last"><a href ng-click="selectPage(totalPages, $event)">{{::getText(\'last\')}}</a></li>\n</ul>\n');
        }
    ]), angular.module('uib/template/tooltip/tooltip-html-popup.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/tooltip/tooltip-html-popup.html', '<div class="tooltip"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind-html="contentExp()"></div>\n</div>\n');
        }
    ]), angular.module('uib/template/tooltip/tooltip-popup.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/tooltip/tooltip-popup.html', '<div class="tooltip"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n');
        }
    ]), angular.module('uib/template/tooltip/tooltip-template-popup.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/tooltip/tooltip-template-popup.html', '<div class="tooltip"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner"\n    uib-tooltip-template-transclude="contentExp()"\n    tooltip-template-transclude-scope="originScope()"></div>\n</div>\n');
        }
    ]), angular.module('uib/template/popover/popover-html.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/popover/popover-html.html', '<div class="popover"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="uibTitle" ng-if="uibTitle"></h3>\n      <div class="popover-content" ng-bind-html="contentExp()"></div>\n  </div>\n</div>\n');
        }
    ]), angular.module('uib/template/popover/popover-template.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/popover/popover-template.html', '<div class="popover"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="uibTitle" ng-if="uibTitle"></h3>\n      <div class="popover-content"\n        uib-tooltip-template-transclude="contentExp()"\n        tooltip-template-transclude-scope="originScope()"></div>\n  </div>\n</div>\n');
        }
    ]), angular.module('uib/template/popover/popover.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/popover/popover.html', '<div class="popover"\n  tooltip-animation-class="fade"\n  uib-tooltip-classes\n  ng-class="{ in: isOpen() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="uibTitle" ng-if="uibTitle"></h3>\n      <div class="popover-content" ng-bind="content"></div>\n  </div>\n</div>\n');
        }
    ]), angular.module('uib/template/progressbar/bar.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/progressbar/bar.html', '<div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: (percent < 100 ? percent : 100) + \'%\'}" aria-valuetext="{{percent | number:0}}%" aria-labelledby="{{::title}}" ng-transclude></div>\n');
        }
    ]), angular.module('uib/template/progressbar/progress.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/progressbar/progress.html', '<div class="progress" ng-transclude aria-labelledby="{{::title}}"></div>');
        }
    ]), angular.module('uib/template/progressbar/progressbar.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/progressbar/progressbar.html', '<div class="progress">\n  <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: (percent < 100 ? percent : 100) + \'%\'}" aria-valuetext="{{percent | number:0}}%" aria-labelledby="{{::title}}" ng-transclude></div>\n</div>\n');
        }
    ]), angular.module('uib/template/rating/rating.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/rating/rating.html', '<span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="{{range.length}}" aria-valuenow="{{value}}" aria-valuetext="{{title}}">\n    <span ng-repeat-start="r in range track by $index" class="sr-only">({{ $index < value ? \'*\' : \' \' }})</span>\n    <i ng-repeat-end ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon" ng-class="$index < value && (r.stateOn || \'glyphicon-star\') || (r.stateOff || \'glyphicon-star-empty\')" ng-attr-title="{{r.title}}"></i>\n</span>\n');
        }
    ]), angular.module('uib/template/tabs/tab.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/tabs/tab.html', '<li ng-class="[{active: active, disabled: disabled}, classes]" class="uib-tab nav-item">\n  <a href ng-click="select($event)" class="nav-link" uib-tab-heading-transclude>{{heading}}</a>\n</li>\n');
        }
    ]), angular.module('uib/template/tabs/tabset.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/tabs/tabset.html', '<div>\n  <ul class="nav nav-{{tabset.type || \'tabs\'}}" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude></ul>\n  <div class="tab-content">\n    <div class="tab-pane"\n         ng-repeat="tab in tabset.tabs"\n         ng-class="{active: tabset.active === tab.index}"\n         uib-tab-content-transclude="tab">\n    </div>\n  </div>\n</div>\n');
        }
    ]), angular.module('uib/template/timepicker/timepicker.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/timepicker/timepicker.html', '<table class="uib-timepicker">\n  <tbody>\n    <tr class="text-center" ng-show="::showSpinners">\n      <td class="uib-increment hours"><a ng-click="incrementHours()" ng-class="{disabled: noIncrementHours()}" class="btn btn-link" ng-disabled="noIncrementHours()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n      <td>&nbsp;</td>\n      <td class="uib-increment minutes"><a ng-click="incrementMinutes()" ng-class="{disabled: noIncrementMinutes()}" class="btn btn-link" ng-disabled="noIncrementMinutes()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n      <td ng-show="showSeconds">&nbsp;</td>\n      <td ng-show="showSeconds" class="uib-increment seconds"><a ng-click="incrementSeconds()" ng-class="{disabled: noIncrementSeconds()}" class="btn btn-link" ng-disabled="noIncrementSeconds()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n      <td ng-show="showMeridian"></td>\n    </tr>\n    <tr>\n      <td class="form-group uib-time hours" ng-class="{\'has-error\': invalidHours}">\n        <input type="text" placeholder="HH" ng-model="hours" ng-change="updateHours()" class="form-control text-center" ng-readonly="::readonlyInput" maxlength="2" tabindex="{{::tabindex}}" ng-disabled="noIncrementHours()" ng-blur="blur()">\n      </td>\n      <td class="uib-separator">:</td>\n      <td class="form-group uib-time minutes" ng-class="{\'has-error\': invalidMinutes}">\n        <input type="text" placeholder="MM" ng-model="minutes" ng-change="updateMinutes()" class="form-control text-center" ng-readonly="::readonlyInput" maxlength="2" tabindex="{{::tabindex}}" ng-disabled="noIncrementMinutes()" ng-blur="blur()">\n      </td>\n      <td ng-show="showSeconds" class="uib-separator">:</td>\n      <td class="form-group uib-time seconds" ng-class="{\'has-error\': invalidSeconds}" ng-show="showSeconds">\n        <input type="text" placeholder="SS" ng-model="seconds" ng-change="updateSeconds()" class="form-control text-center" ng-readonly="readonlyInput" maxlength="2" tabindex="{{::tabindex}}" ng-disabled="noIncrementSeconds()" ng-blur="blur()">\n      </td>\n      <td ng-show="showMeridian" class="uib-time am-pm"><button type="button" ng-class="{disabled: noToggleMeridian()}" class="btn btn-default text-center" ng-click="toggleMeridian()" ng-disabled="noToggleMeridian()" tabindex="{{::tabindex}}">{{meridian}}</button></td>\n    </tr>\n    <tr class="text-center" ng-show="::showSpinners">\n      <td class="uib-decrement hours"><a ng-click="decrementHours()" ng-class="{disabled: noDecrementHours()}" class="btn btn-link" ng-disabled="noDecrementHours()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n      <td>&nbsp;</td>\n      <td class="uib-decrement minutes"><a ng-click="decrementMinutes()" ng-class="{disabled: noDecrementMinutes()}" class="btn btn-link" ng-disabled="noDecrementMinutes()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n      <td ng-show="showSeconds">&nbsp;</td>\n      <td ng-show="showSeconds" class="uib-decrement seconds"><a ng-click="decrementSeconds()" ng-class="{disabled: noDecrementSeconds()}" class="btn btn-link" ng-disabled="noDecrementSeconds()" tabindex="{{::tabindex}}"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n      <td ng-show="showMeridian"></td>\n    </tr>\n  </tbody>\n</table>\n');
        }
    ]), angular.module('uib/template/typeahead/typeahead-match.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/typeahead/typeahead-match.html', '<a href\n   tabindex="-1"\n   ng-bind-html="match.label | uibTypeaheadHighlight:query"\n   ng-attr-title="{{match.label}}"></a>\n');
        }
    ]), angular.module('uib/template/typeahead/typeahead-popup.html', []).run([
        '$templateCache',
        function (a) {
            a.put('uib/template/typeahead/typeahead-popup.html', '<ul class="dropdown-menu" ng-show="isOpen() && !moveInProgress" ng-style="{top: position().top+\'px\', left: position().left+\'px\'}" role="listbox" aria-hidden="{{!isOpen()}}">\n    <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index, $event)" role="option" id="{{::match.id}}">\n        <div uib-typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n    </li>\n</ul>\n');
        }
    ]), angular.module('ui.bootstrap.carousel').run(function () {
        !angular.$$csp().noInlineStyle && !angular.$$uibCarouselCss && angular.element(document).find('head').prepend('<style type="text/css">.ng-animate.item:not(.left):not(.right){-webkit-transition:0s ease-in-out left;transition:0s ease-in-out left}</style>'), angular.$$uibCarouselCss = !0;
    }), angular.module('ui.bootstrap.datepicker').run(function () {
        !angular.$$csp().noInlineStyle && !angular.$$uibDatepickerCss && angular.element(document).find('head').prepend('<style type="text/css">.uib-datepicker .uib-title{width:100%;}.uib-day button,.uib-month button,.uib-year button{min-width:100%;}.uib-left,.uib-right{width:100%}</style>'), angular.$$uibDatepickerCss = !0;
    }), angular.module('ui.bootstrap.position').run(function () {
        !angular.$$csp().noInlineStyle && !angular.$$uibPositionCss && angular.element(document).find('head').prepend('<style type="text/css">.uib-position-measure{display:block !important;visibility:hidden !important;position:absolute !important;top:-9999px !important;left:-9999px !important;}.uib-position-scrollbar-measure{position:absolute !important;top:-9999px !important;width:50px !important;height:50px !important;overflow:scroll !important;}.uib-position-body-scrollbar-measure{overflow:scroll !important;}</style>'), angular.$$uibPositionCss = !0;
    }), angular.module('ui.bootstrap.datepickerPopup').run(function () {
        !angular.$$csp().noInlineStyle && !angular.$$uibDatepickerpopupCss && angular.element(document).find('head').prepend('<style type="text/css">.uib-datepicker-popup.dropdown-menu{display:block;float:none;margin:0;}.uib-button-bar{padding:10px 9px 2px;}</style>'), angular.$$uibDatepickerpopupCss = !0;
    }), angular.module('ui.bootstrap.tooltip').run(function () {
        !angular.$$csp().noInlineStyle && !angular.$$uibTooltipCss && angular.element(document).find('head').prepend('<style type="text/css">[uib-tooltip-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-bottom > .tooltip-arrow,[uib-popover-popup].popover.top-left > .arrow,[uib-popover-popup].popover.top-right > .arrow,[uib-popover-popup].popover.bottom-left > .arrow,[uib-popover-popup].popover.bottom-right > .arrow,[uib-popover-popup].popover.left-top > .arrow,[uib-popover-popup].popover.left-bottom > .arrow,[uib-popover-popup].popover.right-top > .arrow,[uib-popover-popup].popover.right-bottom > .arrow,[uib-popover-html-popup].popover.top-left > .arrow,[uib-popover-html-popup].popover.top-right > .arrow,[uib-popover-html-popup].popover.bottom-left > .arrow,[uib-popover-html-popup].popover.bottom-right > .arrow,[uib-popover-html-popup].popover.left-top > .arrow,[uib-popover-html-popup].popover.left-bottom > .arrow,[uib-popover-html-popup].popover.right-top > .arrow,[uib-popover-html-popup].popover.right-bottom > .arrow,[uib-popover-template-popup].popover.top-left > .arrow,[uib-popover-template-popup].popover.top-right > .arrow,[uib-popover-template-popup].popover.bottom-left > .arrow,[uib-popover-template-popup].popover.bottom-right > .arrow,[uib-popover-template-popup].popover.left-top > .arrow,[uib-popover-template-popup].popover.left-bottom > .arrow,[uib-popover-template-popup].popover.right-top > .arrow,[uib-popover-template-popup].popover.right-bottom > .arrow{top:auto;bottom:auto;left:auto;right:auto;margin:0;}[uib-popover-popup].popover,[uib-popover-html-popup].popover,[uib-popover-template-popup].popover{display:block !important;}</style>'), angular.$$uibTooltipCss = !0;
    }), angular.module('ui.bootstrap.timepicker').run(function () {
        !angular.$$csp().noInlineStyle && !angular.$$uibTimepickerCss && angular.element(document).find('head').prepend('<style type="text/css">.uib-time input{width:50px;}</style>'), angular.$$uibTimepickerCss = !0;
    }), angular.module('ui.bootstrap.typeahead').run(function () {
        !angular.$$csp().noInlineStyle && !angular.$$uibTypeaheadCss && angular.element(document).find('head').prepend('<style type="text/css">[uib-typeahead-popup].dropdown-menu{display:block;}</style>'), angular.$$uibTypeaheadCss = !0;
    });
    return;
});
(function (window) {
    var console = console || {};
    console.log = console.log || function () {
    };
    if (!Function.prototype.bind) {
        Function.prototype.bind = function (oThis) {
            if (typeof this !== 'function') {
                throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');
            }
            var aArgs = Array.prototype.slice.call(arguments, 1), fToBind = this, fNOP = function () {
                }, fBound = function () {
                    return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));
                };
            fNOP.prototype = this.prototype;
            fBound.prototype = new fNOP();
            return fBound;
        };
    }
}(this.window));
var prefix = '' ? '../../' : '../';
require.config({
    baseUrl: 'js',
    paths: {
        'jquery': prefix + 'bower_components/jquery/dist/jquery',
        'angular': prefix + 'bower_components/angular/angular.min',
        'uiRoute': prefix + 'bower_components/angular-ui-router/release/angular-ui-router',
        'domReady': prefix + 'bower_components/domReady/domReady',
        'ocLazyLoad': prefix + 'bower_components/oclazyload/dist/ocLazyLoad.require',
        'bootstrap': prefix + 'bower_components/bootstrap/dist/js/bootstrap.min',
        'ngAnimate': prefix + 'bower_components/angular-animate/angular-animate.min',
        'loadingBar': prefix + 'bower_components/angular-loading-bar/build/loading-bar',
        'gritter': prefix + 'bower_components/jquery.gritter/js/jquery.gritter.min',
        'UIBootstrap': prefix + 'bower_components/angular-bootstrap/ui-bootstrap-tpls.min',
        'angularTouch': prefix + 'bower_components/angular-touch/angular-touch.min',
        'app': 'app',
        'router': 'router'
    },
    map: { '*': { 'css': prefix + 'bower_components/require-css/css.min' } },
    shim: {
        'gritter': { deps: ['jquery'] },
        'UIBootstrap': {
            deps: [
                'bootstrap',
                'angular',
                'css!' + prefix + 'bower_components/angular-bootstrap/ui-bootstrap-csp.css'
            ]
        },
        'angular': { exports: 'angular' },
        ocLazyLoad: { deps: ['angular'] },
        bootstrap: { deps: ['jquery'] },
        loadingBar: { deps: ['angular'] },
        layout: { deps: ['jquery'] },
        'ngAnimate': { deps: ['angular'] },
        'uiRoute': {
            deps: [
                'angular',
                'ngAnimate'
            ]
        }
    },
    deps: [
        'jquery',
        'angular'
    ],
    urlArgs: 'v=' + 2
});
define('main', [
    'jquery',
    'layout',
    'bootstrap',
    'lib/hyxt',
    'ocLazyLoad',
    'loadingBar',
    'angular',
    'uiRoute',
    'jquery',
    'UIBootstrap'
], function () {
    'use strict';
    require([
        'domReady!',
        'app',
        'router'
    ], function (document) {
        console.log(2);
        angular.bootstrap(document, ['webapp']);
    });
});